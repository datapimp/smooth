(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("jQuery"));
	else if(typeof define === 'function' && define.amd)
		define(["jQuery"], factory);
	else if(typeof exports === 'object')
		exports["inspector"] = factory(require("jQuery"));
	else
		root["Smooth"] = root["Smooth"] || {}, root["Smooth"]["inspector"] = factory(root["jQuery"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var ApisIndexPage, Application, Backbone, IndexPage, Link, Location, Locations, React, Router, Sidebar;

	__webpack_require__(17);

	__webpack_require__(18);

	__webpack_require__(13);

	React = __webpack_require__(10);

	Backbone = __webpack_require__(11);

	__webpack_require__(15);

	Router = __webpack_require__(9);

	Link = Router.Link;

	Locations = Router.Locations;

	Location = Router.Location;

	Sidebar = __webpack_require__(6);

	IndexPage = __webpack_require__(7);

	ApisIndexPage = __webpack_require__(8);

	Application = React.createClass({
	  onBeforeNavigation: function() {
	    return console.log("App on Before Navigation");
	  },
	  onNavigation: function() {
	    return console.log("App on Navigation");
	  },
	  render: function() {
	    return React.createElement(React.DOM.div, {
	      "className": "wrapper"
	    }, React.createElement(Sidebar, {
	      "style": "inverted thin vertical floating menu"
	    }), React.createElement(React.DOM.div, {
	      "className": "ui page grid"
	    }, React.createElement(React.DOM.div, {
	      "className": "column"
	    }, React.createElement(Locations, {
	      "onBeforeNavigation": this.onBeforeNavigation,
	      "onNavigation": this.onNavigation
	    }, React.createElement(Location, {
	      "path": "/smooth-developer-tools",
	      "handler": IndexPage
	    }), React.createElement(Location, {
	      "path": "/smooth-developer-tools/apis",
	      "handler": ApisIndexPage
	    })))));
	  }
	});

	$(function() {
	  return React.renderComponent(Application(), document.getElementById('application'));
	});


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = jQuery;

/***/ },
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {var Link, Sidebar;

	Link = __webpack_require__(9).Link;

	module.exports = Sidebar = React.createClass({
	  componentDidMount: function() {
	    return $(this.getDOMNode()).sidebar();
	  },
	  render: function() {
	    return React.createElement(React.DOM.div, {
	      "className": "ui sidebar " + this.props.style
	    }, React.createElement(Link, {
	      "className": "item",
	      "href": "/resources"
	    }, React.createElement(React.DOM.i, {
	      "className": "icon lab"
	    })));
	  }
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {var IndexPage, Link, Router;

	Router = __webpack_require__(9);

	Link = Router.Link;

	module.exports = IndexPage = React.createClass({
	  render: function() {
	    return React.createElement(React.DOM.div, null, React.createElement(React.DOM.h1, null, "Index Page"), React.createElement(Link, {
	      "href": "/smooth-developer-tools/apis"
	    }, "APIS"));
	  }
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {var ApisIndexPage;

	module.exports = ApisIndexPage = React.createClass({
	  render: function() {
	    return React.createElement(React.DOM.div, {
	      "className": "apis index page"
	    }, React.createElement(React.DOM.i, {
	      "className": "icon cloud download huge"
	    }));
	  }
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Router                    = __webpack_require__(21);
	var Route                     = __webpack_require__(20);
	var Link                      = __webpack_require__(22);

	var RouterMixin               = __webpack_require__(23);
	var AsyncRouteRenderingMixin  = __webpack_require__(24);
	var RouteRenderingMixin       = __webpack_require__(25);

	var NavigatableMixin          = __webpack_require__(26);

	var environment               = __webpack_require__(27);

	module.exports = {
	  Locations: Router.Locations,
	  Pages: Router.Pages,

	  Location: Route.Route,
	  Page: Route.Route,
	  NotFound: Route.NotFound,

	  Link: Link,

	  environment: environment,

	  RouterMixin: RouterMixin,
	  RouteRenderingMixin: RouteRenderingMixin,
	  AsyncRouteRenderingMixin: AsyncRouteRenderingMixin,

	  NavigatableMixin: NavigatableMixin
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(28);


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.1.2

	//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Backbone may be freely distributed under the MIT license.
	//     For all details and documentation:
	//     http://backbonejs.org

	(function(root, factory) {

	  // Set up Backbone appropriately for the environment. Start with AMD.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(1), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {
	      // Export global even in AMD case in case this script is loaded with
	      // others that may still expect a global Backbone.
	      root.Backbone = factory(root, exports, _, $);
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

	  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
	  } else if (typeof exports !== 'undefined') {
	    var _ = require('underscore');
	    factory(root, exports, _);

	  // Finally, as a browser global.
	  } else {
	    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));
	  }

	}(this, function(root, Backbone, _, $) {

	  // Initial Setup
	  // -------------

	  // Save the previous value of the `Backbone` variable, so that it can be
	  // restored later on, if `noConflict` is used.
	  var previousBackbone = root.Backbone;

	  // Create local references to array methods we'll want to use later.
	  var array = [];
	  var push = array.push;
	  var slice = array.slice;
	  var splice = array.splice;

	  // Current version of the library. Keep in sync with `package.json`.
	  Backbone.VERSION = '1.1.2';

	  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
	  // the `$` variable.
	  Backbone.$ = $;

	  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
	  // to its previous owner. Returns a reference to this Backbone object.
	  Backbone.noConflict = function() {
	    root.Backbone = previousBackbone;
	    return this;
	  };

	  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
	  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
	  // set a `X-Http-Method-Override` header.
	  Backbone.emulateHTTP = false;

	  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
	  // `application/json` requests ... will encode the body as
	  // `application/x-www-form-urlencoded` instead and will send the model in a
	  // form param named `model`.
	  Backbone.emulateJSON = false;

	  // Backbone.Events
	  // ---------------

	  // A module that can be mixed in to *any object* in order to provide it with
	  // custom events. You may bind with `on` or remove with `off` callback
	  // functions to an event; `trigger`-ing an event fires all callbacks in
	  // succession.
	  //
	  //     var object = {};
	  //     _.extend(object, Backbone.Events);
	  //     object.on('expand', function(){ alert('expanded'); });
	  //     object.trigger('expand');
	  //
	  var Events = Backbone.Events = {

	    // Bind an event to a `callback` function. Passing `"all"` will bind
	    // the callback to all events fired.
	    on: function(name, callback, context) {
	      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;
	      this._events || (this._events = {});
	      var events = this._events[name] || (this._events[name] = []);
	      events.push({callback: callback, context: context, ctx: context || this});
	      return this;
	    },

	    // Bind an event to only be triggered a single time. After the first time
	    // the callback is invoked, it will be removed.
	    once: function(name, callback, context) {
	      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;
	      var self = this;
	      var once = _.once(function() {
	        self.off(name, once);
	        callback.apply(this, arguments);
	      });
	      once._callback = callback;
	      return this.on(name, once, context);
	    },

	    // Remove one or many callbacks. If `context` is null, removes all
	    // callbacks with that function. If `callback` is null, removes all
	    // callbacks for the event. If `name` is null, removes all bound
	    // callbacks for all events.
	    off: function(name, callback, context) {
	      var retain, ev, events, names, i, l, j, k;
	      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;
	      if (!name && !callback && !context) {
	        this._events = void 0;
	        return this;
	      }
	      names = name ? [name] : _.keys(this._events);
	      for (i = 0, l = names.length; i < l; i++) {
	        name = names[i];
	        if (events = this._events[name]) {
	          this._events[name] = retain = [];
	          if (callback || context) {
	            for (j = 0, k = events.length; j < k; j++) {
	              ev = events[j];
	              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||
	                  (context && context !== ev.context)) {
	                retain.push(ev);
	              }
	            }
	          }
	          if (!retain.length) delete this._events[name];
	        }
	      }

	      return this;
	    },

	    // Trigger one or many events, firing all bound callbacks. Callbacks are
	    // passed the same arguments as `trigger` is, apart from the event name
	    // (unless you're listening on `"all"`, which will cause your callback to
	    // receive the true name of the event as the first argument).
	    trigger: function(name) {
	      if (!this._events) return this;
	      var args = slice.call(arguments, 1);
	      if (!eventsApi(this, 'trigger', name, args)) return this;
	      var events = this._events[name];
	      var allEvents = this._events.all;
	      if (events) triggerEvents(events, args);
	      if (allEvents) triggerEvents(allEvents, arguments);
	      return this;
	    },

	    // Tell this object to stop listening to either specific events ... or
	    // to every object it's currently listening to.
	    stopListening: function(obj, name, callback) {
	      var listeningTo = this._listeningTo;
	      if (!listeningTo) return this;
	      var remove = !name && !callback;
	      if (!callback && typeof name === 'object') callback = this;
	      if (obj) (listeningTo = {})[obj._listenId] = obj;
	      for (var id in listeningTo) {
	        obj = listeningTo[id];
	        obj.off(name, callback, this);
	        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];
	      }
	      return this;
	    }

	  };

	  // Regular expression used to split event strings.
	  var eventSplitter = /\s+/;

	  // Implement fancy features of the Events API such as multiple event
	  // names `"change blur"` and jQuery-style event maps `{change: action}`
	  // in terms of the existing API.
	  var eventsApi = function(obj, action, name, rest) {
	    if (!name) return true;

	    // Handle event maps.
	    if (typeof name === 'object') {
	      for (var key in name) {
	        obj[action].apply(obj, [key, name[key]].concat(rest));
	      }
	      return false;
	    }

	    // Handle space separated event names.
	    if (eventSplitter.test(name)) {
	      var names = name.split(eventSplitter);
	      for (var i = 0, l = names.length; i < l; i++) {
	        obj[action].apply(obj, [names[i]].concat(rest));
	      }
	      return false;
	    }

	    return true;
	  };

	  // A difficult-to-believe, but optimized internal dispatch function for
	  // triggering events. Tries to keep the usual cases speedy (most internal
	  // Backbone events have 3 arguments).
	  var triggerEvents = function(events, args) {
	    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
	    switch (args.length) {
	      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
	      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
	      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
	      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
	      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
	    }
	  };

	  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};

	  // Inversion-of-control versions of `on` and `once`. Tell *this* object to
	  // listen to an event in another object ... keeping track of what it's
	  // listening to.
	  _.each(listenMethods, function(implementation, method) {
	    Events[method] = function(obj, name, callback) {
	      var listeningTo = this._listeningTo || (this._listeningTo = {});
	      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
	      listeningTo[id] = obj;
	      if (!callback && typeof name === 'object') callback = this;
	      obj[implementation](name, callback, this);
	      return this;
	    };
	  });

	  // Aliases for backwards compatibility.
	  Events.bind   = Events.on;
	  Events.unbind = Events.off;

	  // Allow the `Backbone` object to serve as a global event bus, for folks who
	  // want global "pubsub" in a convenient place.
	  _.extend(Backbone, Events);

	  // Backbone.Model
	  // --------------

	  // Backbone **Models** are the basic data object in the framework --
	  // frequently representing a row in a table in a database on your server.
	  // A discrete chunk of data and a bunch of useful, related methods for
	  // performing computations and transformations on that data.

	  // Create a new model with the specified attributes. A client id (`cid`)
	  // is automatically generated and assigned for you.
	  var Model = Backbone.Model = function(attributes, options) {
	    var attrs = attributes || {};
	    options || (options = {});
	    this.cid = _.uniqueId('c');
	    this.attributes = {};
	    if (options.collection) this.collection = options.collection;
	    if (options.parse) attrs = this.parse(attrs, options) || {};
	    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));
	    this.set(attrs, options);
	    this.changed = {};
	    this.initialize.apply(this, arguments);
	  };

	  // Attach all inheritable methods to the Model prototype.
	  _.extend(Model.prototype, Events, {

	    // A hash of attributes whose current and previous value differ.
	    changed: null,

	    // The value returned during the last failed validation.
	    validationError: null,

	    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
	    // CouchDB users may want to set this to `"_id"`.
	    idAttribute: 'id',

	    // Initialize is an empty function by default. Override it with your own
	    // initialization logic.
	    initialize: function(){},

	    // Return a copy of the model's `attributes` object.
	    toJSON: function(options) {
	      return _.clone(this.attributes);
	    },

	    // Proxy `Backbone.sync` by default -- but override this if you need
	    // custom syncing semantics for *this* particular model.
	    sync: function() {
	      return Backbone.sync.apply(this, arguments);
	    },

	    // Get the value of an attribute.
	    get: function(attr) {
	      return this.attributes[attr];
	    },

	    // Get the HTML-escaped value of an attribute.
	    escape: function(attr) {
	      return _.escape(this.get(attr));
	    },

	    // Returns `true` if the attribute contains a value that is not null
	    // or undefined.
	    has: function(attr) {
	      return this.get(attr) != null;
	    },

	    // Set a hash of model attributes on the object, firing `"change"`. This is
	    // the core primitive operation of a model, updating the data and notifying
	    // anyone who needs to know about the change in state. The heart of the beast.
	    set: function(key, val, options) {
	      var attr, attrs, unset, changes, silent, changing, prev, current;
	      if (key == null) return this;

	      // Handle both `"key", value` and `{key: value}` -style arguments.
	      if (typeof key === 'object') {
	        attrs = key;
	        options = val;
	      } else {
	        (attrs = {})[key] = val;
	      }

	      options || (options = {});

	      // Run validation.
	      if (!this._validate(attrs, options)) return false;

	      // Extract attributes and options.
	      unset           = options.unset;
	      silent          = options.silent;
	      changes         = [];
	      changing        = this._changing;
	      this._changing  = true;

	      if (!changing) {
	        this._previousAttributes = _.clone(this.attributes);
	        this.changed = {};
	      }
	      current = this.attributes, prev = this._previousAttributes;

	      // Check for changes of `id`.
	      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];

	      // For each `set` attribute, update or delete the current value.
	      for (attr in attrs) {
	        val = attrs[attr];
	        if (!_.isEqual(current[attr], val)) changes.push(attr);
	        if (!_.isEqual(prev[attr], val)) {
	          this.changed[attr] = val;
	        } else {
	          delete this.changed[attr];
	        }
	        unset ? delete current[attr] : current[attr] = val;
	      }

	      // Trigger all relevant attribute changes.
	      if (!silent) {
	        if (changes.length) this._pending = options;
	        for (var i = 0, l = changes.length; i < l; i++) {
	          this.trigger('change:' + changes[i], this, current[changes[i]], options);
	        }
	      }

	      // You might be wondering why there's a `while` loop here. Changes can
	      // be recursively nested within `"change"` events.
	      if (changing) return this;
	      if (!silent) {
	        while (this._pending) {
	          options = this._pending;
	          this._pending = false;
	          this.trigger('change', this, options);
	        }
	      }
	      this._pending = false;
	      this._changing = false;
	      return this;
	    },

	    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
	    // if the attribute doesn't exist.
	    unset: function(attr, options) {
	      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
	    },

	    // Clear all attributes on the model, firing `"change"`.
	    clear: function(options) {
	      var attrs = {};
	      for (var key in this.attributes) attrs[key] = void 0;
	      return this.set(attrs, _.extend({}, options, {unset: true}));
	    },

	    // Determine if the model has changed since the last `"change"` event.
	    // If you specify an attribute name, determine if that attribute has changed.
	    hasChanged: function(attr) {
	      if (attr == null) return !_.isEmpty(this.changed);
	      return _.has(this.changed, attr);
	    },

	    // Return an object containing all the attributes that have changed, or
	    // false if there are no changed attributes. Useful for determining what
	    // parts of a view need to be updated and/or what attributes need to be
	    // persisted to the server. Unset attributes will be set to undefined.
	    // You can also pass an attributes object to diff against the model,
	    // determining if there *would be* a change.
	    changedAttributes: function(diff) {
	      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
	      var val, changed = false;
	      var old = this._changing ? this._previousAttributes : this.attributes;
	      for (var attr in diff) {
	        if (_.isEqual(old[attr], (val = diff[attr]))) continue;
	        (changed || (changed = {}))[attr] = val;
	      }
	      return changed;
	    },

	    // Get the previous value of an attribute, recorded at the time the last
	    // `"change"` event was fired.
	    previous: function(attr) {
	      if (attr == null || !this._previousAttributes) return null;
	      return this._previousAttributes[attr];
	    },

	    // Get all of the attributes of the model at the time of the previous
	    // `"change"` event.
	    previousAttributes: function() {
	      return _.clone(this._previousAttributes);
	    },

	    // Fetch the model from the server. If the server's representation of the
	    // model differs from its current attributes, they will be overridden,
	    // triggering a `"change"` event.
	    fetch: function(options) {
	      options = options ? _.clone(options) : {};
	      if (options.parse === void 0) options.parse = true;
	      var model = this;
	      var success = options.success;
	      options.success = function(resp) {
	        if (!model.set(model.parse(resp, options), options)) return false;
	        if (success) success(model, resp, options);
	        model.trigger('sync', model, resp, options);
	      };
	      wrapError(this, options);
	      return this.sync('read', this, options);
	    },

	    // Set a hash of model attributes, and sync the model to the server.
	    // If the server returns an attributes hash that differs, the model's
	    // state will be `set` again.
	    save: function(key, val, options) {
	      var attrs, method, xhr, attributes = this.attributes;

	      // Handle both `"key", value` and `{key: value}` -style arguments.
	      if (key == null || typeof key === 'object') {
	        attrs = key;
	        options = val;
	      } else {
	        (attrs = {})[key] = val;
	      }

	      options = _.extend({validate: true}, options);

	      // If we're not waiting and attributes exist, save acts as
	      // `set(attr).save(null, opts)` with validation. Otherwise, check if
	      // the model will be valid when the attributes, if any, are set.
	      if (attrs && !options.wait) {
	        if (!this.set(attrs, options)) return false;
	      } else {
	        if (!this._validate(attrs, options)) return false;
	      }

	      // Set temporary attributes if `{wait: true}`.
	      if (attrs && options.wait) {
	        this.attributes = _.extend({}, attributes, attrs);
	      }

	      // After a successful server-side save, the client is (optionally)
	      // updated with the server-side state.
	      if (options.parse === void 0) options.parse = true;
	      var model = this;
	      var success = options.success;
	      options.success = function(resp) {
	        // Ensure attributes are restored during synchronous saves.
	        model.attributes = attributes;
	        var serverAttrs = model.parse(resp, options);
	        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);
	        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {
	          return false;
	        }
	        if (success) success(model, resp, options);
	        model.trigger('sync', model, resp, options);
	      };
	      wrapError(this, options);

	      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
	      if (method === 'patch') options.attrs = attrs;
	      xhr = this.sync(method, this, options);

	      // Restore attributes.
	      if (attrs && options.wait) this.attributes = attributes;

	      return xhr;
	    },

	    // Destroy this model on the server if it was already persisted.
	    // Optimistically removes the model from its collection, if it has one.
	    // If `wait: true` is passed, waits for the server to respond before removal.
	    destroy: function(options) {
	      options = options ? _.clone(options) : {};
	      var model = this;
	      var success = options.success;

	      var destroy = function() {
	        model.trigger('destroy', model, model.collection, options);
	      };

	      options.success = function(resp) {
	        if (options.wait || model.isNew()) destroy();
	        if (success) success(model, resp, options);
	        if (!model.isNew()) model.trigger('sync', model, resp, options);
	      };

	      if (this.isNew()) {
	        options.success();
	        return false;
	      }
	      wrapError(this, options);

	      var xhr = this.sync('delete', this, options);
	      if (!options.wait) destroy();
	      return xhr;
	    },

	    // Default URL for the model's representation on the server -- if you're
	    // using Backbone's restful methods, override this to change the endpoint
	    // that will be called.
	    url: function() {
	      var base =
	        _.result(this, 'urlRoot') ||
	        _.result(this.collection, 'url') ||
	        urlError();
	      if (this.isNew()) return base;
	      return base.replace(/([^\/])$/, '$1/') + encodeURIComponent(this.id);
	    },

	    // **parse** converts a response into the hash of attributes to be `set` on
	    // the model. The default implementation is just to pass the response along.
	    parse: function(resp, options) {
	      return resp;
	    },

	    // Create a new model with identical attributes to this one.
	    clone: function() {
	      return new this.constructor(this.attributes);
	    },

	    // A model is new if it has never been saved to the server, and lacks an id.
	    isNew: function() {
	      return !this.has(this.idAttribute);
	    },

	    // Check if the model is currently in a valid state.
	    isValid: function(options) {
	      return this._validate({}, _.extend(options || {}, { validate: true }));
	    },

	    // Run validation against the next complete set of model attributes,
	    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
	    _validate: function(attrs, options) {
	      if (!options.validate || !this.validate) return true;
	      attrs = _.extend({}, this.attributes, attrs);
	      var error = this.validationError = this.validate(attrs, options) || null;
	      if (!error) return true;
	      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
	      return false;
	    }

	  });

	  // Underscore methods that we want to implement on the Model.
	  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];

	  // Mix in each Underscore method as a proxy to `Model#attributes`.
	  _.each(modelMethods, function(method) {
	    Model.prototype[method] = function() {
	      var args = slice.call(arguments);
	      args.unshift(this.attributes);
	      return _[method].apply(_, args);
	    };
	  });

	  // Backbone.Collection
	  // -------------------

	  // If models tend to represent a single row of data, a Backbone Collection is
	  // more analagous to a table full of data ... or a small slice or page of that
	  // table, or a collection of rows that belong together for a particular reason
	  // -- all of the messages in this particular folder, all of the documents
	  // belonging to this particular author, and so on. Collections maintain
	  // indexes of their models, both in order, and for lookup by `id`.

	  // Create a new **Collection**, perhaps to contain a specific type of `model`.
	  // If a `comparator` is specified, the Collection will maintain
	  // its models in sort order, as they're added and removed.
	  var Collection = Backbone.Collection = function(models, options) {
	    options || (options = {});
	    if (options.model) this.model = options.model;
	    if (options.comparator !== void 0) this.comparator = options.comparator;
	    this._reset();
	    this.initialize.apply(this, arguments);
	    if (models) this.reset(models, _.extend({silent: true}, options));
	  };

	  // Default options for `Collection#set`.
	  var setOptions = {add: true, remove: true, merge: true};
	  var addOptions = {add: true, remove: false};

	  // Define the Collection's inheritable methods.
	  _.extend(Collection.prototype, Events, {

	    // The default model for a collection is just a **Backbone.Model**.
	    // This should be overridden in most cases.
	    model: Model,

	    // Initialize is an empty function by default. Override it with your own
	    // initialization logic.
	    initialize: function(){},

	    // The JSON representation of a Collection is an array of the
	    // models' attributes.
	    toJSON: function(options) {
	      return this.map(function(model){ return model.toJSON(options); });
	    },

	    // Proxy `Backbone.sync` by default.
	    sync: function() {
	      return Backbone.sync.apply(this, arguments);
	    },

	    // Add a model, or list of models to the set.
	    add: function(models, options) {
	      return this.set(models, _.extend({merge: false}, options, addOptions));
	    },

	    // Remove a model, or a list of models from the set.
	    remove: function(models, options) {
	      var singular = !_.isArray(models);
	      models = singular ? [models] : _.clone(models);
	      options || (options = {});
	      var i, l, index, model;
	      for (i = 0, l = models.length; i < l; i++) {
	        model = models[i] = this.get(models[i]);
	        if (!model) continue;
	        delete this._byId[model.id];
	        delete this._byId[model.cid];
	        index = this.indexOf(model);
	        this.models.splice(index, 1);
	        this.length--;
	        if (!options.silent) {
	          options.index = index;
	          model.trigger('remove', model, this, options);
	        }
	        this._removeReference(model, options);
	      }
	      return singular ? models[0] : models;
	    },

	    // Update a collection by `set`-ing a new list of models, adding new ones,
	    // removing models that are no longer present, and merging models that
	    // already exist in the collection, as necessary. Similar to **Model#set**,
	    // the core operation for updating the data contained by the collection.
	    set: function(models, options) {
	      options = _.defaults({}, options, setOptions);
	      if (options.parse) models = this.parse(models, options);
	      var singular = !_.isArray(models);
	      models = singular ? (models ? [models] : []) : _.clone(models);
	      var i, l, id, model, attrs, existing, sort;
	      var at = options.at;
	      var targetModel = this.model;
	      var sortable = this.comparator && (at == null) && options.sort !== false;
	      var sortAttr = _.isString(this.comparator) ? this.comparator : null;
	      var toAdd = [], toRemove = [], modelMap = {};
	      var add = options.add, merge = options.merge, remove = options.remove;
	      var order = !sortable && add && remove ? [] : false;

	      // Turn bare objects into model references, and prevent invalid models
	      // from being added.
	      for (i = 0, l = models.length; i < l; i++) {
	        attrs = models[i] || {};
	        if (attrs instanceof Model) {
	          id = model = attrs;
	        } else {
	          id = attrs[targetModel.prototype.idAttribute || 'id'];
	        }

	        // If a duplicate is found, prevent it from being added and
	        // optionally merge it into the existing model.
	        if (existing = this.get(id)) {
	          if (remove) modelMap[existing.cid] = true;
	          if (merge) {
	            attrs = attrs === model ? model.attributes : attrs;
	            if (options.parse) attrs = existing.parse(attrs, options);
	            existing.set(attrs, options);
	            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;
	          }
	          models[i] = existing;

	        // If this is a new, valid model, push it to the `toAdd` list.
	        } else if (add) {
	          model = models[i] = this._prepareModel(attrs, options);
	          if (!model) continue;
	          toAdd.push(model);
	          this._addReference(model, options);
	        }

	        // Do not add multiple models with the same `id`.
	        model = existing || model;
	        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);
	        modelMap[model.id] = true;
	      }

	      // Remove nonexistent models if appropriate.
	      if (remove) {
	        for (i = 0, l = this.length; i < l; ++i) {
	          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);
	        }
	        if (toRemove.length) this.remove(toRemove, options);
	      }

	      // See if sorting is needed, update `length` and splice in new models.
	      if (toAdd.length || (order && order.length)) {
	        if (sortable) sort = true;
	        this.length += toAdd.length;
	        if (at != null) {
	          for (i = 0, l = toAdd.length; i < l; i++) {
	            this.models.splice(at + i, 0, toAdd[i]);
	          }
	        } else {
	          if (order) this.models.length = 0;
	          var orderedModels = order || toAdd;
	          for (i = 0, l = orderedModels.length; i < l; i++) {
	            this.models.push(orderedModels[i]);
	          }
	        }
	      }

	      // Silently sort the collection if appropriate.
	      if (sort) this.sort({silent: true});

	      // Unless silenced, it's time to fire all appropriate add/sort events.
	      if (!options.silent) {
	        for (i = 0, l = toAdd.length; i < l; i++) {
	          (model = toAdd[i]).trigger('add', model, this, options);
	        }
	        if (sort || (order && order.length)) this.trigger('sort', this, options);
	      }

	      // Return the added (or merged) model (or models).
	      return singular ? models[0] : models;
	    },

	    // When you have more items than you want to add or remove individually,
	    // you can reset the entire set with a new list of models, without firing
	    // any granular `add` or `remove` events. Fires `reset` when finished.
	    // Useful for bulk operations and optimizations.
	    reset: function(models, options) {
	      options || (options = {});
	      for (var i = 0, l = this.models.length; i < l; i++) {
	        this._removeReference(this.models[i], options);
	      }
	      options.previousModels = this.models;
	      this._reset();
	      models = this.add(models, _.extend({silent: true}, options));
	      if (!options.silent) this.trigger('reset', this, options);
	      return models;
	    },

	    // Add a model to the end of the collection.
	    push: function(model, options) {
	      return this.add(model, _.extend({at: this.length}, options));
	    },

	    // Remove a model from the end of the collection.
	    pop: function(options) {
	      var model = this.at(this.length - 1);
	      this.remove(model, options);
	      return model;
	    },

	    // Add a model to the beginning of the collection.
	    unshift: function(model, options) {
	      return this.add(model, _.extend({at: 0}, options));
	    },

	    // Remove a model from the beginning of the collection.
	    shift: function(options) {
	      var model = this.at(0);
	      this.remove(model, options);
	      return model;
	    },

	    // Slice out a sub-array of models from the collection.
	    slice: function() {
	      return slice.apply(this.models, arguments);
	    },

	    // Get a model from the set by id.
	    get: function(obj) {
	      if (obj == null) return void 0;
	      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];
	    },

	    // Get the model at the given index.
	    at: function(index) {
	      return this.models[index];
	    },

	    // Return models with matching attributes. Useful for simple cases of
	    // `filter`.
	    where: function(attrs, first) {
	      if (_.isEmpty(attrs)) return first ? void 0 : [];
	      return this[first ? 'find' : 'filter'](function(model) {
	        for (var key in attrs) {
	          if (attrs[key] !== model.get(key)) return false;
	        }
	        return true;
	      });
	    },

	    // Return the first model with matching attributes. Useful for simple cases
	    // of `find`.
	    findWhere: function(attrs) {
	      return this.where(attrs, true);
	    },

	    // Force the collection to re-sort itself. You don't need to call this under
	    // normal circumstances, as the set will maintain sort order as each item
	    // is added.
	    sort: function(options) {
	      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
	      options || (options = {});

	      // Run sort based on type of `comparator`.
	      if (_.isString(this.comparator) || this.comparator.length === 1) {
	        this.models = this.sortBy(this.comparator, this);
	      } else {
	        this.models.sort(_.bind(this.comparator, this));
	      }

	      if (!options.silent) this.trigger('sort', this, options);
	      return this;
	    },

	    // Pluck an attribute from each model in the collection.
	    pluck: function(attr) {
	      return _.invoke(this.models, 'get', attr);
	    },

	    // Fetch the default set of models for this collection, resetting the
	    // collection when they arrive. If `reset: true` is passed, the response
	    // data will be passed through the `reset` method instead of `set`.
	    fetch: function(options) {
	      options = options ? _.clone(options) : {};
	      if (options.parse === void 0) options.parse = true;
	      var success = options.success;
	      var collection = this;
	      options.success = function(resp) {
	        var method = options.reset ? 'reset' : 'set';
	        collection[method](resp, options);
	        if (success) success(collection, resp, options);
	        collection.trigger('sync', collection, resp, options);
	      };
	      wrapError(this, options);
	      return this.sync('read', this, options);
	    },

	    // Create a new instance of a model in this collection. Add the model to the
	    // collection immediately, unless `wait: true` is passed, in which case we
	    // wait for the server to agree.
	    create: function(model, options) {
	      options = options ? _.clone(options) : {};
	      if (!(model = this._prepareModel(model, options))) return false;
	      if (!options.wait) this.add(model, options);
	      var collection = this;
	      var success = options.success;
	      options.success = function(model, resp) {
	        if (options.wait) collection.add(model, options);
	        if (success) success(model, resp, options);
	      };
	      model.save(null, options);
	      return model;
	    },

	    // **parse** converts a response into a list of models to be added to the
	    // collection. The default implementation is just to pass it through.
	    parse: function(resp, options) {
	      return resp;
	    },

	    // Create a new collection with an identical list of models as this one.
	    clone: function() {
	      return new this.constructor(this.models);
	    },

	    // Private method to reset all internal state. Called when the collection
	    // is first initialized or reset.
	    _reset: function() {
	      this.length = 0;
	      this.models = [];
	      this._byId  = {};
	    },

	    // Prepare a hash of attributes (or other model) to be added to this
	    // collection.
	    _prepareModel: function(attrs, options) {
	      if (attrs instanceof Model) return attrs;
	      options = options ? _.clone(options) : {};
	      options.collection = this;
	      var model = new this.model(attrs, options);
	      if (!model.validationError) return model;
	      this.trigger('invalid', this, model.validationError, options);
	      return false;
	    },

	    // Internal method to create a model's ties to a collection.
	    _addReference: function(model, options) {
	      this._byId[model.cid] = model;
	      if (model.id != null) this._byId[model.id] = model;
	      if (!model.collection) model.collection = this;
	      model.on('all', this._onModelEvent, this);
	    },

	    // Internal method to sever a model's ties to a collection.
	    _removeReference: function(model, options) {
	      if (this === model.collection) delete model.collection;
	      model.off('all', this._onModelEvent, this);
	    },

	    // Internal method called every time a model in the set fires an event.
	    // Sets need to update their indexes when models change ids. All other
	    // events simply proxy through. "add" and "remove" events that originate
	    // in other collections are ignored.
	    _onModelEvent: function(event, model, collection, options) {
	      if ((event === 'add' || event === 'remove') && collection !== this) return;
	      if (event === 'destroy') this.remove(model, options);
	      if (model && event === 'change:' + model.idAttribute) {
	        delete this._byId[model.previous(model.idAttribute)];
	        if (model.id != null) this._byId[model.id] = model;
	      }
	      this.trigger.apply(this, arguments);
	    }

	  });

	  // Underscore methods that we want to implement on the Collection.
	  // 90% of the core usefulness of Backbone Collections is actually implemented
	  // right here:
	  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',
	    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',
	    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',
	    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',
	    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',
	    'lastIndexOf', 'isEmpty', 'chain', 'sample'];

	  // Mix in each Underscore method as a proxy to `Collection#models`.
	  _.each(methods, function(method) {
	    Collection.prototype[method] = function() {
	      var args = slice.call(arguments);
	      args.unshift(this.models);
	      return _[method].apply(_, args);
	    };
	  });

	  // Underscore methods that take a property name as an argument.
	  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];

	  // Use attributes instead of properties.
	  _.each(attributeMethods, function(method) {
	    Collection.prototype[method] = function(value, context) {
	      var iterator = _.isFunction(value) ? value : function(model) {
	        return model.get(value);
	      };
	      return _[method](this.models, iterator, context);
	    };
	  });

	  // Backbone.View
	  // -------------

	  // Backbone Views are almost more convention than they are actual code. A View
	  // is simply a JavaScript object that represents a logical chunk of UI in the
	  // DOM. This might be a single item, an entire list, a sidebar or panel, or
	  // even the surrounding frame which wraps your whole app. Defining a chunk of
	  // UI as a **View** allows you to define your DOM events declaratively, without
	  // having to worry about render order ... and makes it easy for the view to
	  // react to specific changes in the state of your models.

	  // Creating a Backbone.View creates its initial element outside of the DOM,
	  // if an existing element is not provided...
	  var View = Backbone.View = function(options) {
	    this.cid = _.uniqueId('view');
	    options || (options = {});
	    _.extend(this, _.pick(options, viewOptions));
	    this._ensureElement();
	    this.initialize.apply(this, arguments);
	    this.delegateEvents();
	  };

	  // Cached regex to split keys for `delegate`.
	  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

	  // List of view options to be merged as properties.
	  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

	  // Set up all inheritable **Backbone.View** properties and methods.
	  _.extend(View.prototype, Events, {

	    // The default `tagName` of a View's element is `"div"`.
	    tagName: 'div',

	    // jQuery delegate for element lookup, scoped to DOM elements within the
	    // current view. This should be preferred to global lookups where possible.
	    $: function(selector) {
	      return this.$el.find(selector);
	    },

	    // Initialize is an empty function by default. Override it with your own
	    // initialization logic.
	    initialize: function(){},

	    // **render** is the core function that your view should override, in order
	    // to populate its element (`this.el`), with the appropriate HTML. The
	    // convention is for **render** to always return `this`.
	    render: function() {
	      return this;
	    },

	    // Remove this view by taking the element out of the DOM, and removing any
	    // applicable Backbone.Events listeners.
	    remove: function() {
	      this.$el.remove();
	      this.stopListening();
	      return this;
	    },

	    // Change the view's element (`this.el` property), including event
	    // re-delegation.
	    setElement: function(element, delegate) {
	      if (this.$el) this.undelegateEvents();
	      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);
	      this.el = this.$el[0];
	      if (delegate !== false) this.delegateEvents();
	      return this;
	    },

	    // Set callbacks, where `this.events` is a hash of
	    //
	    // *{"event selector": "callback"}*
	    //
	    //     {
	    //       'mousedown .title':  'edit',
	    //       'click .button':     'save',
	    //       'click .open':       function(e) { ... }
	    //     }
	    //
	    // pairs. Callbacks will be bound to the view, with `this` set properly.
	    // Uses event delegation for efficiency.
	    // Omitting the selector binds the event to `this.el`.
	    // This only works for delegate-able events: not `focus`, `blur`, and
	    // not `change`, `submit`, and `reset` in Internet Explorer.
	    delegateEvents: function(events) {
	      if (!(events || (events = _.result(this, 'events')))) return this;
	      this.undelegateEvents();
	      for (var key in events) {
	        var method = events[key];
	        if (!_.isFunction(method)) method = this[events[key]];
	        if (!method) continue;

	        var match = key.match(delegateEventSplitter);
	        var eventName = match[1], selector = match[2];
	        method = _.bind(method, this);
	        eventName += '.delegateEvents' + this.cid;
	        if (selector === '') {
	          this.$el.on(eventName, method);
	        } else {
	          this.$el.on(eventName, selector, method);
	        }
	      }
	      return this;
	    },

	    // Clears all callbacks previously bound to the view with `delegateEvents`.
	    // You usually don't need to use this, but may wish to if you have multiple
	    // Backbone views attached to the same DOM element.
	    undelegateEvents: function() {
	      this.$el.off('.delegateEvents' + this.cid);
	      return this;
	    },

	    // Ensure that the View has a DOM element to render into.
	    // If `this.el` is a string, pass it through `$()`, take the first
	    // matching element, and re-assign it to `el`. Otherwise, create
	    // an element from the `id`, `className` and `tagName` properties.
	    _ensureElement: function() {
	      if (!this.el) {
	        var attrs = _.extend({}, _.result(this, 'attributes'));
	        if (this.id) attrs.id = _.result(this, 'id');
	        if (this.className) attrs['class'] = _.result(this, 'className');
	        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);
	        this.setElement($el, false);
	      } else {
	        this.setElement(_.result(this, 'el'), false);
	      }
	    }

	  });

	  // Backbone.sync
	  // -------------

	  // Override this function to change the manner in which Backbone persists
	  // models to the server. You will be passed the type of request, and the
	  // model in question. By default, makes a RESTful Ajax request
	  // to the model's `url()`. Some possible customizations could be:
	  //
	  // * Use `setTimeout` to batch rapid-fire updates into a single request.
	  // * Send up the models as XML instead of JSON.
	  // * Persist models via WebSockets instead of Ajax.
	  //
	  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
	  // as `POST`, with a `_method` parameter containing the true HTTP method,
	  // as well as all requests with the body as `application/x-www-form-urlencoded`
	  // instead of `application/json` with the model in a param named `model`.
	  // Useful when interfacing with server-side languages like **PHP** that make
	  // it difficult to read the body of `PUT` requests.
	  Backbone.sync = function(method, model, options) {
	    var type = methodMap[method];

	    // Default options, unless specified.
	    _.defaults(options || (options = {}), {
	      emulateHTTP: Backbone.emulateHTTP,
	      emulateJSON: Backbone.emulateJSON
	    });

	    // Default JSON-request options.
	    var params = {type: type, dataType: 'json'};

	    // Ensure that we have a URL.
	    if (!options.url) {
	      params.url = _.result(model, 'url') || urlError();
	    }

	    // Ensure that we have the appropriate request data.
	    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
	      params.contentType = 'application/json';
	      params.data = JSON.stringify(options.attrs || model.toJSON(options));
	    }

	    // For older servers, emulate JSON by encoding the request into an HTML-form.
	    if (options.emulateJSON) {
	      params.contentType = 'application/x-www-form-urlencoded';
	      params.data = params.data ? {model: params.data} : {};
	    }

	    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
	    // And an `X-HTTP-Method-Override` header.
	    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
	      params.type = 'POST';
	      if (options.emulateJSON) params.data._method = type;
	      var beforeSend = options.beforeSend;
	      options.beforeSend = function(xhr) {
	        xhr.setRequestHeader('X-HTTP-Method-Override', type);
	        if (beforeSend) return beforeSend.apply(this, arguments);
	      };
	    }

	    // Don't process data on a non-GET request.
	    if (params.type !== 'GET' && !options.emulateJSON) {
	      params.processData = false;
	    }

	    // If we're sending a `PATCH` request, and we're in an old Internet Explorer
	    // that still has ActiveX enabled by default, override jQuery to use that
	    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.
	    if (params.type === 'PATCH' && noXhrPatch) {
	      params.xhr = function() {
	        return new ActiveXObject("Microsoft.XMLHTTP");
	      };
	    }

	    // Make the request, allowing the user to override any Ajax options.
	    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
	    model.trigger('request', model, xhr, options);
	    return xhr;
	  };

	  var noXhrPatch =
	    typeof window !== 'undefined' && !!window.ActiveXObject &&
	      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);

	  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
	  var methodMap = {
	    'create': 'POST',
	    'update': 'PUT',
	    'patch':  'PATCH',
	    'delete': 'DELETE',
	    'read':   'GET'
	  };

	  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
	  // Override this if you'd like to use a different library.
	  Backbone.ajax = function() {
	    return Backbone.$.ajax.apply(Backbone.$, arguments);
	  };

	  // Backbone.Router
	  // ---------------

	  // Routers map faux-URLs to actions, and fire events when routes are
	  // matched. Creating a new one sets its `routes` hash, if not set statically.
	  var Router = Backbone.Router = function(options) {
	    options || (options = {});
	    if (options.routes) this.routes = options.routes;
	    this._bindRoutes();
	    this.initialize.apply(this, arguments);
	  };

	  // Cached regular expressions for matching named param parts and splatted
	  // parts of route strings.
	  var optionalParam = /\((.*?)\)/g;
	  var namedParam    = /(\(\?)?:\w+/g;
	  var splatParam    = /\*\w+/g;
	  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

	  // Set up all inheritable **Backbone.Router** properties and methods.
	  _.extend(Router.prototype, Events, {

	    // Initialize is an empty function by default. Override it with your own
	    // initialization logic.
	    initialize: function(){},

	    // Manually bind a single named route to a callback. For example:
	    //
	    //     this.route('search/:query/p:num', 'search', function(query, num) {
	    //       ...
	    //     });
	    //
	    route: function(route, name, callback) {
	      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
	      if (_.isFunction(name)) {
	        callback = name;
	        name = '';
	      }
	      if (!callback) callback = this[name];
	      var router = this;
	      Backbone.history.route(route, function(fragment) {
	        var args = router._extractParameters(route, fragment);
	        router.execute(callback, args);
	        router.trigger.apply(router, ['route:' + name].concat(args));
	        router.trigger('route', name, args);
	        Backbone.history.trigger('route', router, name, args);
	      });
	      return this;
	    },

	    // Execute a route handler with the provided parameters.  This is an
	    // excellent place to do pre-route setup or post-route cleanup.
	    execute: function(callback, args) {
	      if (callback) callback.apply(this, args);
	    },

	    // Simple proxy to `Backbone.history` to save a fragment into the history.
	    navigate: function(fragment, options) {
	      Backbone.history.navigate(fragment, options);
	      return this;
	    },

	    // Bind all defined routes to `Backbone.history`. We have to reverse the
	    // order of the routes here to support behavior where the most general
	    // routes can be defined at the bottom of the route map.
	    _bindRoutes: function() {
	      if (!this.routes) return;
	      this.routes = _.result(this, 'routes');
	      var route, routes = _.keys(this.routes);
	      while ((route = routes.pop()) != null) {
	        this.route(route, this.routes[route]);
	      }
	    },

	    // Convert a route string into a regular expression, suitable for matching
	    // against the current location hash.
	    _routeToRegExp: function(route) {
	      route = route.replace(escapeRegExp, '\\$&')
	                   .replace(optionalParam, '(?:$1)?')
	                   .replace(namedParam, function(match, optional) {
	                     return optional ? match : '([^/?]+)';
	                   })
	                   .replace(splatParam, '([^?]*?)');
	      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
	    },

	    // Given a route, and a URL fragment that it matches, return the array of
	    // extracted decoded parameters. Empty or unmatched parameters will be
	    // treated as `null` to normalize cross-browser behavior.
	    _extractParameters: function(route, fragment) {
	      var params = route.exec(fragment).slice(1);
	      return _.map(params, function(param, i) {
	        // Don't decode the search params.
	        if (i === params.length - 1) return param || null;
	        return param ? decodeURIComponent(param) : null;
	      });
	    }

	  });

	  // Backbone.History
	  // ----------------

	  // Handles cross-browser history management, based on either
	  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
	  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
	  // and URL fragments. If the browser supports neither (old IE, natch),
	  // falls back to polling.
	  var History = Backbone.History = function() {
	    this.handlers = [];
	    _.bindAll(this, 'checkUrl');

	    // Ensure that `History` can be used outside of the browser.
	    if (typeof window !== 'undefined') {
	      this.location = window.location;
	      this.history = window.history;
	    }
	  };

	  // Cached regex for stripping a leading hash/slash and trailing space.
	  var routeStripper = /^[#\/]|\s+$/g;

	  // Cached regex for stripping leading and trailing slashes.
	  var rootStripper = /^\/+|\/+$/g;

	  // Cached regex for detecting MSIE.
	  var isExplorer = /msie [\w.]+/;

	  // Cached regex for removing a trailing slash.
	  var trailingSlash = /\/$/;

	  // Cached regex for stripping urls of hash.
	  var pathStripper = /#.*$/;

	  // Has the history handling already been started?
	  History.started = false;

	  // Set up all inheritable **Backbone.History** properties and methods.
	  _.extend(History.prototype, Events, {

	    // The default interval to poll for hash changes, if necessary, is
	    // twenty times a second.
	    interval: 50,

	    // Are we at the app root?
	    atRoot: function() {
	      return this.location.pathname.replace(/[^\/]$/, '$&/') === this.root;
	    },

	    // Gets the true hash value. Cannot use location.hash directly due to bug
	    // in Firefox where location.hash will always be decoded.
	    getHash: function(window) {
	      var match = (window || this).location.href.match(/#(.*)$/);
	      return match ? match[1] : '';
	    },

	    // Get the cross-browser normalized URL fragment, either from the URL,
	    // the hash, or the override.
	    getFragment: function(fragment, forcePushState) {
	      if (fragment == null) {
	        if (this._hasPushState || !this._wantsHashChange || forcePushState) {
	          fragment = decodeURI(this.location.pathname + this.location.search);
	          var root = this.root.replace(trailingSlash, '');
	          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);
	        } else {
	          fragment = this.getHash();
	        }
	      }
	      return fragment.replace(routeStripper, '');
	    },

	    // Start the hash change handling, returning `true` if the current URL matches
	    // an existing route, and `false` otherwise.
	    start: function(options) {
	      if (History.started) throw new Error("Backbone.history has already been started");
	      History.started = true;

	      // Figure out the initial configuration. Do we need an iframe?
	      // Is pushState desired ... is it available?
	      this.options          = _.extend({root: '/'}, this.options, options);
	      this.root             = this.options.root;
	      this._wantsHashChange = this.options.hashChange !== false;
	      this._wantsPushState  = !!this.options.pushState;
	      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);
	      var fragment          = this.getFragment();
	      var docMode           = document.documentMode;
	      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));

	      // Normalize root to always include a leading and trailing slash.
	      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

	      if (oldIE && this._wantsHashChange) {
	        var frame = Backbone.$('<iframe src="javascript:0" tabindex="-1">');
	        this.iframe = frame.hide().appendTo('body')[0].contentWindow;
	        this.navigate(fragment);
	      }

	      // Depending on whether we're using pushState or hashes, and whether
	      // 'onhashchange' is supported, determine how we check the URL state.
	      if (this._hasPushState) {
	        Backbone.$(window).on('popstate', this.checkUrl);
	      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {
	        Backbone.$(window).on('hashchange', this.checkUrl);
	      } else if (this._wantsHashChange) {
	        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
	      }

	      // Determine if we need to change the base url, for a pushState link
	      // opened by a non-pushState browser.
	      this.fragment = fragment;
	      var loc = this.location;

	      // Transition from hashChange to pushState or vice versa if both are
	      // requested.
	      if (this._wantsHashChange && this._wantsPushState) {

	        // If we've started off with a route from a `pushState`-enabled
	        // browser, but we're currently in a browser that doesn't support it...
	        if (!this._hasPushState && !this.atRoot()) {
	          this.fragment = this.getFragment(null, true);
	          this.location.replace(this.root + '#' + this.fragment);
	          // Return immediately as browser will do redirect to new url
	          return true;

	        // Or if we've started out with a hash-based route, but we're currently
	        // in a browser where it could be `pushState`-based instead...
	        } else if (this._hasPushState && this.atRoot() && loc.hash) {
	          this.fragment = this.getHash().replace(routeStripper, '');
	          this.history.replaceState({}, document.title, this.root + this.fragment);
	        }

	      }

	      if (!this.options.silent) return this.loadUrl();
	    },

	    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
	    // but possibly useful for unit testing Routers.
	    stop: function() {
	      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);
	      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
	      History.started = false;
	    },

	    // Add a route to be tested when the fragment changes. Routes added later
	    // may override previous routes.
	    route: function(route, callback) {
	      this.handlers.unshift({route: route, callback: callback});
	    },

	    // Checks the current URL to see if it has changed, and if it has,
	    // calls `loadUrl`, normalizing across the hidden iframe.
	    checkUrl: function(e) {
	      var current = this.getFragment();
	      if (current === this.fragment && this.iframe) {
	        current = this.getFragment(this.getHash(this.iframe));
	      }
	      if (current === this.fragment) return false;
	      if (this.iframe) this.navigate(current);
	      this.loadUrl();
	    },

	    // Attempt to load the current URL fragment. If a route succeeds with a
	    // match, returns `true`. If no defined routes matches the fragment,
	    // returns `false`.
	    loadUrl: function(fragment) {
	      fragment = this.fragment = this.getFragment(fragment);
	      return _.any(this.handlers, function(handler) {
	        if (handler.route.test(fragment)) {
	          handler.callback(fragment);
	          return true;
	        }
	      });
	    },

	    // Save a fragment into the hash history, or replace the URL state if the
	    // 'replace' option is passed. You are responsible for properly URL-encoding
	    // the fragment in advance.
	    //
	    // The options object can contain `trigger: true` if you wish to have the
	    // route callback be fired (not usually desirable), or `replace: true`, if
	    // you wish to modify the current URL without adding an entry to the history.
	    navigate: function(fragment, options) {
	      if (!History.started) return false;
	      if (!options || options === true) options = {trigger: !!options};

	      var url = this.root + (fragment = this.getFragment(fragment || ''));

	      // Strip the hash for matching.
	      fragment = fragment.replace(pathStripper, '');

	      if (this.fragment === fragment) return;
	      this.fragment = fragment;

	      // Don't include a trailing slash on the root.
	      if (fragment === '' && url !== '/') url = url.slice(0, -1);

	      // If pushState is available, we use it to set the fragment as a real URL.
	      if (this._hasPushState) {
	        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

	      // If hash changes haven't been explicitly disabled, update the hash
	      // fragment to store history.
	      } else if (this._wantsHashChange) {
	        this._updateHash(this.location, fragment, options.replace);
	        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {
	          // Opening and closing the iframe tricks IE7 and earlier to push a
	          // history entry on hash-tag change.  When replace is true, we don't
	          // want this.
	          if(!options.replace) this.iframe.document.open().close();
	          this._updateHash(this.iframe.location, fragment, options.replace);
	        }

	      // If you've told us that you explicitly don't want fallback hashchange-
	      // based history, then `navigate` becomes a page refresh.
	      } else {
	        return this.location.assign(url);
	      }
	      if (options.trigger) return this.loadUrl(fragment);
	    },

	    // Update the hash location, either replacing the current entry, or adding
	    // a new one to the browser history.
	    _updateHash: function(location, fragment, replace) {
	      if (replace) {
	        var href = location.href.replace(/(javascript:|#).*$/, '');
	        location.replace(href + '#' + fragment);
	      } else {
	        // Some browsers require that `hash` contains a leading #.
	        location.hash = '#' + fragment;
	      }
	    }

	  });

	  // Create the default Backbone.history.
	  Backbone.history = new History;

	  // Helpers
	  // -------

	  // Helper function to correctly set up the prototype chain, for subclasses.
	  // Similar to `goog.inherits`, but uses a hash of prototype properties and
	  // class properties to be extended.
	  var extend = function(protoProps, staticProps) {
	    var parent = this;
	    var child;

	    // The constructor function for the new subclass is either defined by you
	    // (the "constructor" property in your `extend` definition), or defaulted
	    // by us to simply call the parent's constructor.
	    if (protoProps && _.has(protoProps, 'constructor')) {
	      child = protoProps.constructor;
	    } else {
	      child = function(){ return parent.apply(this, arguments); };
	    }

	    // Add static properties to the constructor function, if supplied.
	    _.extend(child, parent, staticProps);

	    // Set the prototype chain to inherit from `parent`, without calling
	    // `parent`'s constructor function.
	    var Surrogate = function(){ this.constructor = child; };
	    Surrogate.prototype = parent.prototype;
	    child.prototype = new Surrogate;

	    // Add prototype properties (instance properties) to the subclass,
	    // if supplied.
	    if (protoProps) _.extend(child.prototype, protoProps);

	    // Set a convenience property in case the parent's prototype is needed
	    // later.
	    child.__super__ = parent.prototype;

	    return child;
	  };

	  // Set up inheritance for the model, collection, router, view and history.
	  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

	  // Throw an error when a URL is needed, and none is supplied.
	  var urlError = function() {
	    throw new Error('A "url" property or function must be specified');
	  };

	  // Wrap an optional error callback with a fallback error event.
	  var wrapError = function(model, options) {
	    var error = options.error;
	    options.error = function(resp) {
	      if (error) error(model, resp, options);
	      model.trigger('error', model, resp, options);
	    };
	  };

	  return Backbone;

	}));


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.7.0
	//     http://underscorejs.org
	//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Underscore may be freely distributed under the MIT license.

	(function() {

	  // Baseline setup
	  // --------------

	  // Establish the root object, `window` in the browser, or `exports` on the server.
	  var root = this;

	  // Save the previous value of the `_` variable.
	  var previousUnderscore = root._;

	  // Save bytes in the minified (but not gzipped) version:
	  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

	  // Create quick reference variables for speed access to core prototypes.
	  var
	    push             = ArrayProto.push,
	    slice            = ArrayProto.slice,
	    concat           = ArrayProto.concat,
	    toString         = ObjProto.toString,
	    hasOwnProperty   = ObjProto.hasOwnProperty;

	  // All **ECMAScript 5** native function implementations that we hope to use
	  // are declared here.
	  var
	    nativeIsArray      = Array.isArray,
	    nativeKeys         = Object.keys,
	    nativeBind         = FuncProto.bind;

	  // Create a safe reference to the Underscore object for use below.
	  var _ = function(obj) {
	    if (obj instanceof _) return obj;
	    if (!(this instanceof _)) return new _(obj);
	    this._wrapped = obj;
	  };

	  // Export the Underscore object for **Node.js**, with
	  // backwards-compatibility for the old `require()` API. If we're in
	  // the browser, add `_` as a global object.
	  if (true) {
	    if (typeof module !== 'undefined' && module.exports) {
	      exports = module.exports = _;
	    }
	    exports._ = _;
	  } else {
	    root._ = _;
	  }

	  // Current version.
	  _.VERSION = '1.7.0';

	  // Internal function that returns an efficient (for current engines) version
	  // of the passed-in callback, to be repeatedly applied in other Underscore
	  // functions.
	  var createCallback = function(func, context, argCount) {
	    if (context === void 0) return func;
	    switch (argCount == null ? 3 : argCount) {
	      case 1: return function(value) {
	        return func.call(context, value);
	      };
	      case 2: return function(value, other) {
	        return func.call(context, value, other);
	      };
	      case 3: return function(value, index, collection) {
	        return func.call(context, value, index, collection);
	      };
	      case 4: return function(accumulator, value, index, collection) {
	        return func.call(context, accumulator, value, index, collection);
	      };
	    }
	    return function() {
	      return func.apply(context, arguments);
	    };
	  };

	  // A mostly-internal function to generate callbacks that can be applied
	  // to each element in a collection, returning the desired result — either
	  // identity, an arbitrary callback, a property matcher, or a property accessor.
	  _.iteratee = function(value, context, argCount) {
	    if (value == null) return _.identity;
	    if (_.isFunction(value)) return createCallback(value, context, argCount);
	    if (_.isObject(value)) return _.matches(value);
	    return _.property(value);
	  };

	  // Collection Functions
	  // --------------------

	  // The cornerstone, an `each` implementation, aka `forEach`.
	  // Handles raw objects in addition to array-likes. Treats all
	  // sparse array-likes as if they were dense.
	  _.each = _.forEach = function(obj, iteratee, context) {
	    if (obj == null) return obj;
	    iteratee = createCallback(iteratee, context);
	    var i, length = obj.length;
	    if (length === +length) {
	      for (i = 0; i < length; i++) {
	        iteratee(obj[i], i, obj);
	      }
	    } else {
	      var keys = _.keys(obj);
	      for (i = 0, length = keys.length; i < length; i++) {
	        iteratee(obj[keys[i]], keys[i], obj);
	      }
	    }
	    return obj;
	  };

	  // Return the results of applying the iteratee to each element.
	  _.map = _.collect = function(obj, iteratee, context) {
	    if (obj == null) return [];
	    iteratee = _.iteratee(iteratee, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        results = Array(length),
	        currentKey;
	    for (var index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      results[index] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };

	  var reduceError = 'Reduce of empty array with no initial value';

	  // **Reduce** builds up a single result from a list of values, aka `inject`,
	  // or `foldl`.
	  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {
	    if (obj == null) obj = [];
	    iteratee = createCallback(iteratee, context, 4);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index = 0, currentKey;
	    if (arguments.length < 3) {
	      if (!length) throw new TypeError(reduceError);
	      memo = obj[keys ? keys[index++] : index++];
	    }
	    for (; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      memo = iteratee(memo, obj[currentKey], currentKey, obj);
	    }
	    return memo;
	  };

	  // The right-associative version of reduce, also known as `foldr`.
	  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {
	    if (obj == null) obj = [];
	    iteratee = createCallback(iteratee, context, 4);
	    var keys = obj.length !== + obj.length && _.keys(obj),
	        index = (keys || obj).length,
	        currentKey;
	    if (arguments.length < 3) {
	      if (!index) throw new TypeError(reduceError);
	      memo = obj[keys ? keys[--index] : --index];
	    }
	    while (index--) {
	      currentKey = keys ? keys[index] : index;
	      memo = iteratee(memo, obj[currentKey], currentKey, obj);
	    }
	    return memo;
	  };

	  // Return the first value which passes a truth test. Aliased as `detect`.
	  _.find = _.detect = function(obj, predicate, context) {
	    var result;
	    predicate = _.iteratee(predicate, context);
	    _.some(obj, function(value, index, list) {
	      if (predicate(value, index, list)) {
	        result = value;
	        return true;
	      }
	    });
	    return result;
	  };

	  // Return all the elements that pass a truth test.
	  // Aliased as `select`.
	  _.filter = _.select = function(obj, predicate, context) {
	    var results = [];
	    if (obj == null) return results;
	    predicate = _.iteratee(predicate, context);
	    _.each(obj, function(value, index, list) {
	      if (predicate(value, index, list)) results.push(value);
	    });
	    return results;
	  };

	  // Return all the elements for which a truth test fails.
	  _.reject = function(obj, predicate, context) {
	    return _.filter(obj, _.negate(_.iteratee(predicate)), context);
	  };

	  // Determine whether all of the elements match a truth test.
	  // Aliased as `all`.
	  _.every = _.all = function(obj, predicate, context) {
	    if (obj == null) return true;
	    predicate = _.iteratee(predicate, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index, currentKey;
	    for (index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      if (!predicate(obj[currentKey], currentKey, obj)) return false;
	    }
	    return true;
	  };

	  // Determine if at least one element in the object matches a truth test.
	  // Aliased as `any`.
	  _.some = _.any = function(obj, predicate, context) {
	    if (obj == null) return false;
	    predicate = _.iteratee(predicate, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index, currentKey;
	    for (index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      if (predicate(obj[currentKey], currentKey, obj)) return true;
	    }
	    return false;
	  };

	  // Determine if the array or object contains a given value (using `===`).
	  // Aliased as `include`.
	  _.contains = _.include = function(obj, target) {
	    if (obj == null) return false;
	    if (obj.length !== +obj.length) obj = _.values(obj);
	    return _.indexOf(obj, target) >= 0;
	  };

	  // Invoke a method (with arguments) on every item in a collection.
	  _.invoke = function(obj, method) {
	    var args = slice.call(arguments, 2);
	    var isFunc = _.isFunction(method);
	    return _.map(obj, function(value) {
	      return (isFunc ? method : value[method]).apply(value, args);
	    });
	  };

	  // Convenience version of a common use case of `map`: fetching a property.
	  _.pluck = function(obj, key) {
	    return _.map(obj, _.property(key));
	  };

	  // Convenience version of a common use case of `filter`: selecting only objects
	  // containing specific `key:value` pairs.
	  _.where = function(obj, attrs) {
	    return _.filter(obj, _.matches(attrs));
	  };

	  // Convenience version of a common use case of `find`: getting the first object
	  // containing specific `key:value` pairs.
	  _.findWhere = function(obj, attrs) {
	    return _.find(obj, _.matches(attrs));
	  };

	  // Return the maximum element (or element-based computation).
	  _.max = function(obj, iteratee, context) {
	    var result = -Infinity, lastComputed = -Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = obj.length === +obj.length ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value > result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Return the minimum element (or element-based computation).
	  _.min = function(obj, iteratee, context) {
	    var result = Infinity, lastComputed = Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = obj.length === +obj.length ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value < result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed < lastComputed || computed === Infinity && result === Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Shuffle a collection, using the modern version of the
	  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
	  _.shuffle = function(obj) {
	    var set = obj && obj.length === +obj.length ? obj : _.values(obj);
	    var length = set.length;
	    var shuffled = Array(length);
	    for (var index = 0, rand; index < length; index++) {
	      rand = _.random(0, index);
	      if (rand !== index) shuffled[index] = shuffled[rand];
	      shuffled[rand] = set[index];
	    }
	    return shuffled;
	  };

	  // Sample **n** random values from a collection.
	  // If **n** is not specified, returns a single random element.
	  // The internal `guard` argument allows it to work with `map`.
	  _.sample = function(obj, n, guard) {
	    if (n == null || guard) {
	      if (obj.length !== +obj.length) obj = _.values(obj);
	      return obj[_.random(obj.length - 1)];
	    }
	    return _.shuffle(obj).slice(0, Math.max(0, n));
	  };

	  // Sort the object's values by a criterion produced by an iteratee.
	  _.sortBy = function(obj, iteratee, context) {
	    iteratee = _.iteratee(iteratee, context);
	    return _.pluck(_.map(obj, function(value, index, list) {
	      return {
	        value: value,
	        index: index,
	        criteria: iteratee(value, index, list)
	      };
	    }).sort(function(left, right) {
	      var a = left.criteria;
	      var b = right.criteria;
	      if (a !== b) {
	        if (a > b || a === void 0) return 1;
	        if (a < b || b === void 0) return -1;
	      }
	      return left.index - right.index;
	    }), 'value');
	  };

	  // An internal function used for aggregate "group by" operations.
	  var group = function(behavior) {
	    return function(obj, iteratee, context) {
	      var result = {};
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function(value, index) {
	        var key = iteratee(value, index, obj);
	        behavior(result, value, key);
	      });
	      return result;
	    };
	  };

	  // Groups the object's values by a criterion. Pass either a string attribute
	  // to group by, or a function that returns the criterion.
	  _.groupBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
	  });

	  // Indexes the object's values by a criterion, similar to `groupBy`, but for
	  // when you know that your index values will be unique.
	  _.indexBy = group(function(result, value, key) {
	    result[key] = value;
	  });

	  // Counts instances of an object that group by a certain criterion. Pass
	  // either a string attribute to count by, or a function that returns the
	  // criterion.
	  _.countBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key]++; else result[key] = 1;
	  });

	  // Use a comparator function to figure out the smallest index at which
	  // an object should be inserted so as to maintain order. Uses binary search.
	  _.sortedIndex = function(array, obj, iteratee, context) {
	    iteratee = _.iteratee(iteratee, context, 1);
	    var value = iteratee(obj);
	    var low = 0, high = array.length;
	    while (low < high) {
	      var mid = low + high >>> 1;
	      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
	    }
	    return low;
	  };

	  // Safely create a real, live array from anything iterable.
	  _.toArray = function(obj) {
	    if (!obj) return [];
	    if (_.isArray(obj)) return slice.call(obj);
	    if (obj.length === +obj.length) return _.map(obj, _.identity);
	    return _.values(obj);
	  };

	  // Return the number of elements in an object.
	  _.size = function(obj) {
	    if (obj == null) return 0;
	    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
	  };

	  // Split a collection into two arrays: one whose elements all satisfy the given
	  // predicate, and one whose elements all do not satisfy the predicate.
	  _.partition = function(obj, predicate, context) {
	    predicate = _.iteratee(predicate, context);
	    var pass = [], fail = [];
	    _.each(obj, function(value, key, obj) {
	      (predicate(value, key, obj) ? pass : fail).push(value);
	    });
	    return [pass, fail];
	  };

	  // Array Functions
	  // ---------------

	  // Get the first element of an array. Passing **n** will return the first N
	  // values in the array. Aliased as `head` and `take`. The **guard** check
	  // allows it to work with `_.map`.
	  _.first = _.head = _.take = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[0];
	    if (n < 0) return [];
	    return slice.call(array, 0, n);
	  };

	  // Returns everything but the last entry of the array. Especially useful on
	  // the arguments object. Passing **n** will return all the values in
	  // the array, excluding the last N. The **guard** check allows it to work with
	  // `_.map`.
	  _.initial = function(array, n, guard) {
	    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
	  };

	  // Get the last element of an array. Passing **n** will return the last N
	  // values in the array. The **guard** check allows it to work with `_.map`.
	  _.last = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[array.length - 1];
	    return slice.call(array, Math.max(array.length - n, 0));
	  };

	  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
	  // Especially useful on the arguments object. Passing an **n** will return
	  // the rest N values in the array. The **guard**
	  // check allows it to work with `_.map`.
	  _.rest = _.tail = _.drop = function(array, n, guard) {
	    return slice.call(array, n == null || guard ? 1 : n);
	  };

	  // Trim out all falsy values from an array.
	  _.compact = function(array) {
	    return _.filter(array, _.identity);
	  };

	  // Internal implementation of a recursive `flatten` function.
	  var flatten = function(input, shallow, strict, output) {
	    if (shallow && _.every(input, _.isArray)) {
	      return concat.apply(output, input);
	    }
	    for (var i = 0, length = input.length; i < length; i++) {
	      var value = input[i];
	      if (!_.isArray(value) && !_.isArguments(value)) {
	        if (!strict) output.push(value);
	      } else if (shallow) {
	        push.apply(output, value);
	      } else {
	        flatten(value, shallow, strict, output);
	      }
	    }
	    return output;
	  };

	  // Flatten out an array, either recursively (by default), or just one level.
	  _.flatten = function(array, shallow) {
	    return flatten(array, shallow, false, []);
	  };

	  // Return a version of the array that does not contain the specified value(s).
	  _.without = function(array) {
	    return _.difference(array, slice.call(arguments, 1));
	  };

	  // Produce a duplicate-free version of the array. If the array has already
	  // been sorted, you have the option of using a faster algorithm.
	  // Aliased as `unique`.
	  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
	    if (array == null) return [];
	    if (!_.isBoolean(isSorted)) {
	      context = iteratee;
	      iteratee = isSorted;
	      isSorted = false;
	    }
	    if (iteratee != null) iteratee = _.iteratee(iteratee, context);
	    var result = [];
	    var seen = [];
	    for (var i = 0, length = array.length; i < length; i++) {
	      var value = array[i];
	      if (isSorted) {
	        if (!i || seen !== value) result.push(value);
	        seen = value;
	      } else if (iteratee) {
	        var computed = iteratee(value, i, array);
	        if (_.indexOf(seen, computed) < 0) {
	          seen.push(computed);
	          result.push(value);
	        }
	      } else if (_.indexOf(result, value) < 0) {
	        result.push(value);
	      }
	    }
	    return result;
	  };

	  // Produce an array that contains the union: each distinct element from all of
	  // the passed-in arrays.
	  _.union = function() {
	    return _.uniq(flatten(arguments, true, true, []));
	  };

	  // Produce an array that contains every item shared between all the
	  // passed-in arrays.
	  _.intersection = function(array) {
	    if (array == null) return [];
	    var result = [];
	    var argsLength = arguments.length;
	    for (var i = 0, length = array.length; i < length; i++) {
	      var item = array[i];
	      if (_.contains(result, item)) continue;
	      for (var j = 1; j < argsLength; j++) {
	        if (!_.contains(arguments[j], item)) break;
	      }
	      if (j === argsLength) result.push(item);
	    }
	    return result;
	  };

	  // Take the difference between one array and a number of other arrays.
	  // Only the elements present in just the first array will remain.
	  _.difference = function(array) {
	    var rest = flatten(slice.call(arguments, 1), true, true, []);
	    return _.filter(array, function(value){
	      return !_.contains(rest, value);
	    });
	  };

	  // Zip together multiple lists into a single array -- elements that share
	  // an index go together.
	  _.zip = function(array) {
	    if (array == null) return [];
	    var length = _.max(arguments, 'length').length;
	    var results = Array(length);
	    for (var i = 0; i < length; i++) {
	      results[i] = _.pluck(arguments, i);
	    }
	    return results;
	  };

	  // Converts lists into objects. Pass either a single array of `[key, value]`
	  // pairs, or two parallel arrays of the same length -- one of keys, and one of
	  // the corresponding values.
	  _.object = function(list, values) {
	    if (list == null) return {};
	    var result = {};
	    for (var i = 0, length = list.length; i < length; i++) {
	      if (values) {
	        result[list[i]] = values[i];
	      } else {
	        result[list[i][0]] = list[i][1];
	      }
	    }
	    return result;
	  };

	  // Return the position of the first occurrence of an item in an array,
	  // or -1 if the item is not included in the array.
	  // If the array is large and already in sort order, pass `true`
	  // for **isSorted** to use binary search.
	  _.indexOf = function(array, item, isSorted) {
	    if (array == null) return -1;
	    var i = 0, length = array.length;
	    if (isSorted) {
	      if (typeof isSorted == 'number') {
	        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
	      } else {
	        i = _.sortedIndex(array, item);
	        return array[i] === item ? i : -1;
	      }
	    }
	    for (; i < length; i++) if (array[i] === item) return i;
	    return -1;
	  };

	  _.lastIndexOf = function(array, item, from) {
	    if (array == null) return -1;
	    var idx = array.length;
	    if (typeof from == 'number') {
	      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);
	    }
	    while (--idx >= 0) if (array[idx] === item) return idx;
	    return -1;
	  };

	  // Generate an integer Array containing an arithmetic progression. A port of
	  // the native Python `range()` function. See
	  // [the Python documentation](http://docs.python.org/library/functions.html#range).
	  _.range = function(start, stop, step) {
	    if (arguments.length <= 1) {
	      stop = start || 0;
	      start = 0;
	    }
	    step = step || 1;

	    var length = Math.max(Math.ceil((stop - start) / step), 0);
	    var range = Array(length);

	    for (var idx = 0; idx < length; idx++, start += step) {
	      range[idx] = start;
	    }

	    return range;
	  };

	  // Function (ahem) Functions
	  // ------------------

	  // Reusable constructor function for prototype setting.
	  var Ctor = function(){};

	  // Create a function bound to a given object (assigning `this`, and arguments,
	  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
	  // available.
	  _.bind = function(func, context) {
	    var args, bound;
	    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
	    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
	    args = slice.call(arguments, 2);
	    bound = function() {
	      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
	      Ctor.prototype = func.prototype;
	      var self = new Ctor;
	      Ctor.prototype = null;
	      var result = func.apply(self, args.concat(slice.call(arguments)));
	      if (_.isObject(result)) return result;
	      return self;
	    };
	    return bound;
	  };

	  // Partially apply a function by creating a version that has had some of its
	  // arguments pre-filled, without changing its dynamic `this` context. _ acts
	  // as a placeholder, allowing any combination of arguments to be pre-filled.
	  _.partial = function(func) {
	    var boundArgs = slice.call(arguments, 1);
	    return function() {
	      var position = 0;
	      var args = boundArgs.slice();
	      for (var i = 0, length = args.length; i < length; i++) {
	        if (args[i] === _) args[i] = arguments[position++];
	      }
	      while (position < arguments.length) args.push(arguments[position++]);
	      return func.apply(this, args);
	    };
	  };

	  // Bind a number of an object's methods to that object. Remaining arguments
	  // are the method names to be bound. Useful for ensuring that all callbacks
	  // defined on an object belong to it.
	  _.bindAll = function(obj) {
	    var i, length = arguments.length, key;
	    if (length <= 1) throw new Error('bindAll must be passed function names');
	    for (i = 1; i < length; i++) {
	      key = arguments[i];
	      obj[key] = _.bind(obj[key], obj);
	    }
	    return obj;
	  };

	  // Memoize an expensive function by storing its results.
	  _.memoize = function(func, hasher) {
	    var memoize = function(key) {
	      var cache = memoize.cache;
	      var address = hasher ? hasher.apply(this, arguments) : key;
	      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
	      return cache[address];
	    };
	    memoize.cache = {};
	    return memoize;
	  };

	  // Delays a function for the given number of milliseconds, and then calls
	  // it with the arguments supplied.
	  _.delay = function(func, wait) {
	    var args = slice.call(arguments, 2);
	    return setTimeout(function(){
	      return func.apply(null, args);
	    }, wait);
	  };

	  // Defers a function, scheduling it to run after the current call stack has
	  // cleared.
	  _.defer = function(func) {
	    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
	  };

	  // Returns a function, that, when invoked, will only be triggered at most once
	  // during a given window of time. Normally, the throttled function will run
	  // as much as it can, without ever going more than once per `wait` duration;
	  // but if you'd like to disable the execution on the leading edge, pass
	  // `{leading: false}`. To disable execution on the trailing edge, ditto.
	  _.throttle = function(func, wait, options) {
	    var context, args, result;
	    var timeout = null;
	    var previous = 0;
	    if (!options) options = {};
	    var later = function() {
	      previous = options.leading === false ? 0 : _.now();
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    };
	    return function() {
	      var now = _.now();
	      if (!previous && options.leading === false) previous = now;
	      var remaining = wait - (now - previous);
	      context = this;
	      args = arguments;
	      if (remaining <= 0 || remaining > wait) {
	        clearTimeout(timeout);
	        timeout = null;
	        previous = now;
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      } else if (!timeout && options.trailing !== false) {
	        timeout = setTimeout(later, remaining);
	      }
	      return result;
	    };
	  };

	  // Returns a function, that, as long as it continues to be invoked, will not
	  // be triggered. The function will be called after it stops being called for
	  // N milliseconds. If `immediate` is passed, trigger the function on the
	  // leading edge, instead of the trailing.
	  _.debounce = function(func, wait, immediate) {
	    var timeout, args, context, timestamp, result;

	    var later = function() {
	      var last = _.now() - timestamp;

	      if (last < wait && last > 0) {
	        timeout = setTimeout(later, wait - last);
	      } else {
	        timeout = null;
	        if (!immediate) {
	          result = func.apply(context, args);
	          if (!timeout) context = args = null;
	        }
	      }
	    };

	    return function() {
	      context = this;
	      args = arguments;
	      timestamp = _.now();
	      var callNow = immediate && !timeout;
	      if (!timeout) timeout = setTimeout(later, wait);
	      if (callNow) {
	        result = func.apply(context, args);
	        context = args = null;
	      }

	      return result;
	    };
	  };

	  // Returns the first function passed as an argument to the second,
	  // allowing you to adjust arguments, run code before and after, and
	  // conditionally execute the original function.
	  _.wrap = function(func, wrapper) {
	    return _.partial(wrapper, func);
	  };

	  // Returns a negated version of the passed-in predicate.
	  _.negate = function(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    };
	  };

	  // Returns a function that is the composition of a list of functions, each
	  // consuming the return value of the function that follows.
	  _.compose = function() {
	    var args = arguments;
	    var start = args.length - 1;
	    return function() {
	      var i = start;
	      var result = args[start].apply(this, arguments);
	      while (i--) result = args[i].call(this, result);
	      return result;
	    };
	  };

	  // Returns a function that will only be executed after being called N times.
	  _.after = function(times, func) {
	    return function() {
	      if (--times < 1) {
	        return func.apply(this, arguments);
	      }
	    };
	  };

	  // Returns a function that will only be executed before being called N times.
	  _.before = function(times, func) {
	    var memo;
	    return function() {
	      if (--times > 0) {
	        memo = func.apply(this, arguments);
	      } else {
	        func = null;
	      }
	      return memo;
	    };
	  };

	  // Returns a function that will be executed at most one time, no matter how
	  // often you call it. Useful for lazy initialization.
	  _.once = _.partial(_.before, 2);

	  // Object Functions
	  // ----------------

	  // Retrieve the names of an object's properties.
	  // Delegates to **ECMAScript 5**'s native `Object.keys`
	  _.keys = function(obj) {
	    if (!_.isObject(obj)) return [];
	    if (nativeKeys) return nativeKeys(obj);
	    var keys = [];
	    for (var key in obj) if (_.has(obj, key)) keys.push(key);
	    return keys;
	  };

	  // Retrieve the values of an object's properties.
	  _.values = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var values = Array(length);
	    for (var i = 0; i < length; i++) {
	      values[i] = obj[keys[i]];
	    }
	    return values;
	  };

	  // Convert an object into a list of `[key, value]` pairs.
	  _.pairs = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var pairs = Array(length);
	    for (var i = 0; i < length; i++) {
	      pairs[i] = [keys[i], obj[keys[i]]];
	    }
	    return pairs;
	  };

	  // Invert the keys and values of an object. The values must be serializable.
	  _.invert = function(obj) {
	    var result = {};
	    var keys = _.keys(obj);
	    for (var i = 0, length = keys.length; i < length; i++) {
	      result[obj[keys[i]]] = keys[i];
	    }
	    return result;
	  };

	  // Return a sorted list of the function names available on the object.
	  // Aliased as `methods`
	  _.functions = _.methods = function(obj) {
	    var names = [];
	    for (var key in obj) {
	      if (_.isFunction(obj[key])) names.push(key);
	    }
	    return names.sort();
	  };

	  // Extend a given object with all the properties in passed-in object(s).
	  _.extend = function(obj) {
	    if (!_.isObject(obj)) return obj;
	    var source, prop;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	      source = arguments[i];
	      for (prop in source) {
	        if (hasOwnProperty.call(source, prop)) {
	            obj[prop] = source[prop];
	        }
	      }
	    }
	    return obj;
	  };

	  // Return a copy of the object only containing the whitelisted properties.
	  _.pick = function(obj, iteratee, context) {
	    var result = {}, key;
	    if (obj == null) return result;
	    if (_.isFunction(iteratee)) {
	      iteratee = createCallback(iteratee, context);
	      for (key in obj) {
	        var value = obj[key];
	        if (iteratee(value, key, obj)) result[key] = value;
	      }
	    } else {
	      var keys = concat.apply([], slice.call(arguments, 1));
	      obj = new Object(obj);
	      for (var i = 0, length = keys.length; i < length; i++) {
	        key = keys[i];
	        if (key in obj) result[key] = obj[key];
	      }
	    }
	    return result;
	  };

	   // Return a copy of the object without the blacklisted properties.
	  _.omit = function(obj, iteratee, context) {
	    if (_.isFunction(iteratee)) {
	      iteratee = _.negate(iteratee);
	    } else {
	      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);
	      iteratee = function(value, key) {
	        return !_.contains(keys, key);
	      };
	    }
	    return _.pick(obj, iteratee, context);
	  };

	  // Fill in a given object with default properties.
	  _.defaults = function(obj) {
	    if (!_.isObject(obj)) return obj;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	      var source = arguments[i];
	      for (var prop in source) {
	        if (obj[prop] === void 0) obj[prop] = source[prop];
	      }
	    }
	    return obj;
	  };

	  // Create a (shallow-cloned) duplicate of an object.
	  _.clone = function(obj) {
	    if (!_.isObject(obj)) return obj;
	    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
	  };

	  // Invokes interceptor with the obj, and then returns obj.
	  // The primary purpose of this method is to "tap into" a method chain, in
	  // order to perform operations on intermediate results within the chain.
	  _.tap = function(obj, interceptor) {
	    interceptor(obj);
	    return obj;
	  };

	  // Internal recursive comparison function for `isEqual`.
	  var eq = function(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b) return a !== 0 || 1 / a === 1 / b;
	    // A strict comparison is necessary because `null == undefined`.
	    if (a == null || b == null) return a === b;
	    // Unwrap any wrapped objects.
	    if (a instanceof _) a = a._wrapped;
	    if (b instanceof _) b = b._wrapped;
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b)) return false;
	    switch (className) {
	      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	      case '[object RegExp]':
	      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	      case '[object String]':
	        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	        // equivalent to `new String("5")`.
	        return '' + a === '' + b;
	      case '[object Number]':
	        // `NaN`s are equivalent, but non-reflexive.
	        // Object(NaN) is equivalent to NaN
	        if (+a !== +a) return +b !== +b;
	        // An `egal` comparison is performed for other numeric values.
	        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	      case '[object Date]':
	      case '[object Boolean]':
	        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	        // millisecond representations. Note that invalid dates with millisecond representations
	        // of `NaN` are not equivalent.
	        return +a === +b;
	    }
	    if (typeof a != 'object' || typeof b != 'object') return false;
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
	    var length = aStack.length;
	    while (length--) {
	      // Linear search. Performance is inversely proportional to the number of
	      // unique nested structures.
	      if (aStack[length] === a) return bStack[length] === b;
	    }
	    // Objects with different constructors are not equivalent, but `Object`s
	    // from different frames are.
	    var aCtor = a.constructor, bCtor = b.constructor;
	    if (
	      aCtor !== bCtor &&
	      // Handle Object.create(x) cases
	      'constructor' in a && 'constructor' in b &&
	      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
	        _.isFunction(bCtor) && bCtor instanceof bCtor)
	    ) {
	      return false;
	    }
	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);
	    var size, result;
	    // Recursively compare objects and arrays.
	    if (className === '[object Array]') {
	      // Compare array lengths to determine if a deep comparison is necessary.
	      size = a.length;
	      result = size === b.length;
	      if (result) {
	        // Deep compare the contents, ignoring non-numeric properties.
	        while (size--) {
	          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
	        }
	      }
	    } else {
	      // Deep compare objects.
	      var keys = _.keys(a), key;
	      size = keys.length;
	      // Ensure that both objects contain the same number of properties before comparing deep equality.
	      result = _.keys(b).length === size;
	      if (result) {
	        while (size--) {
	          // Deep compare each member
	          key = keys[size];
	          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
	        }
	      }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return result;
	  };

	  // Perform a deep comparison to check if two objects are equal.
	  _.isEqual = function(a, b) {
	    return eq(a, b, [], []);
	  };

	  // Is a given array, string, or object empty?
	  // An "empty" object has no enumerable own-properties.
	  _.isEmpty = function(obj) {
	    if (obj == null) return true;
	    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;
	    for (var key in obj) if (_.has(obj, key)) return false;
	    return true;
	  };

	  // Is a given value a DOM element?
	  _.isElement = function(obj) {
	    return !!(obj && obj.nodeType === 1);
	  };

	  // Is a given value an array?
	  // Delegates to ECMA5's native Array.isArray
	  _.isArray = nativeIsArray || function(obj) {
	    return toString.call(obj) === '[object Array]';
	  };

	  // Is a given variable an object?
	  _.isObject = function(obj) {
	    var type = typeof obj;
	    return type === 'function' || type === 'object' && !!obj;
	  };

	  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
	  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
	    _['is' + name] = function(obj) {
	      return toString.call(obj) === '[object ' + name + ']';
	    };
	  });

	  // Define a fallback version of the method in browsers (ahem, IE), where
	  // there isn't any inspectable "Arguments" type.
	  if (!_.isArguments(arguments)) {
	    _.isArguments = function(obj) {
	      return _.has(obj, 'callee');
	    };
	  }

	  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.
	  if (true) {
	    _.isFunction = function(obj) {
	      return typeof obj == 'function' || false;
	    };
	  }

	  // Is a given object a finite number?
	  _.isFinite = function(obj) {
	    return isFinite(obj) && !isNaN(parseFloat(obj));
	  };

	  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
	  _.isNaN = function(obj) {
	    return _.isNumber(obj) && obj !== +obj;
	  };

	  // Is a given value a boolean?
	  _.isBoolean = function(obj) {
	    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
	  };

	  // Is a given value equal to null?
	  _.isNull = function(obj) {
	    return obj === null;
	  };

	  // Is a given variable undefined?
	  _.isUndefined = function(obj) {
	    return obj === void 0;
	  };

	  // Shortcut function for checking if an object has a given property directly
	  // on itself (in other words, not on a prototype).
	  _.has = function(obj, key) {
	    return obj != null && hasOwnProperty.call(obj, key);
	  };

	  // Utility Functions
	  // -----------------

	  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
	  // previous owner. Returns a reference to the Underscore object.
	  _.noConflict = function() {
	    root._ = previousUnderscore;
	    return this;
	  };

	  // Keep the identity function around for default iteratees.
	  _.identity = function(value) {
	    return value;
	  };

	  _.constant = function(value) {
	    return function() {
	      return value;
	    };
	  };

	  _.noop = function(){};

	  _.property = function(key) {
	    return function(obj) {
	      return obj[key];
	    };
	  };

	  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
	  _.matches = function(attrs) {
	    var pairs = _.pairs(attrs), length = pairs.length;
	    return function(obj) {
	      if (obj == null) return !length;
	      obj = new Object(obj);
	      for (var i = 0; i < length; i++) {
	        var pair = pairs[i], key = pair[0];
	        if (pair[1] !== obj[key] || !(key in obj)) return false;
	      }
	      return true;
	    };
	  };

	  // Run a function **n** times.
	  _.times = function(n, iteratee, context) {
	    var accum = Array(Math.max(0, n));
	    iteratee = createCallback(iteratee, context, 1);
	    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
	    return accum;
	  };

	  // Return a random integer between min and max (inclusive).
	  _.random = function(min, max) {
	    if (max == null) {
	      max = min;
	      min = 0;
	    }
	    return min + Math.floor(Math.random() * (max - min + 1));
	  };

	  // A (possibly faster) way to get the current timestamp as an integer.
	  _.now = Date.now || function() {
	    return new Date().getTime();
	  };

	   // List of HTML entities for escaping.
	  var escapeMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#x27;',
	    '`': '&#x60;'
	  };
	  var unescapeMap = _.invert(escapeMap);

	  // Functions for escaping and unescaping strings to/from HTML interpolation.
	  var createEscaper = function(map) {
	    var escaper = function(match) {
	      return map[match];
	    };
	    // Regexes for identifying a key that needs to be escaped
	    var source = '(?:' + _.keys(map).join('|') + ')';
	    var testRegexp = RegExp(source);
	    var replaceRegexp = RegExp(source, 'g');
	    return function(string) {
	      string = string == null ? '' : '' + string;
	      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	    };
	  };
	  _.escape = createEscaper(escapeMap);
	  _.unescape = createEscaper(unescapeMap);

	  // If the value of the named `property` is a function then invoke it with the
	  // `object` as context; otherwise, return it.
	  _.result = function(object, property) {
	    if (object == null) return void 0;
	    var value = object[property];
	    return _.isFunction(value) ? object[property]() : value;
	  };

	  // Generate a unique integer id (unique within the entire client session).
	  // Useful for temporary DOM ids.
	  var idCounter = 0;
	  _.uniqueId = function(prefix) {
	    var id = ++idCounter + '';
	    return prefix ? prefix + id : id;
	  };

	  // By default, Underscore uses ERB-style template delimiters, change the
	  // following template settings to use alternative delimiters.
	  _.templateSettings = {
	    evaluate    : /<%([\s\S]+?)%>/g,
	    interpolate : /<%=([\s\S]+?)%>/g,
	    escape      : /<%-([\s\S]+?)%>/g
	  };

	  // When customizing `templateSettings`, if you don't want to define an
	  // interpolation, evaluation or escaping regex, we need one that is
	  // guaranteed not to match.
	  var noMatch = /(.)^/;

	  // Certain characters need to be escaped so that they can be put into a
	  // string literal.
	  var escapes = {
	    "'":      "'",
	    '\\':     '\\',
	    '\r':     'r',
	    '\n':     'n',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

	  var escapeChar = function(match) {
	    return '\\' + escapes[match];
	  };

	  // JavaScript micro-templating, similar to John Resig's implementation.
	  // Underscore templating handles arbitrary delimiters, preserves whitespace,
	  // and correctly escapes quotes within interpolated code.
	  // NB: `oldSettings` only exists for backwards compatibility.
	  _.template = function(text, settings, oldSettings) {
	    if (!settings && oldSettings) settings = oldSettings;
	    settings = _.defaults({}, settings, _.templateSettings);

	    // Combine delimiters into one regular expression via alternation.
	    var matcher = RegExp([
	      (settings.escape || noMatch).source,
	      (settings.interpolate || noMatch).source,
	      (settings.evaluate || noMatch).source
	    ].join('|') + '|$', 'g');

	    // Compile the template source, escaping string literals appropriately.
	    var index = 0;
	    var source = "__p+='";
	    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
	      source += text.slice(index, offset).replace(escaper, escapeChar);
	      index = offset + match.length;

	      if (escape) {
	        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
	      } else if (interpolate) {
	        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
	      } else if (evaluate) {
	        source += "';\n" + evaluate + "\n__p+='";
	      }

	      // Adobe VMs need the match returned to produce the correct offest.
	      return match;
	    });
	    source += "';\n";

	    // If a variable is not specified, place data values in local scope.
	    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

	    source = "var __t,__p='',__j=Array.prototype.join," +
	      "print=function(){__p+=__j.call(arguments,'');};\n" +
	      source + 'return __p;\n';

	    try {
	      var render = new Function(settings.variable || 'obj', '_', source);
	    } catch (e) {
	      e.source = source;
	      throw e;
	    }

	    var template = function(data) {
	      return render.call(this, data, _);
	    };

	    // Provide the compiled source as a convenience for precompilation.
	    var argument = settings.variable || 'obj';
	    template.source = 'function(' + argument + '){\n' + source + '}';

	    return template;
	  };

	  // Add a "chain" function. Start chaining a wrapped Underscore object.
	  _.chain = function(obj) {
	    var instance = _(obj);
	    instance._chain = true;
	    return instance;
	  };

	  // OOP
	  // ---------------
	  // If Underscore is called as a function, it returns a wrapped object that
	  // can be used OO-style. This wrapper holds altered versions of all the
	  // underscore functions. Wrapped objects may be chained.

	  // Helper function to continue chaining intermediate results.
	  var result = function(obj) {
	    return this._chain ? _(obj).chain() : obj;
	  };

	  // Add your own custom functions to the Underscore object.
	  _.mixin = function(obj) {
	    _.each(_.functions(obj), function(name) {
	      var func = _[name] = obj[name];
	      _.prototype[name] = function() {
	        var args = [this._wrapped];
	        push.apply(args, arguments);
	        return result.call(this, func.apply(_, args));
	      };
	    });
	  };

	  // Add all of the Underscore functions to the wrapper object.
	  _.mixin(_);

	  // Add all mutator Array functions to the wrapper.
	  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      var obj = this._wrapped;
	      method.apply(obj, arguments);
	      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
	      return result.call(this, obj);
	    };
	  });

	  // Add all accessor Array functions to the wrapper.
	  _.each(['concat', 'join', 'slice'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      return result.call(this, method.apply(this._wrapped, arguments));
	    };
	  });

	  // Extracts the result from a wrapped and chained object.
	  _.prototype.value = function() {
	    return this._wrapped;
	  };

	  // AMD registration happens at the end for compatibility with AMD loaders
	  // that may not enforce next-turn semantics on modules. Even though general
	  // practice for AMD registration is to be anonymous, underscore registers
	  // as a named module because, like jQuery, it is a base library that is
	  // popular enough to be bundled in a third party lib, but not be part of
	  // an AMD load request. Those cases could generate an error when an
	  // anonymous define() is called outside of a loader request.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}.call(this));


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(14);
	if(typeof content === 'string') content = [module.id, content, ''];
	// add the styles to the DOM
	var update = __webpack_require__(16)(content);
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/jonathan/Projects/smooth/developer-tools/node_modules/css-loader/index.js!/Users/jonathan/Projects/smooth/developer-tools/node_modules/sass-loader/index.js?outputStyle=expanded!/Users/jonathan/Projects/smooth/developer-tools/src/styles/index.scss", function() {
			var newContent = require("!!/Users/jonathan/Projects/smooth/developer-tools/node_modules/css-loader/index.js!/Users/jonathan/Projects/smooth/developer-tools/node_modules/sass-loader/index.js?outputStyle=expanded!/Users/jonathan/Projects/smooth/developer-tools/src/styles/index.scss");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(29)();
	exports.push([module.id, "", ""]);

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Backbone React Component
	// ========================
	//
	//     Backbone.React.Component v0.7.0
	//
	//     (c) 2014 "Magalhas" José Magalhães <magalhas@gmail.com>
	//     Backbone.React.Component can be freely distributed under the MIT license.
	//
	//
	// `Backbone.React.Component` is a mixin that glues [Backbone](http://backbonejs.org/)
	// models and collections into [React](http://facebook.github.io/react/) components.
	//
	// When the component is mounted, a wrapper starts listening to models and
	// collections changes to automatically set your component props and achieve UI
	// binding through reactive updates.
	//
	//
	//
	// Basic Usage
	//
	//     var MyComponent = React.createClass({
	//       mixins: [Backbone.React.Component.mixin],
	//       render: function () {
	//         return <div>{this.props.foo}</div>;
	//       }
	//     });
	//     var model = new Backbone.Model({foo: 'bar'});
	//     React.renderComponent(<MyComponent model={model} />, document.body);

	'use strict';
	(function (root, factory) {
	  // Universal module definition
	  if (true)
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10), __webpack_require__(11), __webpack_require__(12)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  else if (typeof module !== 'undefined' && module.exports) {
	    var React = require('react');
	    var Backbone = require('backbone');
	    var _ = require('underscore');
	    module.exports = factory(React, Backbone, _);
	  } else
	    factory(root.React, root.Backbone, root._);
	}(this, function (React, Backbone, _) {
	  !Backbone.React && (Backbone.React = {});
	  !Backbone.React.Component && (Backbone.React.Component = {});
	  // Mixin used in all component instances. Exported through `Backbone.React.Component.mixin`.
	  var mixin = Backbone.React.Component.mixin = {
	    // Sets `this.el` and `this.$el` when the component mounts.
	    componentDidMount: function () {
	      this.setElement(this.getDOMNode());
	    },
	    // Sets `this.el` and `this.$el` when the component updates.
	    componentDidUpdate: function () {
	      this.setElement(this.getDOMNode());
	    },
	    // When the component mounts, instance a `Wrapper` to take care
	    // of models and collections binding with `this.props`.
	    componentWillMount: function () {
	      if (!this.wrapper) {
	        this.wrapper = new Wrapper(this, this.props);
	      }
	    },
	    // When the component unmounts, dispose listeners and delete
	    // `this.wrapper` reference.
	    componentWillUnmount: function () {
	      if (this.wrapper) {
	        this.wrapper.stopListening();
	        delete this.wrapper;
	      }
	    },
	    // In order to allow passing nested models as reference we filter
	    // `nextProps.model`.
	    componentWillReceiveProps: function (nextProps) {
	      var model = nextProps.model;
	      if (this.wrapper.model && model) {
	        delete nextProps.model;
	        if (this.wrapper.model.attributes) {
	          this.wrapper.setProps(model, void 0, nextProps);
	        } else {
	          for (var key in model) {
	            this.wrapper.setProps(model[key], key, nextProps);
	          }
	        }
	      }
	    },
	    // Shortcut to `this.$el.find`. Inspired by `Backbone.View`.
	    $: function () {
	      return this.$el && this.$el.find.apply(this.$el, arguments);
	    },
	    // Crawls up to the owner of the component searching for a collection.
	    getCollection: function () {
	      var owner = this;
	      var lookup = owner.wrapper;
	      while (!lookup.collection) {
	        owner = owner._owner;
	        if (!owner) {
	          throw new Error('Collection not found');
	        }
	        lookup = owner.wrapper;
	      }
	      return lookup.collection;
	    },
	    // Crawls up to the owner of the component searching for a model.
	    getModel: function () {
	      var owner = this;
	      var lookup = owner.wrapper;
	      while (!lookup.model) {
	        owner = owner._owner;
	        if (!owner) {
	          throw new Error('Model not found');
	        }
	        lookup = owner.wrapper;
	      }
	      return lookup.model;
	    },
	    // Crawls `this._owner` recursively until it finds the owner of `this`
	    // component. In case of being a parent component (no owners) it returns itself.
	    getOwner: function () {
	      var owner = this;
	      while (owner._owner) {
	        owner = owner._owner;
	      }
	      return owner;
	    },
	    // Sets a DOM element to render/mount this component on this.el and this.$el.
	    setElement: function (el) {
	      if (el && Backbone.$ && el instanceof Backbone.$) {
	        if (el.length > 1) {
	          throw new Error('You can only assign one element to a component');
	        }
	        this.el = el[0];
	        this.$el = el;
	      } else if (el) {
	        this.el = el;
	        Backbone.$ && (this.$el = Backbone.$(el));
	      }
	      return this;
	    }
	  };
	  // Binds models and collections to a `React.Component`. It mixes `Backbone.Events`.
	  function Wrapper (component, props) {
	    props = props || {};
	    var model = props.model, collection = props.collection;
	    // Check if `props.model` is a `Backbone.Model` or an hashmap of them
	    if (typeof model !== 'undefined' && (model.attributes ||
	        typeof model === 'object' && _.values(model)[0].attributes)) {
	      delete props.model;
	      // The model(s) bound to this component
	      this.model = model;
	      // Set model(s) attributes on `props` for the first render
	      this.setPropsBackbone(model, void 0, props);
	    }
	    // Check if `props.collection` is a `Backbone.Collection` or an hashmap of them
	    if (typeof collection !== 'undefined' && (collection.models ||
	        typeof collection === 'object' && _.values(collection)[0].models)) {
	      delete props.collection;
	      // The collection(s) bound to this component
	      this.collection = collection;
	      // Set collection(s) models on props for the first render
	      this.setPropsBackbone(collection, void 0, props);
	    }
	    // 1:1 relation with the `component`
	    this.component = component;
	    // Start listeners if this is a root node and if there's DOM
	    if (!component._owner && typeof document !== 'undefined') {
	      this.startModelListeners();
	      this.startCollectionListeners();
	    }
	  }
	  // Mixing `Backbone.Events` into `Wrapper.prototype`
	  _.extend(Wrapper.prototype, Backbone.Events, {
	    // Sets `this.props` when a model/collection request results in error. It delegates
	    // to `this.setProps`. It listens to `Backbone.Model#error` and `Backbone.Collection#error`.
	    onError: function (modelOrCollection, res, options) {
	      // Set props only if there's no silent option
	      if (!options.silent)
	        this.setProps({
	          isRequesting: false,
	          hasError: true,
	          error: res
	        });
	    },
	    // Sets `this.props` when a model/collection request starts. It delegates to
	    // `this.setProps`. It listens to `Backbone.Model#request` and `Backbone.Collection#request`.
	    onRequest: function (modelOrCollection, xhr, options) {
	      // Set props only if there's no silent option
	      if (!options.silent)
	        this.setProps({
	          isRequesting: true,
	          hasError: false
	        });
	    },
	    // Sets `this.props` when a model/collection syncs. It delegates to `this.setProps`.
	    // It listens to `Backbone.Model#sync` and `Backbone.Collection#sync`
	    onSync: function (modelOrCollection, res, options) {
	      // Set props only if there's no silent option
	      if (!options.silent)
	        this.setProps({isRequesting: false});
	    },
	    // Used internally to set `this.collection` or `this.model` on `this.props`. Delegates to
	    // `this.setProps`. It listens to `Backbone.Collection` events such as `add`, `remove`,
	    // `change`, `sort`, `reset` and to `Backbone.Model` `change`.
	    setPropsBackbone: function (modelOrCollection, key, target) {
	      if (!(modelOrCollection.models || modelOrCollection.attributes)) {
	        for (key in modelOrCollection)
	            this.setPropsBackbone(modelOrCollection[key], key, target);
	        return;
	      }
	      this.setProps.apply(this, arguments);
	    },
	    // Sets a model, collection or object into props by delegating to `this.setProps`.
	    setProps: function (modelOrCollection, key, target) {
	      var props = {};
	      var newProps = modelOrCollection.toJSON ? modelOrCollection.toJSON() : modelOrCollection;

	      if (key) {
	        props[key] = newProps;
	      } else if (modelOrCollection instanceof Backbone.Collection) {
	        props.collection = newProps;
	      } else {
	        props = newProps;
	      }

	      if (target) {
	        _.extend(target, props);
	      } else {
	        this.nextProps = _.extend(this.nextProps || {}, props);
	        _.defer(_.bind(function () {
	          if (this.nextProps) {
	            this.component && this.component.setProps(this.nextProps);
	            delete this.nextProps;
	          }
	        }, this));
	      }
	    },
	    // Binds the component to any collection changes.
	    startCollectionListeners: function (collection, key) {
	      if (!collection) collection = this.collection;
	      if (collection) {
	        if (collection.models)
	          this
	            .listenTo(collection, 'add remove change sort reset',
	              _.partial(this.setPropsBackbone, collection, key, void 0))
	            .listenTo(collection, 'error', this.onError)
	            .listenTo(collection, 'request', this.onRequest)
	            .listenTo(collection, 'sync', this.onSync);
	        else if (typeof collection === 'object')
	          for (key in collection)
	            if (collection.hasOwnProperty(key))
	              this.startCollectionListeners(collection[key], key);
	      }
	    },
	    // Binds the component to any model changes.
	    startModelListeners: function (model, key) {
	      if (!model) model = this.model;
	      if (model) {
	        if (model.attributes)
	          this
	            .listenTo(model, 'change',
	              _.partial(this.setPropsBackbone, model, key, void 0))
	            .listenTo(model, 'error', this.onError)
	            .listenTo(model, 'request', this.onRequest)
	            .listenTo(model, 'sync', this.onSync);
	        else if (typeof model === 'object')
	          for (key in model)
	            this.startModelListeners(model[key], key);
	      }
	    }
	  });

	  // Expose `Backbone.React.Component.mixin`.
	  return Backbone.React.Component.mixin;
	}));
	// <a href="https://github.com/magalhas/backbone-react-component"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://github-camo.global.ssl.fastly.net/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {};

	module.exports = function(list) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
		var styles = listToStyles(list);
		addStylesToDom(styles);
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j]));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j]));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			// var sourceMap = item[3];
			var part = {css: css, media: media/*, sourceMap: sourceMap*/};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function addStyle(obj) {
		var styleElement = document.createElement("style");
		var head = document.head || document.getElementsByTagName("head")[0];
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		applyToTag(styleElement, obj);
		return function(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media /*&& newObj.sourceMap === obj.sourceMap*/)
					return;
				applyToTag(styleElement, obj = newObj);
			} else {
				head.removeChild(styleElement);
			}
		};
	};

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		// var sourceMap = obj.sourceMap;

		// No browser support
		// if(sourceMap && typeof btoa === "function") {
			// try {
				// css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(JSON.stringify(sourceMap)) + " */";
			// } catch(e) {}
		// }
		if(media) {
			styleElement.setAttribute("media", media)
		}
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}

	}


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * # Semantic - Accordion
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.accordion = function(parameters) {
	  var
	    $allModules     = $(this),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.accordion.settings, parameters)
	          : $.extend({}, $.fn.accordion.settings),

	        className       = settings.className,
	        namespace       = settings.namespace,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,
	        moduleSelector  = $allModules.selector || '',

	        $module  = $(this),
	        $title   = $module.find(selector.title),
	        $content = $module.find(selector.content),

	        element  = this,
	        instance = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing accordion with bound events', $module);
	          // initializing
	          $title
	            .on('click' + eventNamespace, module.event.click)
	          ;
	          module.instantiate();
	        },

	        instantiate: function() {
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.debug('Destroying previous accordion for', $module);
	          $module
	            .removeData(moduleNamespace)
	          ;
	          $title
	            .off(eventNamespace)
	          ;
	        },

	        event: {
	          click: function() {
	            module.verbose('Title clicked', this);
	            var
	              $activeTitle = $(this),
	              index        = $title.index($activeTitle)
	            ;
	            module.toggle(index);
	          },
	          resetDisplay: function() {
	            $(this).css('display', '');
	            if( $(this).attr('style') == '') {
	              $(this)
	                .attr('style', '')
	                .removeAttr('style')
	              ;
	            }
	          },
	          resetOpacity: function() {
	            $(this).css('opacity', '');
	            if( $(this).attr('style') == '') {
	              $(this)
	                .attr('style', '')
	                .removeAttr('style')
	              ;
	            }
	          }
	        },

	        toggle: function(index) {
	          module.debug('Toggling content content at index', index);
	          var
	            $activeTitle   = $title.eq(index),
	            $activeContent = $activeTitle.next($content),
	            contentIsOpen  = $activeContent.is(':visible')
	          ;
	          if(contentIsOpen) {
	            if(settings.collapsible) {
	              module.close(index);
	            }
	            else {
	              module.debug('Cannot close accordion content collapsing is disabled');
	            }
	          }
	          else {
	            module.open(index);
	          }
	        },

	        open: function(index) {
	          var
	            $activeTitle     = $title.eq(index),
	            $activeContent   = $activeTitle.next($content),
	            $otherSections   = module.is.menu()
	              ? $activeTitle.parent().siblings(selector.item).find(selector.title)
	              : $activeTitle.siblings(selector.title),
	            $previousTitle   = $otherSections.filter('.' + className.active),
	            $previousContent = $previousTitle.next($title),
	            contentIsOpen    =  ($previousTitle.size() > 0)
	          ;
	          if( !$activeContent.is(':animated') ) {
	            module.debug('Opening accordion content', $activeTitle);
	            if(settings.exclusive && contentIsOpen) {
	              $previousTitle
	                .removeClass(className.active)
	              ;
	              $previousContent
	                .stop()
	                .children()
	                  .stop()
	                  .animate({
	                    opacity: 0
	                  }, settings.duration, module.event.resetOpacity)
	                  .end()
	                .slideUp(settings.duration , settings.easing, function() {
	                  $previousContent
	                    .removeClass(className.active)
	                    .children()
	                  ;
	                  $.proxy(module.event.resetDisplay, this)();
	                })
	              ;
	            }
	            $activeTitle
	              .addClass(className.active)
	            ;
	            $activeContent
	              .stop()
	              .children()
	                .stop()
	                .animate({
	                  opacity: 1
	                }, settings.duration)
	                .end()
	              .slideDown(settings.duration, settings.easing, function() {
	                $activeContent
	                  .addClass(className.active)
	                ;
	                $.proxy(module.event.resetDisplay, this)();
	                $.proxy(settings.onOpen, $activeContent)();
	                $.proxy(settings.onChange, $activeContent)();
	              })
	            ;
	          }
	        },

	        close: function(index) {
	          var
	            $activeTitle   = $title.eq(index),
	            $activeContent = $activeTitle.next($content)
	          ;
	          module.debug('Closing accordion content', $activeContent);
	          $activeTitle
	            .removeClass(className.active)
	          ;
	          $activeContent
	            .removeClass(className.active)
	            .show()
	            .stop()
	            .children()
	              .stop()
	              .animate({
	                opacity: 0
	              }, settings.duration, module.event.resetOpacity)
	              .end()
	            .slideUp(settings.duration, settings.easing, function(){
	              $.proxy(module.event.resetDisplay, this)();
	              $.proxy(settings.onClose, $activeContent)();
	              $.proxy(settings.onChange, $activeContent)();
	            })
	          ;
	        },
	        is: {
	          menu: function () {
	            return $module.hasClass(className.menu);
	          }
	        },
	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          module.debug('Changing internal', name, value);
	          if(value !== undefined) {
	            if( $.isPlainObject(name) ) {
	              $.extend(true, module, name);
	            }
	            else {
	              module[name] = value;
	            }
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.accordion.settings = {
	  name        : 'Accordion',
	  namespace   : 'accordion',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  exclusive   : true,
	  collapsible : true,

	  duration    : 500,
	  easing      : 'easeInOutQuint',

	  onOpen      : function(){},
	  onClose     : function(){},
	  onChange    : function(){},

	  error: {
	    method    : 'The method you called is not defined'
	  },

	  className   : {
	    active : 'active',
	    menu   : 'menu',
	  },

	  selector    : {
	    title   : '.title',
	    content : '.content',
	    menu    : '.menu',
	    item    : '.item',
	  }


	};

	// Adds easing
	$.extend( $.easing, {
	  easeInOutQuint: function (x, t, b, c, d) {
	    if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
	    return c/2*((t-=2)*t*t*t*t + 2) + b;
	  }
	});

	})( jQuery, window , document );


	/*
	 * # Semantic - API
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	  $.api = $.fn.api = function(parameters) {

	    var
	      settings       = $.extend(true, {}, $.api.settings, parameters),

	      // if this keyword isn't a jQuery object, create one
	      context        = (typeof this != 'function')
	        ? this
	        : $('<div/>'),
	      // context defines the element used for loading/error state
	      $context       = (settings.stateContext)
	        ? $(settings.stateContext)
	        : $(context),
	      // module is the thing that initiates the api action, can be independent of context
	      $module = typeof this == 'object'
	        ? $(context)
	        : $context,

	      element         = this,
	      time            = new Date().getTime(),
	      performance     = [],

	      moduleSelector  = $module.selector || '',
	      moduleNamespace = settings.namespace + '-module',

	      className       = settings.className,
	      metadata        = settings.metadata,
	      error           = settings.error,

	      instance        = $module.data(moduleNamespace),

	      query           = arguments[0],
	      methodInvoked   = (instance !== undefined && typeof query == 'string'),
	      queryArguments  = [].slice.call(arguments, 1),

	      module,
	      returnedValue
	    ;

	    module = {
	      initialize: function() {
	        var
	          runSettings,

	          loadingTimer   = new Date().getTime(),
	          loadingDelay,

	          promise,
	          url,

	          formData       = {},
	          data,

	          ajaxSettings   = {},
	          xhr
	        ;

	        // serialize parent form if requested!
	        if(settings.serializeForm && $(this).toJSON() !== undefined) {
	          formData = module.get.formData();
	          module.debug('Adding form data to API Request', formData);
	          $.extend(true, settings.data, formData);
	        }

	        // let beforeSend change settings object
	        runSettings = $.proxy(settings.beforeSend, $module)(settings);

	        // check for exit conditions
	        if(runSettings !== undefined && !runSettings) {
	          module.error(error.beforeSend);
	          module.reset();
	          return;
	        }

	        // get real url from template
	        url = module.get.url( module.get.templateURL() );

	        // exit conditions reached from missing url parameters
	        if( !url ) {
	          module.error(error.missingURL);
	          module.reset();
	          return;
	        }

	        // promise handles notification on api request, so loading min. delay can occur for all notifications
	        promise =
	          $.Deferred()
	            .always(function() {
	              if(settings.stateContext) {
	                $context
	                  .removeClass(className.loading)
	                ;
	              }
	              $.proxy(settings.complete, $module)();
	            })
	            .done(function(response) {
	              module.debug('API request successful');
	              // take a stab at finding success state if json
	              if(settings.dataType == 'json') {
	                if (response.error !== undefined) {
	                  $.proxy(settings.failure, $context)(response.error, settings, $module);
	                }
	                else if ($.isArray(response.errors)) {
	                  $.proxy(settings.failure, $context)(response.errors[0], settings, $module);
	                }
	                else {
	                  $.proxy(settings.success, $context)(response, settings, $module);
	                }
	              }
	              // otherwise
	              else {
	                $.proxy(settings.success, $context)(response, settings, $module);
	              }
	            })
	            .fail(function(xhr, status, httpMessage) {
	              var
	                errorMessage = (settings.error[status] !== undefined)
	                  ? settings.error[status]
	                  : httpMessage,
	                response
	              ;
	              // let em know unless request aborted
	              if(xhr !== undefined) {
	                // readyState 4 = done, anything less is not really sent
	                if(xhr.readyState !== undefined && xhr.readyState == 4) {

	                  // if http status code returned and json returned error, look for it
	                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {
	                    module.error(error.statusMessage + httpMessage);
	                  }
	                  else {
	                    if(status == 'error' && settings.dataType == 'json') {
	                      try {
	                        response = $.parseJSON(xhr.responseText);
	                        if(response && response.error !== undefined) {
	                          errorMessage = response.error;
	                        }
	                      }
	                      catch(error) {
	                        module.error(error.JSONParse);
	                      }
	                    }
	                  }
	                  $context
	                    .removeClass(className.loading)
	                    .addClass(className.error)
	                  ;
	                  // show error state only for duration specified in settings
	                  if(settings.errorLength > 0) {
	                    setTimeout(function(){
	                      $context
	                        .removeClass(className.error)
	                      ;
	                    }, settings.errorLength);
	                  }
	                  module.debug('API Request error:', errorMessage);
	                  $.proxy(settings.failure, $context)(errorMessage, settings, this);
	                }
	                else {
	                  module.debug('Request Aborted (Most likely caused by page change)');
	                }
	              }
	            })
	        ;

	        // look for params in data
	        $.extend(true, ajaxSettings, settings, {
	          success    : function(){},
	          failure    : function(){},
	          complete   : function(){},
	          type       : settings.method || settings.type,
	          data       : data,
	          url        : url,
	          beforeSend : settings.beforeXHR
	        });

	        if(settings.stateContext) {
	          $context
	            .addClass(className.loading)
	          ;
	        }

	        if(settings.progress) {
	          module.verbose('Adding progress events');
	          $.extend(true, ajaxSettings, {
	            xhr: function() {
	              var
	                xhr = new window.XMLHttpRequest()
	              ;
	              xhr.upload.addEventListener('progress', function(event) {
	                var
	                  percentComplete
	                ;
	                if (event.lengthComputable) {
	                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';
	                  $.proxy(settings.progress, $context)(percentComplete, event);
	                }
	              }, false);
	              xhr.addEventListener('progress', function(event) {
	                var
	                  percentComplete
	                ;
	                if (event.lengthComputable) {
	                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';
	                  $.proxy(settings.progress, $context)(percentComplete, event);
	                }
	              }, false);
	              return xhr;
	            }
	          });
	        }

	        module.verbose('Creating AJAX request with settings: ', ajaxSettings);
	        xhr =
	          $.ajax(ajaxSettings)
	            .always(function() {
	              // calculate if loading time was below minimum threshold
	              loadingDelay = ( settings.loadingLength - (new Date().getTime() - loadingTimer) );
	              settings.loadingDelay = loadingDelay < 0
	                ? 0
	                : loadingDelay
	              ;
	            })
	            .done(function(response) {
	              var
	                context = this
	              ;
	              setTimeout(function(){
	                promise.resolveWith(context, [response]);
	              }, settings.loadingDelay);
	            })
	            .fail(function(xhr, status, httpMessage) {
	              var
	                context = this
	              ;
	              // page triggers abort on navigation, dont show error
	              if(status != 'abort') {
	                setTimeout(function(){
	                  promise.rejectWith(context, [xhr, status, httpMessage]);
	                }, settings.loadingDelay);
	              }
	              else {
	                $context
	                  .removeClass(className.error)
	                  .removeClass(className.loading)
	                ;
	              }
	            })
	        ;
	        if(settings.stateContext) {
	          $module
	            .data(metadata.promise, promise)
	            .data(metadata.xhr, xhr)
	          ;
	        }
	      },

	      get: {
	        formData: function() {
	          return $module
	            .closest('form')
	              .toJSON()
	          ;
	        },
	        templateURL: function() {
	          var
	            action = $module.data(settings.metadata.action) || settings.action || false,
	            url
	          ;
	          if(action) {
	            module.debug('Creating url for: ', action);
	            if(settings.api[action] !== undefined) {
	              url = settings.api[action];
	            }
	            else {
	              module.error(error.missingAction);
	            }
	          }
	          // override with url if specified
	          if(settings.url) {
	            url = settings.url;
	            module.debug('Getting url', url);
	          }
	          return url;
	        },
	        url: function(url, urlData) {
	          var
	            urlVariables
	          ;
	          if(url) {
	            urlVariables = url.match(settings.regExpTemplate);
	            urlData      = urlData || settings.urlData;

	            if(urlVariables) {
	              module.debug('Looking for URL variables', urlVariables);
	              $.each(urlVariables, function(index, templateValue){
	                var
	                  term      = templateValue.substr( 2, templateValue.length - 3),
	                  termValue = ($.isPlainObject(urlData) && urlData[term] !== undefined)
	                    ? urlData[term]
	                    : ($module.data(term) !== undefined)
	                      ? $module.data(term)
	                      : urlData[term]
	                ;
	                module.verbose('Looking for variable', term, $module, $module.data(term), urlData[term]);
	                // remove optional value
	                if(termValue === false) {
	                  module.debug('Removing variable from URL', urlVariables);
	                  url = url.replace('/' + templateValue, '');
	                }
	                // undefined condition
	                else if(termValue === undefined || !termValue) {
	                  module.error(error.missingParameter + term);
	                  url = false;
	                  return false;
	                }
	                else {
	                  url = url.replace(templateValue, termValue);
	                }
	              });
	            }
	          }
	          return url;
	        }
	      },

	      // reset api request
	      reset: function() {
	        $module
	          .data(metadata.promise, false)
	          .data(metadata.xhr, false)
	        ;
	        $context
	          .removeClass(className.error)
	          .removeClass(className.loading)
	        ;
	      },

	      setting: function(name, value) {
	        if( $.isPlainObject(name) ) {
	          $.extend(true, settings, name);
	        }
	        else if(value !== undefined) {
	          settings[name] = value;
	        }
	        else {
	          return settings[name];
	        }
	      },
	      internal: function(name, value) {
	        if( $.isPlainObject(name) ) {
	          $.extend(true, module, name);
	        }
	        else if(value !== undefined) {
	          module[name] = value;
	        }
	        else {
	          return module[name];
	        }
	      },
	      debug: function() {
	        if(settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.debug.apply(console, arguments);
	          }
	        }
	      },
	      verbose: function() {
	        if(settings.verbose && settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.verbose.apply(console, arguments);
	          }
	        }
	      },
	      error: function() {
	        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	        module.error.apply(console, arguments);
	      },
	      performance: {
	        log: function(message) {
	          var
	            currentTime,
	            executionTime,
	            previousTime
	          ;
	          if(settings.performance) {
	            currentTime   = new Date().getTime();
	            previousTime  = time || currentTime;
	            executionTime = currentTime - previousTime;
	            time          = currentTime;
	            performance.push({
	              'Element'        : element,
	              'Name'           : message[0],
	              'Arguments'      : [].slice.call(message, 1) || '',
	              'Execution Time' : executionTime
	            });
	          }
	          clearTimeout(module.performance.timer);
	          module.performance.timer = setTimeout(module.performance.display, 100);
	        },
	        display: function() {
	          var
	            title = settings.name + ':',
	            totalTime = 0
	          ;
	          time = false;
	          clearTimeout(module.performance.timer);
	          $.each(performance, function(index, data) {
	            totalTime += data['Execution Time'];
	          });
	          title += ' ' + totalTime + 'ms';
	          if(moduleSelector) {
	            title += ' \'' + moduleSelector + '\'';
	          }
	          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	            console.groupCollapsed(title);
	            if(console.table) {
	              console.table(performance);
	            }
	            else {
	              $.each(performance, function(index, data) {
	                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	              });
	            }
	            console.groupEnd();
	          }
	          performance = [];
	        }
	      },
	      invoke: function(query, passedArguments, context) {
	        var
	          object = instance,
	          maxDepth,
	          found,
	          response
	        ;
	        passedArguments = passedArguments || queryArguments;
	        context         = element         || context;
	        if(typeof query == 'string' && object !== undefined) {
	          query    = query.split(/[\. ]/);
	          maxDepth = query.length - 1;
	          $.each(query, function(depth, value) {
	            var camelCaseValue = (depth != maxDepth)
	              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	              : query
	            ;
	            if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	              object = object[camelCaseValue];
	            }
	            else if( object[camelCaseValue] !== undefined ) {
	              found = object[camelCaseValue];
	              return false;
	            }
	            else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	              object = object[value];
	            }
	            else if( object[value] !== undefined ) {
	              found = object[value];
	              return false;
	            }
	            else {
	              return false;
	            }
	          });
	        }
	        if ( $.isFunction( found ) ) {
	          response = found.apply(context, passedArguments);
	        }
	        else if(found !== undefined) {
	          response = found;
	        }
	        if($.isArray(returnedValue)) {
	          returnedValue.push(response);
	        }
	        else if(returnedValue !== undefined) {
	          returnedValue = [returnedValue, response];
	        }
	        else if(response !== undefined) {
	          returnedValue = response;
	        }
	        return found;
	      }
	    };

	    if(methodInvoked) {
	      if(instance === undefined) {
	        module.initialize();
	      }
	      module.invoke(query);
	    }
	    else {
	      if(instance !== undefined) {
	        module.destroy();
	      }
	      module.initialize();
	    }

	    return (returnedValue !== undefined)
	      ? returnedValue
	      : this
	    ;
	  };

	  // handle DOM attachment to API functionality
	  $.fn.apiButton = function(parameters) {
	    $(this)
	      .each(function(){
	        var
	          // if only function passed it is success callback
	          $module  = $(this),
	          selector = $(this).selector || '',

	          settings = ( $.isFunction(parameters) )
	            ? $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this, success: parameters })
	            : $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this}, parameters),
	          module
	        ;
	        module = {
	          initialize: function() {
	            if(settings.context && selector !== '') {
	              $(settings.context)
	                .on(selector, 'click.' + settings.namespace, module.click)
	              ;
	            }
	            else {
	              $module
	                .on('click.' + settings.namespace, module.click)
	              ;
	            }
	          },
	          click: function() {
	            if(!settings.filter || $(this).filter(settings.filter).size() === 0) {
	              $.proxy( $.api, this )(settings);
	            }
	          }
	        };
	        module.initialize();
	      })
	    ;
	    return this;
	  };

	  $.api.settings = {

	    name        : 'API',
	    namespace   : 'api',

	    debug       : true,
	    verbose     : true,
	    performance : true,

	    api         : {},

	    beforeSend  : function(settings) {
	      return settings;
	    },
	    beforeXHR   : function(xhr) {},
	    success     : function(response) {},
	    complete    : function(response) {},
	    failure     : function(errorCode) {},
	    progress    : false,

	    error : {
	      missingAction    : 'API action used but no url was defined',
	      missingURL       : 'URL not specified for the API action',
	      missingParameter : 'Missing an essential URL parameter: ',

	      timeout          : 'Your request timed out',
	      error            : 'There was an error with your request',
	      parseError       : 'There was an error parsing your request',
	      JSONParse        : 'JSON could not be parsed during error handling',
	      statusMessage    : 'Server gave an error: ',
	      beforeSend       : 'The before send function has aborted the request',
	      exitConditions   : 'API Request Aborted. Exit conditions met'
	    },

	    className: {
	      loading : 'loading',
	      error   : 'error'
	    },

	    metadata: {
	      action  : 'action',
	      promise : 'promise',
	      xhr     : 'xhr'
	    },

	    regExpTemplate: /\{\$([A-z]+)\}/g,

	    action        : false,
	    url           : false,
	    urlData       : false,
	    serializeForm : false,

	    stateContext  : false,

	    method        : 'get',
	    data          : {},
	    dataType      : 'json',
	    cache         : true,

	    loadingLength : 200,
	    errorLength   : 2000

	  };

	  $.fn.apiButton.settings = {
	    filter       : '.disabled, .loading',
	    context      : false,
	    stateContext : false
	  };

	})( jQuery, window , document );
	/*
	 * # Semantic - Colorize
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	  $.fn.colorize = function(parameters) {
	    var
	      settings        = $.extend(true, {}, $.fn.colorize.settings, parameters),
	      // hoist arguments
	      moduleArguments = arguments || false
	    ;
	    $(this)
	      .each(function(instanceIndex) {

	        var
	          $module         = $(this),

	          mainCanvas      = $('<canvas />')[0],
	          imageCanvas     = $('<canvas />')[0],
	          overlayCanvas   = $('<canvas />')[0],

	          backgroundImage = new Image(),

	          // defs
	          mainContext,
	          imageContext,
	          overlayContext,

	          image,
	          imageName,

	          width,
	          height,

	          // shortucts
	          colors    = settings.colors,
	          paths     = settings.paths,
	          namespace = settings.namespace,
	          error     = settings.error,

	          // boilerplate
	          instance   = $module.data('module-' + namespace),
	          module
	        ;

	        module = {

	          checkPreconditions: function() {
	            module.debug('Checking pre-conditions');

	            if( !$.isPlainObject(colors) || $.isEmptyObject(colors) ) {
	              module.error(error.undefinedColors);
	              return false;
	            }
	            return true;
	          },

	          async: function(callback) {
	            if(settings.async) {
	              setTimeout(callback, 0);
	            }
	            else {
	              callback();
	            }
	          },

	          getMetadata: function() {
	            module.debug('Grabbing metadata');
	            image     = $module.data('image') || settings.image || undefined;
	            imageName = $module.data('name')  || settings.name  || instanceIndex;
	            width     = settings.width        || $module.width();
	            height    = settings.height       || $module.height();
	            if(width === 0 || height === 0) {
	              module.error(error.undefinedSize);
	            }
	          },

	          initialize: function() {
	            module.debug('Initializing with colors', colors);
	            if( module.checkPreconditions() ) {

	              module.async(function() {
	                module.getMetadata();
	                module.canvas.create();

	                module.draw.image(function() {
	                  module.draw.colors();
	                  module.canvas.merge();
	                });
	                $module
	                  .data('module-' + namespace, module)
	                ;
	              });
	            }
	          },

	          redraw: function() {
	            module.debug('Redrawing image');
	            module.async(function() {
	              module.canvas.clear();
	              module.draw.colors();
	              module.canvas.merge();
	            });
	          },

	          change: {
	            color: function(colorName, color) {
	              module.debug('Changing color', colorName);
	              if(colors[colorName] === undefined) {
	                module.error(error.missingColor);
	                return false;
	              }
	              colors[colorName] = color;
	              module.redraw();
	            }
	          },

	          canvas: {
	            create: function() {
	              module.debug('Creating canvases');

	              mainCanvas.width     = width;
	              mainCanvas.height    = height;
	              imageCanvas.width    = width;
	              imageCanvas.height   = height;
	              overlayCanvas.width  = width;
	              overlayCanvas.height = height;

	              mainContext    = mainCanvas.getContext('2d');
	              imageContext   = imageCanvas.getContext('2d');
	              overlayContext = overlayCanvas.getContext('2d');

	              $module
	                .append( mainCanvas )
	              ;
	              mainContext    = $module.children('canvas')[0].getContext('2d');
	            },
	            clear: function(context) {
	              module.debug('Clearing canvas');
	              overlayContext.fillStyle = '#FFFFFF';
	              overlayContext.fillRect(0, 0, width, height);
	            },
	            merge: function() {
	              if( !$.isFunction(mainContext.blendOnto) ) {
	                module.error(error.missingPlugin);
	                return;
	              }
	              mainContext.putImageData( imageContext.getImageData(0, 0, width, height), 0, 0);
	              overlayContext.blendOnto(mainContext, 'multiply');
	            }
	          },

	          draw: {

	            image: function(callback) {
	              module.debug('Drawing image');
	              callback = callback || function(){};
	              if(image) {
	                backgroundImage.src    = image;
	                backgroundImage.onload = function() {
	                  imageContext.drawImage(backgroundImage, 0, 0);
	                  callback();
	                };
	              }
	              else {
	                module.error(error.noImage);
	                callback();
	              }
	            },

	            colors: function() {
	              module.debug('Drawing color overlays', colors);
	              $.each(colors, function(colorName, color) {
	                settings.onDraw(overlayContext, imageName, colorName, color);
	              });
	            }

	          },

	          debug: function(message, variableName) {
	            if(settings.debug) {
	              if(variableName !== undefined) {
	                console.info(settings.name + ': ' + message, variableName);
	              }
	              else {
	                console.info(settings.name + ': ' + message);
	              }
	            }
	          },
	          error: function(errorMessage) {
	            console.warn(settings.name + ': ' + errorMessage);
	          },
	          invoke: function(methodName, context, methodArguments) {
	            var
	              method
	            ;
	            methodArguments = methodArguments || Array.prototype.slice.call( arguments, 2 );

	            if(typeof methodName == 'string' && instance !== undefined) {
	              methodName = methodName.split('.');
	              $.each(methodName, function(index, name) {
	                if( $.isPlainObject( instance[name] ) ) {
	                  instance = instance[name];
	                  return true;
	                }
	                else if( $.isFunction( instance[name] ) ) {
	                  method = instance[name];
	                  return true;
	                }
	                module.error(settings.error.method);
	                return false;
	              });
	            }
	            return ( $.isFunction( method ) )
	              ? method.apply(context, methodArguments)
	              : false
	            ;
	          }

	        };
	        if(instance !== undefined && moduleArguments) {
	          // simpler than invoke realizing to invoke itself (and losing scope due prototype.call()
	          if(moduleArguments[0] == 'invoke') {
	            moduleArguments = Array.prototype.slice.call( moduleArguments, 1 );
	          }
	          return module.invoke(moduleArguments[0], this, Array.prototype.slice.call( moduleArguments, 1 ) );
	        }
	        // initializing
	        module.initialize();
	      })
	    ;
	    return this;
	  };

	  $.fn.colorize.settings = {
	    name      : 'Image Colorizer',
	    debug     : true,
	    namespace : 'colorize',

	    onDraw    : function(overlayContext, imageName, colorName, color) {},

	    // whether to block execution while updating canvas
	    async     : true,
	    // object containing names and default values of color regions
	    colors    : {},

	    metadata: {
	      image : 'image',
	      name  : 'name'
	    },

	    error: {
	      noImage         : 'No tracing image specified',
	      undefinedColors : 'No default colors specified.',
	      missingColor    : 'Attempted to change color that does not exist',
	      missingPlugin   : 'Blend onto plug-in must be included',
	      undefinedHeight : 'The width or height of image canvas could not be automatically determined. Please specify a height.'
	    }

	  };

	})( jQuery, window , document );

	/*
	 * # Semantic - Form Validation
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.form = function(fields, parameters) {
	  var
	    $allModules     = $(this),

	    settings        = $.extend(true, {}, $.fn.form.settings, parameters),
	    validation      = $.extend({}, $.fn.form.settings.defaults, fields),

	    namespace       = settings.namespace,
	    metadata        = settings.metadata,
	    selector        = settings.selector,
	    className       = settings.className,
	    error           = settings.error,

	    eventNamespace  = '.' + namespace,
	    moduleNamespace = 'module-' + namespace,

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        $module    = $(this),
	        $field     = $(this).find(selector.field),
	        $group     = $(this).find(selector.group),
	        $message   = $(this).find(selector.message),
	        $prompt    = $(this).find(selector.prompt),
	        $submit    = $(this).find(selector.submit),

	        formErrors = [],

	        element    = this,
	        instance   = $module.data(moduleNamespace),
	        module
	      ;

	      module      = {

	        initialize: function() {
	          module.verbose('Initializing form validation', $module, validation, settings);
	          module.bindEvents();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', instance);
	          module.removeEvents();
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $field = $module.find(selector.field);
	        },

	        submit: function() {
	          module.verbose('Submitting form', $module);
	          $module
	            .submit()
	          ;
	        },

	        bindEvents: function() {
	          if(settings.keyboardShortcuts) {
	            $field
	              .on('keydown' + eventNamespace, module.event.field.keydown)
	            ;
	          }
	          $module
	            .on('submit' + eventNamespace, module.validate.form)
	          ;
	          $field
	            .on('blur' + eventNamespace, module.event.field.blur)
	          ;
	          $submit
	            .on('click' + eventNamespace, module.submit)
	          ;
	          $field
	            .each(function() {
	              var
	                type       = $(this).prop('type'),
	                inputEvent = module.get.changeEvent(type)
	              ;
	              $(this)
	                .on(inputEvent + eventNamespace, module.event.field.change)
	              ;
	            })
	          ;
	        },

	        removeEvents: function() {
	          $module
	            .off(eventNamespace)
	          ;
	          $field
	            .off(eventNamespace)
	          ;
	          $submit
	            .off(eventNamespace)
	          ;
	          $field
	            .off(eventNamespace)
	          ;
	        },

	        event: {
	          field: {
	            keydown: function(event) {
	              var
	                $field  = $(this),
	                key     = event.which,
	                keyCode = {
	                  enter  : 13,
	                  escape : 27
	                }
	              ;
	              if( key == keyCode.escape) {
	                module.verbose('Escape key pressed blurring field');
	                $field
	                  .blur()
	                ;
	              }
	              if(!event.ctrlKey && key == keyCode.enter && $field.is(selector.input) ) {
	                module.debug('Enter key pressed, submitting form');
	                $submit
	                  .addClass(className.down)
	                ;
	                $field
	                  .one('keyup' + eventNamespace, module.event.field.keyup)
	                ;
	                event.preventDefault();
	                return false;
	              }
	            },
	            keyup: function() {
	              module.verbose('Doing keyboard shortcut form submit');
	              $submit.removeClass(className.down);
	              module.submit();
	            },
	            blur: function() {
	              var
	                $field      = $(this),
	                $fieldGroup = $field.closest($group)
	              ;
	              if( $fieldGroup.hasClass(className.error) ) {
	                module.debug('Revalidating field', $field,  module.get.validation($field));
	                module.validate.field( module.get.validation($field) );
	              }
	              else if(settings.on == 'blur' || settings.on == 'change') {
	                module.validate.field( module.get.validation($field) );
	              }
	            },
	            change: function() {
	              var
	                $field      = $(this),
	                $fieldGroup = $field.closest($group)
	              ;
	              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {
	                clearTimeout(module.timer);
	                module.timer = setTimeout(function() {
	                  module.debug('Revalidating field', $field,  module.get.validation($field));
	                  module.validate.field( module.get.validation($field) );
	                }, settings.delay);
	              }
	            }
	          }

	        },

	        get: {
	          changeEvent: function(type) {
	            if(type == 'checkbox' || type == 'radio' || type == 'hidden') {
	              return 'change';
	            }
	            else {
	              return (document.createElement('input').oninput !== undefined)
	                ? 'input'
	                : (document.createElement('input').onpropertychange !== undefined)
	                  ? 'propertychange'
	                  : 'keyup'
	              ;
	            }
	          },
	          field: function(identifier) {
	            module.verbose('Finding field with identifier', identifier);
	            if( $field.filter('#' + identifier).size() > 0 ) {
	              return $field.filter('#' + identifier);
	            }
	            else if( $field.filter('[name="' + identifier +'"]').size() > 0 ) {
	              return $field.filter('[name="' + identifier +'"]');
	            }
	            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').size() > 0 ) {
	              return $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]');
	            }
	            return $('<input/>');
	          },
	          validation: function($field) {
	            var
	              rules
	            ;
	            $.each(validation, function(fieldName, field) {
	              if( module.get.field(field.identifier).get(0) == $field.get(0) ) {
	                rules = field;
	              }
	            });
	            return rules || false;
	          }
	        },

	        has: {

	          field: function(identifier) {
	            module.verbose('Checking for existence of a field with identifier', identifier);
	            if( $field.filter('#' + identifier).size() > 0 ) {
	              return true;
	            }
	            else if( $field.filter('[name="' + identifier +'"]').size() > 0 ) {
	              return true;
	            }
	            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').size() > 0 ) {
	              return true;
	            }
	            return false;
	          }

	        },

	        add: {
	          prompt: function(identifier, errors) {
	            var
	              $field       = module.get.field(identifier),
	              $fieldGroup  = $field.closest($group),
	              $prompt      = $fieldGroup.find(selector.prompt),
	              promptExists = ($prompt.size() !== 0)
	            ;
	            errors = (typeof errors == 'string')
	              ? [errors]
	              : errors
	            ;
	            module.verbose('Adding field error state', identifier);
	            $fieldGroup
	              .addClass(className.error)
	            ;
	            if(settings.inline) {
	              if(!promptExists) {
	                $prompt = settings.templates.prompt(errors);
	                $prompt
	                  .appendTo($fieldGroup)
	                ;
	              }
	              $prompt
	                .html(errors[0])
	              ;
	              if(!promptExists) {
	                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	                  module.verbose('Displaying error with css transition', settings.transition);
	                  $prompt.transition(settings.transition + ' in', settings.duration);
	                }
	                else {
	                  module.verbose('Displaying error with fallback javascript animation');
	                  $prompt
	                    .fadeIn(settings.duration)
	                  ;
	                }
	              }
	              else {
	                module.verbose('Inline errors are disabled, no inline error added', identifier);
	              }
	            }
	          },
	          errors: function(errors) {
	            module.debug('Adding form error messages', errors);
	            $message
	              .html( settings.templates.error(errors) )
	            ;
	          }
	        },

	        remove: {
	          prompt: function(field) {
	            var
	              $field      = module.get.field(field.identifier),
	              $fieldGroup = $field.closest($group),
	              $prompt     = $fieldGroup.find(selector.prompt)
	            ;
	            $fieldGroup
	              .removeClass(className.error)
	            ;
	            if(settings.inline && $prompt.is(':visible')) {
	              module.verbose('Removing prompt for field', field);
	              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	                $prompt.transition(settings.transition + ' out', settings.duration, function() {
	                  $prompt.remove();
	                });
	              }
	              else {
	                $prompt
	                  .fadeOut(settings.duration, function(){
	                    $prompt.remove();
	                  })
	                ;
	              }
	            }
	          }
	        },

	        validate: {

	          form: function(event) {
	            var
	              allValid = true
	            ;
	            // reset errors
	            formErrors = [];
	            $.each(validation, function(fieldName, field) {
	              if( !( module.validate.field(field) ) ) {
	                allValid = false;
	              }
	            });
	            if(allValid) {
	              module.debug('Form has no validation errors, submitting');
	              $module
	                .removeClass(className.error)
	                .addClass(className.success)
	              ;
	              return $.proxy(settings.onSuccess, this)(event);
	            }
	            else {
	              module.debug('Form has errors');
	              $module.addClass(className.error);
	              if(!settings.inline) {
	                module.add.errors(formErrors);
	              }
	              return $.proxy(settings.onFailure, this)(formErrors);
	            }
	          },

	          // takes a validation object and returns whether field passes validation
	          field: function(field) {
	            var
	              $field      = module.get.field(field.identifier),
	              fieldValid  = true,
	              fieldErrors = []
	            ;
	            if(field.rules !== undefined) {
	              $.each(field.rules, function(index, rule) {
	                if( module.has.field(field.identifier) && !( module.validate.rule(field, rule) ) ) {
	                  module.debug('Field is invalid', field.identifier, rule.type);
	                  fieldErrors.push(rule.prompt);
	                  fieldValid = false;
	                }
	              });
	            }
	            if(fieldValid) {
	              module.remove.prompt(field, fieldErrors);
	              $.proxy(settings.onValid, $field)();
	            }
	            else {
	              formErrors = formErrors.concat(fieldErrors);
	              module.add.prompt(field.identifier, fieldErrors);
	              $.proxy(settings.onInvalid, $field)(fieldErrors);
	              return false;
	            }
	            return true;
	          },

	          // takes validation rule and returns whether field passes rule
	          rule: function(field, validation) {
	            var
	              $field        = module.get.field(field.identifier),
	              type          = validation.type,
	              value         = $.trim($field.val() + ''),

	              bracketRegExp = /\[(.*)\]/i,
	              bracket       = bracketRegExp.exec(type),
	              isValid       = true,
	              ancillary,
	              functionType
	            ;
	            // if bracket notation is used, pass in extra parameters
	            if(bracket !== undefined && bracket !== null) {
	              ancillary    = '' + bracket[1];
	              functionType = type.replace(bracket[0], '');
	              isValid      = $.proxy(settings.rules[functionType], $module)(value, ancillary);
	            }
	            // normal notation
	            else {
	              isValid = $.proxy(settings.rules[type], $field)(value);
	            }
	            return isValid;
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }

	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.form.settings = {

	  name              : 'Form',
	  namespace         : 'form',

	  debug             : true,
	  verbose           : true,
	  performance       : true,


	  keyboardShortcuts : true,
	  on                : 'submit',
	  inline            : false,

	  delay             : 200,
	  revalidate        : true,

	  transition        : 'scale',
	  duration          : 150,


	  onValid           : function() {},
	  onInvalid         : function() {},
	  onSuccess         : function() { return true; },
	  onFailure         : function() { return false; },

	  metadata : {
	    validate: 'validate'
	  },

	  selector : {
	    message : '.error.message',
	    field   : 'input, textarea, select',
	    group   : '.field',
	    input   : 'input',
	    prompt  : '.prompt',
	    submit  : '.submit:not([type="submit"])'
	  },

	  className : {
	    error   : 'error',
	    success : 'success',
	    down    : 'down',
	    label   : 'ui label prompt'
	  },

	  // errors
	  error: {
	    method   : 'The method you called is not defined.'
	  },


	  templates: {
	    error: function(errors) {
	      var
	        html = '<ul class="list">'
	      ;
	      $.each(errors, function(index, value) {
	        html += '<li>' + value + '</li>';
	      });
	      html += '</ul>';
	      return $(html);
	    },
	    prompt: function(errors) {
	      return $('<div/>')
	        .addClass('ui red pointing prompt label')
	        .html(errors[0])
	      ;
	    }
	  },

	  rules: {
	    checked: function() {
	      return ($(this).filter(':checked').size() > 0);
	    },
	    empty: function(value) {
	      return !(value === undefined || '' === value);
	    },
	    email: function(value){
	      var
	        emailRegExp = new RegExp("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?", "i")
	      ;
	      return emailRegExp.test(value);
	    },
	    length: function(value, requiredLength) {
	      return (value !== undefined)
	        ? (value.length >= requiredLength)
	        : false
	      ;
	    },
	    not: function(value, notValue) {
	      return (value != notValue);
	    },
	    contains: function(value, text) {
	      text = text.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
	      return (value.search(text) !== -1);
	    },
	    is: function(value, text) {
	      return (value == text);
	    },
	    maxLength: function(value, maxLength) {
	      return (value !== undefined)
	        ? (value.length <= maxLength)
	        : false
	      ;
	    },
	    match: function(value, fieldIdentifier) {
	      // use either id or name of field
	      var
	        $form = $(this),
	        matchingValue
	      ;
	      if($form.find('#' + fieldIdentifier).size() > 0) {
	        matchingValue = $form.find('#' + fieldIdentifier).val();
	      }
	      else if($form.find('[name=' + fieldIdentifier +']').size() > 0) {
	        matchingValue = $form.find('[name=' + fieldIdentifier + ']').val();
	      }
	      else if( $form.find('[data-validate="'+ fieldIdentifier +'"]').size() > 0 ) {
	        matchingValue = $form.find('[data-validate="'+ fieldIdentifier +'"]').val();
	      }
	      return (matchingValue !== undefined)
	        ? ( value.toString() == matchingValue.toString() )
	        : false
	      ;
	    },
	    url: function(value) {
	      var
	        urlRegExp = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/
	      ;
	      return urlRegExp.test(value);
	    }
	  }

	};

	})( jQuery, window , document );

	/*
	 * # Semantic - State
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.state = function(parameters) {
	  var
	    $allModules     = $(this),
	    settings        = $.extend(true, {}, $.fn.state.settings, parameters),

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    // shortcuts
	    error         = settings.error,
	    metadata      = settings.metadata,
	    className     = settings.className,
	    namespace     = settings.namespace,
	    states        = settings.states,
	    text          = settings.text,

	    eventNamespace  = '.' + namespace,
	    moduleNamespace = namespace + '-module',


	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        $module       = $(this),

	        element       = this,
	        instance      = $module.data(moduleNamespace),

	        module
	      ;
	      module = {

	        initialize: function() {
	          module.verbose('Initializing module');

	          // allow module to guess desired state based on element
	          if(settings.automatic) {
	            module.add.defaults();
	          }

	          // bind events with delegated events
	          if(settings.context && moduleSelector !== '') {
	            if( module.allows('hover') ) {
	              $(element, settings.context)
	                .on(moduleSelector, 'mouseenter' + eventNamespace, module.enable.hover)
	                .on(moduleSelector, 'mouseleave' + eventNamespace, module.disable.hover)
	              ;
	            }
	            if( module.allows('down') ) {
	              $(element, settings.context)
	                .on(moduleSelector, 'mousedown' + eventNamespace, module.enable.down)
	                .on(moduleSelector, 'mouseup'   + eventNamespace, module.disable.down)
	              ;
	            }
	            if( module.allows('focus') ) {
	              $(element, settings.context)
	                .on(moduleSelector, 'focus' + eventNamespace, module.enable.focus)
	                .on(moduleSelector, 'blur'  + eventNamespace, module.disable.focus)
	              ;
	            }
	            $(settings.context)
	              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)
	              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)
	              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)
	            ;
	          }
	          else {
	            if( module.allows('hover') ) {
	              $module
	                .on('mouseenter' + eventNamespace, module.enable.hover)
	                .on('mouseleave' + eventNamespace, module.disable.hover)
	              ;
	            }
	            if( module.allows('down') ) {
	              $module
	                .on('mousedown' + eventNamespace, module.enable.down)
	                .on('mouseup'   + eventNamespace, module.disable.down)
	              ;
	            }
	            if( module.allows('focus') ) {
	              $module
	                .on('focus' + eventNamespace, module.enable.focus)
	                .on('blur'  + eventNamespace, module.disable.focus)
	              ;
	            }
	            $module
	              .on('mouseenter' + eventNamespace, module.change.text)
	              .on('mouseleave' + eventNamespace, module.reset.text)
	              .on('click'      + eventNamespace, module.toggle.state)
	            ;
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', instance);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $module = $(element);
	        },

	        add: {
	          defaults: function() {
	            var
	              userStates = parameters && $.isPlainObject(parameters.states)
	                ? parameters.states
	                : {}
	            ;
	            $.each(settings.defaults, function(type, typeStates) {
	              if( module.is[type] !== undefined && module.is[type]() ) {
	                module.verbose('Adding default states', type, element);
	                $.extend(settings.states, typeStates, userStates);
	              }
	            });
	          }
	        },

	        is: {

	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          loading: function() {
	            return $module.hasClass(className.loading);
	          },
	          inactive: function() {
	            return !( $module.hasClass(className.active) );
	          },

	          enabled: function() {
	            return !( $module.is(settings.filter.active) );
	          },
	          disabled: function() {
	            return ( $module.is(settings.filter.active) );
	          },
	          textEnabled: function() {
	            return !( $module.is(settings.filter.text) );
	          },

	          // definitions for automatic type detection
	          button: function() {
	            return $module.is('.button:not(a, .submit)');
	          },
	          input: function() {
	            return $module.is('input');
	          }
	        },

	        allow: function(state) {
	          module.debug('Now allowing state', state);
	          states[state] = true;
	        },
	        disallow: function(state) {
	          module.debug('No longer allowing', state);
	          states[state] = false;
	        },

	        allows: function(state) {
	          return states[state] || false;
	        },

	        enable: {
	          state: function(state) {
	            if(module.allows(state)) {
	              $module.addClass( className[state] );
	            }
	          },
	          // convenience
	          focus: function() {
	            $module.addClass(className.focus);
	          },
	          hover: function() {
	            $module.addClass(className.hover);
	          },
	          down: function() {
	            $module.addClass(className.down);
	          },
	        },

	        disable: {
	          state: function(state) {
	            if(module.allows(state)) {
	              $module.removeClass( className[state] );
	            }
	          },
	          // convenience
	          focus: function() {
	            $module.removeClass(className.focus);
	          },
	          hover: function() {
	            $module.removeClass(className.hover);
	          },
	          down: function() {
	            $module.removeClass(className.down);
	          },
	        },

	        toggle: {
	          state: function() {
	            var
	              apiRequest = $module.data(metadata.promise)
	            ;
	            if( module.allows('active') && module.is.enabled() ) {
	              module.refresh();
	              if(apiRequest !== undefined) {
	                module.listenTo(apiRequest);
	              }
	              else {
	                module.change.state();
	              }
	            }
	          }
	        },

	        listenTo: function(apiRequest) {
	          module.debug('API request detected, waiting for state signal', apiRequest);
	          if(apiRequest) {
	            if(text.loading) {
	              module.update.text(text.loading);
	            }
	            $.when(apiRequest)
	              .then(function() {
	                if(apiRequest.state() == 'resolved') {
	                  module.debug('API request succeeded');
	                  settings.activateTest   = function(){ return true; };
	                  settings.deactivateTest = function(){ return true; };
	                }
	                else {
	                  module.debug('API request failed');
	                  settings.activateTest   = function(){ return false; };
	                  settings.deactivateTest = function(){ return false; };
	                }
	                module.change.state();
	              })
	            ;
	          }
	          // xhr exists but set to false, beforeSend killed the xhr
	          else {
	            settings.activateTest   = function(){ return false; };
	            settings.deactivateTest = function(){ return false; };
	          }
	        },

	        // checks whether active/inactive state can be given
	        change: {

	          state: function() {
	            module.debug('Determining state change direction');
	            // inactive to active change
	            if( module.is.inactive() ) {
	              module.activate();
	            }
	            else {
	              module.deactivate();
	            }
	            if(settings.sync) {
	              module.sync();
	            }
	            $.proxy(settings.onChange, element)();
	          },

	          text: function() {
	            if( module.is.textEnabled() ) {
	              if( module.is.active() ) {
	                if(text.hover) {
	                  module.verbose('Changing text to hover text', text.hover);
	                  module.update.text(text.hover);
	                }
	                else if(text.disable) {
	                  module.verbose('Changing text to disable text', text.disable);
	                  module.update.text(text.disable);
	                }
	              }
	              else {
	                if(text.hover) {
	                  module.verbose('Changing text to hover text', text.disable);
	                  module.update.text(text.hover);
	                }
	                else if(text.enable){
	                  module.verbose('Changing text to enable text', text.enable);
	                  module.update.text(text.enable);
	                }
	              }
	            }
	          }

	        },

	        activate: function() {
	          if( $.proxy(settings.activateTest, element)() ) {
	            module.debug('Setting state to active');
	            $module
	              .addClass(className.active)
	            ;
	            module.update.text(text.active);
	          }
	          $.proxy(settings.onActivate, element)();
	        },

	        deactivate: function() {
	          if($.proxy(settings.deactivateTest, element)() ) {
	            module.debug('Setting state to inactive');
	            $module
	              .removeClass(className.active)
	            ;
	            module.update.text(text.inactive);
	          }
	          $.proxy(settings.onDeactivate, element)();
	        },

	        sync: function() {
	          module.verbose('Syncing other buttons to current state');
	          if( module.is.active() ) {
	            $allModules
	              .not($module)
	                .state('activate');
	          }
	          else {
	            $allModules
	              .not($module)
	                .state('deactivate')
	            ;
	          }
	        },

	        get: {
	          text: function() {
	            return (settings.selector.text)
	              ? $module.find(settings.selector.text).text()
	              : $module.html()
	            ;
	          },
	          textFor: function(state) {
	            return text[state] || false;
	          }
	        },

	        flash: {
	          text: function(text, duration) {
	            var
	              previousText = module.get.text()
	            ;
	            module.debug('Flashing text message', text, duration);
	            text     = text     || settings.text.flash;
	            duration = duration || settings.flashDuration;
	            module.update.text(text);
	            setTimeout(function(){
	              module.update.text(previousText);
	            }, duration);
	          }
	        },

	        reset: {
	          // on mouseout sets text to previous value
	          text: function() {
	            var
	              activeText   = text.active   || $module.data(metadata.storedText),
	              inactiveText = text.inactive || $module.data(metadata.storedText)
	            ;
	            if( module.is.textEnabled() ) {
	              if( module.is.active() && activeText) {
	                module.verbose('Resetting active text', activeText);
	                module.update.text(activeText);
	              }
	              else if(inactiveText) {
	                module.verbose('Resetting inactive text', activeText);
	                module.update.text(inactiveText);
	              }
	            }
	          }
	        },

	        update: {
	          text: function(text) {
	            var
	              currentText = module.get.text()
	            ;
	            if(text && text !== currentText) {
	              module.debug('Updating text', text);
	              if(settings.selector.text) {
	                $module
	                  .data(metadata.storedText, text)
	                  .find(settings.selector.text)
	                    .text(text)
	                ;
	              }
	              else {
	                $module
	                  .data(metadata.storedText, text)
	                  .html(text)
	                ;
	              }
	            }
	            else {
	              module.debug('Text is already sane, ignoring update', text);
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if(value !== undefined) {
	            if( $.isPlainObject(name) ) {
	              $.extend(true, settings, name);
	            }
	            else {
	              settings[name] = value;
	            }
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          module.debug('Changing internal', name, value);
	          if(value !== undefined) {
	            if( $.isPlainObject(name) ) {
	              $.extend(true, module, name);
	            }
	            else {
	              module[name] = value;
	            }
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }

	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.state.settings = {

	  // module info
	  name : 'State',

	  // debug output
	  debug      : true,

	  // verbose debug output
	  verbose    : true,

	  // namespace for events
	  namespace  : 'state',

	  // debug data includes performance
	  performance: true,

	  // callback occurs on state change
	  onActivate   : function() {},
	  onDeactivate : function() {},
	  onChange     : function() {},

	  // state test functions
	  activateTest   : function() { return true; },
	  deactivateTest : function() { return true; },

	  // whether to automatically map default states
	  automatic     : true,

	  // activate / deactivate changes all elements instantiated at same time
	  sync          : false,

	  // default flash text duration, used for temporarily changing text of an element
	  flashDuration : 3000,

	  // selector filter
	  filter     : {
	    text   : '.loading, .disabled',
	    active : '.disabled'
	  },

	  context    : false,

	  // error
	  error: {
	    method : 'The method you called is not defined.'
	  },

	  // metadata
	  metadata: {
	    promise    : 'promise',
	    storedText : 'stored-text'
	  },

	  // change class on state
	  className: {
	    focus   : 'focus',
	    hover   : 'hover',
	    down    : 'down',
	    active  : 'active',
	    loading : 'loading'
	  },

	  selector: {
	    // selector for text node
	    text: false
	  },

	  defaults : {
	    input: {
	      hover   : true,
	      focus   : true,
	      down    : true,
	      loading : false,
	      active  : false
	    },
	    button: {
	      hover   : true,
	      focus   : false,
	      down    : true,
	      active  : true,
	      loading : true
	    }
	  },

	  states     : {
	    hover   : true,
	    focus   : true,
	    down    : true,
	    loading : false,
	    active  : false
	  },

	  text     : {
	    flash    : false,
	    hover    : false,
	    active   : false,
	    inactive : false,
	    enable   : false,
	    disable  : false
	  }

	};



	})( jQuery, window , document );

	/*
	 * # Semantic - Chatroom
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.chatroom = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $(this)
	    .each(function() {
	      var
	        settings  = $.extend(true, {}, $.fn.chatroom.settings, parameters),

	        className = settings.className,
	        namespace = settings.namespace,
	        selector  = settings.selector,
	        error     = settings.error,

	        $module         = $(this),

	        $expandButton   = $module.find(selector.expandButton),
	        $userListButton = $module.find(selector.userListButton),

	        $userList       = $module.find(selector.userList),
	        $room           = $module.find(selector.room),
	        $userCount      = $module.find(selector.userCount),

	        $log            = $module.find(selector.log),
	        $message        = $module.find(selector.message),

	        $messageInput   = $module.find(selector.messageInput),
	        $messageButton  = $module.find(selector.messageButton),

	        instance        = $module.data('module'),
	        element         = this,

	        html            = '',
	        users           = {},

	        channel,
	        loggedInUser,

	        message,
	        count,

	        height,

	        pusher,
	        module
	      ;

	      module = {

	        width: {
	          log      : $log.width(),
	          userList : $userList.outerWidth()
	        },

	        initialize: function() {

	          // check error conditions
	          if(Pusher === undefined) {
	            module.error(error.pusher);
	          }
	          if(settings.key === undefined || settings.channelName === undefined) {
	            module.error(error.key);
	            return false;
	          }
	          else if( !(settings.endpoint.message || settings.endpoint.authentication) ) {
	            module.error(error.endpoint);
	            return false;
	          }

	          // define pusher
	          pusher                       = new Pusher(settings.key);
	          Pusher.channel_auth_endpoint = settings.endpoint.authentication;

	          channel = pusher.subscribe(settings.channelName);

	          channel.bind('pusher:subscription_succeeded', module.user.list.create);
	          channel.bind('pusher:subscription_error', module.error);
	          channel.bind('pusher:member_added', module.user.joined);
	          channel.bind('pusher:member_removed', module.user.left);
	          channel.bind('update_messages', module.message.receive);

	          $.each(settings.customEvents, function(label, value) {
	            channel.bind(label, value);
	          });

	          // bind module events
	          $userListButton
	            .on('click.' +  namespace, module.event.toggleUserList)
	          ;
	          $expandButton
	            .on('click.'   +  namespace, module.event.toggleExpand)
	          ;
	          $messageInput
	            .on('keydown.' +  namespace, module.event.input.keydown)
	            .on('keyup.'   +  namespace, module.event.input.keyup)
	          ;
	          $messageButton
	            .on('mouseenter.' +  namespace, module.event.hover)
	            .on('mouseleave.' +  namespace, module.event.hover)
	            .on('click.' +  namespace, module.event.submit)
	          ;
	          // scroll to bottom of chat log
	          $log
	            .animate({
	              scrollTop: $log.prop('scrollHeight')
	            }, 400)
	          ;
	          $module
	            .data('module', module)
	            .addClass(className.loading)
	          ;

	        },

	        // refresh module
	        refresh: function() {
	          // reset width calculations
	          $userListButton
	            .removeClass(className.active)
	          ;
	          module.width = {
	            log      : $log.width(),
	            userList : $userList.outerWidth()
	          };
	          if( $userListButton.hasClass(className.active) ) {
	            module.user.list.hide();
	          }
	          $module.data('module', module);
	        },

	        user: {

	          updateCount: function() {
	            if(settings.userCount) {
	              users = $module.data('users');
	              count = 0;
	              $.each(users, function() {
	                count++;
	              });
	              $userCount
	                .html( settings.templates.userCount(count) )
	              ;
	            }
	          },

	          // add user to user list
	          joined: function(member) {
	            users = $module.data('users');
	            if(member.id != 'anonymous' && users[ member.id ] === undefined ) {
	              users[ member.id ] = member.info;
	              if(settings.randomColor && member.info.color === undefined) {
	                member.info.color = settings.templates.color(member.id);
	              }
	              html = settings.templates.userList(member.info);
	              if(member.info.isAdmin) {
	                $(html)
	                  .prependTo($userList)
	                ;
	              }
	              else {
	                $(html)
	                  .appendTo($userList)
	                ;
	              }
	              if(settings.partingMessages) {
	                $log
	                  .append( settings.templates.joined(member.info) )
	                ;
	                module.message.scroll.test();
	              }
	              module.user.updateCount();
	            }
	          },

	          // remove user from user list
	          left: function(member) {
	            users = $module.data('users');
	            if(member !== undefined && member.id !== 'anonymous') {
	              delete users[ member.id ];
	              $module
	                .data('users', users)
	              ;
	              $userList
	                .find('[data-id='+ member.id + ']')
	                  .remove()
	              ;
	              if(settings.partingMessages) {
	                $log
	                  .append( settings.templates.left(member.info) )
	                ;
	                module.message.scroll.test();
	              }
	              module.user.updateCount();
	            }
	          },

	          list: {

	            // receives list of members and generates user list
	            create: function(members) {
	              users = {};
	              members.each(function(member) {
	                if(member.id !== 'anonymous' && member.id !== 'undefined') {
	                  if(settings.randomColor && member.info.color === undefined) {
	                    member.info.color = settings.templates.color(member.id);
	                  }
	                  // sort list with admin first
	                  html = (member.info.isAdmin)
	                    ? settings.templates.userList(member.info) + html
	                    : html + settings.templates.userList(member.info)
	                  ;
	                  users[ member.id ] = member.info;
	                }
	              });
	              $module
	                .data('users', users)
	                .data('user', users[members.me.id] )
	                .removeClass(className.loading)
	              ;
	              $userList
	                .html(html)
	              ;
	              module.user.updateCount();
	              $.proxy(settings.onJoin, $userList.children())();
	            },

	            // shows user list
	            show: function() {
	              $log
	                .animate({
	                  width: (module.width.log - module.width.userList)
	                }, {
	                  duration : settings.speed,
	                  easing   : settings.easing,
	                  complete : module.message.scroll.move
	                })
	              ;
	            },

	            // hides user list
	            hide: function() {
	              $log
	                .stop()
	                .animate({
	                  width: (module.width.log)
	                }, {
	                  duration : settings.speed,
	                  easing   : settings.easing,
	                  complete : module.message.scroll.move
	                })
	              ;
	            }

	          }

	        },

	        message: {

	          // handles scrolling of chat log
	          scroll: {
	            test: function() {
	              height = $log.prop('scrollHeight') - $log.height();
	              if( Math.abs($log.scrollTop() - height) < settings.scrollArea) {
	                module.message.scroll.move();
	              }
	            },

	            move: function() {
	              height = $log.prop('scrollHeight') - $log.height();
	              $log
	                .scrollTop(height)
	              ;
	            }
	          },

	          // sends chat message
	          send: function(message) {
	            if( !module.utils.emptyString(message) ) {
	              $.api({
	                url    : settings.endpoint.message,
	                method : 'POST',
	                data   : {
	                  'message': {
	                    content   : message,
	                    timestamp : new Date().getTime()
	                  }
	                }
	              });
	            }
	          },

	          // receives chat response and processes
	          receive: function(response) {
	            message      = response.data;
	            users        = $module.data('users');
	            loggedInUser = $module.data('user');
	            if(users[ message.userID] !== undefined) {
	              // logged in user's messages already pushed instantly
	              if(loggedInUser === undefined || loggedInUser.id != message.userID) {
	                message.user = users[ message.userID ];
	                module.message.display(message);
	              }
	            }
	          },

	          // displays message in chat log
	          display: function(message) {
	            $log
	              .append( settings.templates.message(message) )
	            ;
	            module.message.scroll.test();
	            $.proxy(settings.onMessage, $log.children().last() )();
	          }

	        },

	        expand: function() {
	          $module
	            .addClass(className.expand)
	          ;
	          $.proxy(settings.onExpand, $module )();
	          module.refresh();
	        },

	        contract: function() {
	          $module
	            .removeClass(className.expand)
	          ;
	          $.proxy(settings.onContract, $module )();
	          module.refresh();
	        },

	        event: {

	          input: {

	            keydown: function(event) {
	              if(event.which == 13) {
	                $messageButton
	                  .addClass(className.down)
	                ;
	              }
	            },

	            keyup: function(event) {
	              if(event.which == 13) {
	                $messageButton
	                  .removeClass(className.down)
	                ;
	                module.event.submit();
	              }
	            }

	          },

	          // handles message form submit
	          submit: function() {
	            var
	              message      = $messageInput.val(),
	              loggedInUser = $module.data('user')
	            ;
	            if(loggedInUser !== undefined && !module.utils.emptyString(message)) {
	              module.message.send(message);
	              // display immediately
	              module.message.display({
	                user: loggedInUser,
	                text: message
	              });
	              module.message.scroll.move();
	              $messageInput
	                .val('')
	              ;

	            }
	          },

	          // handles button click on expand button
	          toggleExpand: function() {
	            if( !$module.hasClass(className.expand) ) {
	              $expandButton
	                .addClass(className.active)
	              ;
	              module.expand();
	            }
	            else {
	              $expandButton
	                .removeClass(className.active)
	              ;
	              module.contract();
	            }
	          },

	          // handles button click on user list button
	          toggleUserList: function() {
	            if( !$log.is(':animated') ) {
	              if( !$userListButton.hasClass(className.active) ) {
	                $userListButton
	                  .addClass(className.active)
	                ;
	                module.user.list.show();
	              }
	              else {
	                $userListButton
	                  .removeClass('active')
	                ;
	                module.user.list.hide();
	              }
	            }

	          }
	        },

	        utils: {

	          emptyString: function(string) {
	            if(typeof string == 'string') {
	              return (string.search(/\S/) == -1);
	            }
	            return false;
	          }

	        },

	      setting: function(name, value) {
	        if(value !== undefined) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else {
	            settings[name] = value;
	          }
	        }
	        else {
	          return settings[name];
	        }
	      },
	      internal: function(name, value) {
	        if( $.isPlainObject(name) ) {
	          $.extend(true, module, name);
	        }
	        else if(value !== undefined) {
	          module[name] = value;
	        }
	        else {
	          return module[name];
	        }
	      },
	      debug: function() {
	        if(settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.debug.apply(console, arguments);
	          }
	        }
	      },
	      verbose: function() {
	        if(settings.verbose && settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.verbose.apply(console, arguments);
	          }
	        }
	      },
	      error: function() {
	        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	        module.error.apply(console, arguments);
	      },
	      performance: {
	        log: function(message) {
	          var
	            currentTime,
	            executionTime,
	            previousTime
	          ;
	          if(settings.performance) {
	            currentTime   = new Date().getTime();
	            previousTime  = time || currentTime;
	            executionTime = currentTime - previousTime;
	            time          = currentTime;
	            performance.push({
	              'Element'        : element,
	              'Name'           : message[0],
	              'Arguments'      : [].slice.call(message, 1) || '',
	              'Execution Time' : executionTime
	            });
	          }
	          clearTimeout(module.performance.timer);
	          module.performance.timer = setTimeout(module.performance.display, 100);
	        },
	        display: function() {
	          var
	            title = settings.name + ':',
	            totalTime = 0
	          ;
	          time = false;
	          clearTimeout(module.performance.timer);
	          $.each(performance, function(index, data) {
	            totalTime += data['Execution Time'];
	          });
	          title += ' ' + totalTime + 'ms';
	          if(moduleSelector) {
	            title += ' \'' + moduleSelector + '\'';
	          }
	          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	            console.groupCollapsed(title);
	            if(console.table) {
	              console.table(performance);
	            }
	            else {
	              $.each(performance, function(index, data) {
	                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	              });
	            }
	            console.groupEnd();
	          }
	          performance = [];
	        }
	      },
	      invoke: function(query, passedArguments, context) {
	        var
	          maxDepth,
	          found
	        ;
	        passedArguments = passedArguments || queryArguments;
	        context         = element         || context;
	        if(typeof query == 'string' && instance !== undefined) {
	          query    = query.split(/[\. ]/);
	          maxDepth = query.length - 1;
	          $.each(query, function(depth, value) {
	            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {
	              instance = instance[value];
	            }
	            else if( instance[value] !== undefined ) {
	              found = instance[value];
	            }
	            else {
	              module.error(error.method, query);
	            }
	          });
	        }
	        if ( $.isFunction( found ) ) {
	          return found.apply(context, passedArguments);
	        }
	        return found || false;
	      }
	    };

	    if(methodInvoked) {
	      if(instance === undefined) {
	        module.initialize();
	      }
	      module.invoke(query);
	    }
	    else {
	      if(instance !== undefined) {
	        module.destroy();
	      }
	      module.initialize();
	    }
	  })
	;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	  $.fn.chatroom.settings = {

	    name            : 'Chat',
	    debug           : false,
	    namespace       : 'chat',

	    channel         : 'present-chat',

	    onJoin          : function(){},
	    onMessage       : function(){},
	    onExpand        : function(){},
	    onContract      : function(){},

	    customEvents    : {},

	    partingMessages : false,
	    userCount       : true,
	    randomColor     : true,

	    speed           : 300,
	    easing          : 'easeOutQuint',

	    // pixels from bottom of chat log that should trigger auto scroll to bottom
	    scrollArea      : 9999,

	    endpoint        : {
	      message        : false,
	      authentication : false
	    },

	    error: {
	      method   : 'The method you called is not defined',
	      endpoint : 'Please define a message and authentication endpoint.',
	      key      : 'You must specify a pusher key and channel.',
	      pusher   : 'You must include the Pusher library.'
	    },

	    className   : {
	      expand  : 'expand',
	      active  : 'active',
	      hover   : 'hover',
	      down    : 'down',
	      loading : 'loading'
	    },

	    selector    : {
	      userCount      : '.actions .message',
	      userListButton : '.actions .list.button',
	      expandButton   : '.actions .expand.button',
	      room           : '.room',
	      userList       : '.room .list',
	      log            : '.room .log',
	      message        : '.room .log .message',
	      author         : '.room log .message .author',
	      messageInput   : '.talk input',
	      messageButton  : '.talk .send.button'
	    },

	    templates: {

	      userCount: function(number) {
	        return number + ' users in chat';
	      },

	      color: function(userID) {
	        var
	          colors = [
	            '#000000',
	            '#333333',
	            '#666666',
	            '#999999',
	            '#CC9999',
	            '#CC6666',
	            '#CC3333',
	            '#993333',
	            '#663333',
	            '#CC6633',
	            '#CC9966',
	            '#CC9933',
	            '#999966',
	            '#CCCC66',
	            '#99CC66',
	            '#669933',
	            '#669966',
	            '#33A3CC',
	            '#336633',
	            '#33CCCC',
	            '#339999',
	            '#336666',
	            '#336699',
	            '#6666CC',
	            '#9966CC',
	            '#333399',
	            '#663366',
	            '#996699',
	            '#993366',
	            '#CC6699'
	          ]
	        ;
	        return colors[ Math.floor( Math.random() * colors.length) ];
	      },

	      message: function(message) {
	        var
	          html = ''
	        ;
	        if(message.user.isAdmin) {
	          message.user.color = '#55356A';
	          html += '<div class="admin message">';
	          html += '<span class="quirky ui flag team"></span>';
	        }
	        /*
	        else if(message.user.isPro) {
	          html += '<div class="indent message">';
	          html += '<span class="quirky ui flag pro"></span>';
	        }
	        */
	        else {
	          html += '<div class="message">';
	        }
	        html += '<p>';
	        if(message.user.color !== undefined) {
	          html += '<span class="author" style="color: ' + message.user.color + ';">' + message.user.name + '</span>: ';
	        }
	        else {
	          html += '<span class="author">' + message.user.name + '</span>: ';
	        }
	        html += ''
	          +   message.text
	          + ' </p>'
	          + '</div>'
	        ;
	        return html;
	      },

	      joined: function(member) {
	        return (typeof member.name !== undefined)
	          ? '<div class="status">' + member.name + ' has joined the chat.</div>'
	          : false
	        ;
	      },
	      left: function(member) {
	        return (typeof member.name !== undefined)
	          ? '<div class="status">' + member.name + ' has left the chat.</div>'
	          : false
	        ;
	      },

	      userList: function(member) {
	        var
	          html = ''
	        ;
	        if(member.isAdmin) {
	          member.color = '#55356A';
	        }
	        html +=  ''
	          + '<div class="user" data-id="' + member.id + '">'
	          + ' <div class="image">'
	          + '   <img src="' + member.avatarURL + '">'
	          + ' </div>'
	        ;
	        if(member.color !== undefined) {
	          html += ' <p><a href="/users/' + member.id + '" target="_blank" style="color: ' + member.color + ';">' + member.name + '</a></p>';
	        }
	        else {
	          html += ' <p><a href="/users/' + member.id + '" target="_blank">' + member.name + '</a></p>';
	        }
	        html += '</div>';
	        return html;
	      }

	    }

	  };

	})( jQuery, window , document );

	/*
	 * # Semantic - Checkbox
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.checkbox = function(parameters) {
	  var
	    $allModules    = $(this),
	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),

	        className       = settings.className,
	        namespace       = settings.namespace,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $label          = $(this).next(settings.selector.label).first(),
	        $input          = $(this).find(settings.selector.input),

	        selector        = $module.selector || '',
	        instance        = $module.data(moduleNamespace),

	        element         = this,
	        module
	      ;

	      module      = {

	        initialize: function() {
	          module.verbose('Initializing checkbox', settings);
	          if(settings.context && selector !== '') {
	            module.verbose('Adding delegated events');
	            $(element, settings.context)
	              .on(selector, 'click' + eventNamespace, module.toggle)
	              .on(selector + ' + ' + settings.selector.label, 'click' + eventNamespace, module.toggle)
	            ;
	          }
	          else {
	            $module
	              .on('click' + eventNamespace, module.toggle)
	              .data(moduleNamespace, module)
	            ;
	            $label
	              .on('click' + eventNamespace, module.toggle)
	            ;
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module');
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        is: {
	          radio: function() {
	            return $module.hasClass(className.radio);
	          },
	          enabled: function() {
	            return $input.prop('checked') !== undefined && $input.prop('checked');
	          },
	          disabled: function() {
	            return !module.is.enabled();
	          }
	        },

	        can: {
	          disable: function() {
	            return (typeof settings.required === 'boolean')
	              ? settings.required
	              : !module.is.radio()
	            ;
	          }
	        },

	        enable: function() {
	          module.debug('Enabling checkbox', $input);
	          $input
	            .prop('checked', true)
	            .trigger('change')
	          ;
	          $.proxy(settings.onChange, $input.get())();
	          $.proxy(settings.onEnable, $input.get())();
	        },

	        disable: function() {
	          module.debug('Disabling checkbox');
	          $input
	            .prop('checked', false)
	            .trigger('change')
	          ;
	          $.proxy(settings.onChange, $input.get())();
	          $.proxy(settings.onDisable, $input.get())();
	        },

	        toggle: function(event) {
	          module.verbose('Determining new checkbox state');
	          if( !$input.prop('disabled') ) {
	            if( module.is.disabled() ) {
	              module.enable();
	            }
	            else if( module.is.enabled() && module.can.disable() ) {
	              module.disable();
	            }
	          }
	        },
	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.checkbox.settings = {

	  name        : 'Checkbox',
	  namespace   : 'checkbox',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  // delegated event context
	  context     : false,
	  required    : 'auto',

	  onChange    : function(){},
	  onEnable    : function(){},
	  onDisable   : function(){},

	  error     : {
	    method   : 'The method you called is not defined.'
	  },

	  selector : {
	    input  : 'input[type=checkbox], input[type=radio]',
	    label  : 'label'
	  },

	  className : {
	    radio  : 'radio'
	  }

	};

	})( jQuery, window , document );

	/*
	 * # Semantic - Dimmer
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.dimmer = function(parameters) {
	  var
	    $allModules     = $(this),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)
	          : $.extend({}, $.fn.dimmer.settings),

	        selector        = settings.selector,
	        namespace       = settings.namespace,
	        className       = settings.className,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,
	        moduleSelector  = $allModules.selector || '',

	        clickEvent      = ('ontouchstart' in document.documentElement)
	          ? 'touchstart'
	          : 'click',

	        $module = $(this),
	        $dimmer,
	        $dimmable,

	        element   = this,
	        instance  = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        preinitialize: function() {
	          if( module.is.dimmer() ) {
	            $dimmable = $module.parent();
	            $dimmer   = $module;
	          }
	          else {
	            $dimmable = $module;
	            if( module.has.dimmer() ) {
	              $dimmer = $dimmable.children(selector.dimmer).first();
	            }
	            else {
	              $dimmer = module.create();
	            }
	          }
	        },

	        initialize: function() {
	          module.debug('Initializing dimmer', settings);
	          if(settings.on == 'hover') {
	            $dimmable
	              .on('mouseenter' + eventNamespace, module.show)
	              .on('mouseleave' + eventNamespace, module.hide)
	            ;
	          }
	          else if(settings.on == 'click') {
	            $dimmable
	              .on(clickEvent + eventNamespace, module.toggle)
	            ;
	          }

	          if( module.is.page() ) {
	            module.debug('Setting as a page dimmer', $dimmable);
	            module.set.pageDimmer();
	          }

	          if(settings.closable) {
	            module.verbose('Adding dimmer close event', $dimmer);
	            $dimmer
	              .on(clickEvent + eventNamespace, module.event.click)
	            ;
	          }
	          module.set.dimmable();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module', $dimmer);
	          $module
	            .removeData(moduleNamespace)
	          ;
	          $dimmable
	            .off(eventNamespace)
	          ;
	          $dimmer
	            .off(eventNamespace)
	          ;
	        },

	        event: {

	          click: function(event) {
	            module.verbose('Determining if event occured on dimmer', event);
	            if( $dimmer.find(event.target).size() === 0 || $(event.target).is(selector.content) ) {
	              module.hide();
	              event.stopImmediatePropagation();
	            }
	          }

	        },

	        addContent: function(element) {
	          var
	            $content = $(element)
	          ;
	          module.debug('Add content to dimmer', $content);
	          if($content.parent()[0] !== $dimmer[0]) {
	            $content.detach().appendTo($dimmer);
	          }
	        },

	        create: function() {
	          return $( settings.template.dimmer() ).appendTo($dimmable);
	        },

	        animate: {
	          show: function(callback) {
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            module.set.dimmed();
	            if(settings.on != 'hover' && settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {
	              $dimmer
	                .transition({
	                  animation : settings.transition + ' in',
	                  queue     : true,
	                  duration  : module.get.duration(),
	                  complete  : function() {
	                    module.set.active();
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.verbose('Showing dimmer animation with javascript');
	              $dimmer
	                .stop()
	                .css({
	                  opacity : 0,
	                  width   : '100%',
	                  height  : '100%'
	                })
	                .fadeTo(module.get.duration(), 1, function() {
	                  $dimmer.removeAttr('style');
	                  module.set.active();
	                  callback();
	                })
	              ;
	            }
	          },
	          hide: function(callback) {
	            callback = $.isFunction(callback)
	              ? callback
	              : function(){}
	            ;
	            if(settings.on != 'hover' && settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {
	              module.verbose('Hiding dimmer with css');
	              $dimmer
	                .transition({
	                  animation : settings.transition + ' out',
	                  duration  : module.get.duration(),
	                  queue     : true,
	                  complete  : function() {
	                    module.remove.dimmed();
	                    module.remove.active();
	                    callback();
	                  }
	                })
	              ;
	            }
	            else {
	              module.verbose('Hiding dimmer with javascript');
	              $dimmer
	                .stop()
	                .fadeOut(module.get.duration(), function() {
	                  $dimmer.removeAttr('style');
	                  module.remove.dimmed();
	                  module.remove.active();
	                  callback();
	                })
	              ;
	            }
	          }
	        },

	        get: {
	          dimmer: function() {
	            return $dimmer;
	          },
	          duration: function() {
	            if(typeof settings.duration == 'object') {
	              if( module.is.active() ) {
	                return settings.duration.hide;
	              }
	              else {
	                return settings.duration.show;
	              }
	            }
	            return settings.duration;
	          }
	        },

	        has: {
	          dimmer: function() {
	            return ( $module.children(selector.dimmer).size() > 0 );
	          }
	        },

	        is: {
	          active: function() {
	            return $dimmer.hasClass(className.active);
	          },
	          animating: function() {
	            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.transition) );
	          },
	          dimmer: function() {
	            return $module.is(selector.dimmer);
	          },
	          dimmable: function() {
	            return $module.is(selector.dimmable);
	          },
	          dimmed: function() {
	            return $dimmable.hasClass(className.dimmed);
	          },
	          disabled: function() {
	            return $dimmable.hasClass(className.disabled);
	          },
	          enabled: function() {
	            return !module.is.disabled();
	          },
	          page: function () {
	            return $dimmable.is('body');
	          },
	          pageDimmer: function() {
	            return $dimmer.hasClass(className.pageDimmer);
	          }
	        },

	        can: {
	          show: function() {
	            return !$dimmer.hasClass(className.disabled);
	          }
	        },

	        set: {
	          active: function() {
	            module.set.dimmed();
	            $dimmer
	              .removeClass(className.transition)
	              .addClass(className.active)
	            ;
	          },
	          dimmable: function() {
	            $dimmable.addClass(className.dimmable);
	          },
	          dimmed: function() {
	            $dimmable.addClass(className.dimmed);
	          },
	          pageDimmer: function() {
	            $dimmer.addClass(className.pageDimmer);
	          },
	          disabled: function() {
	            $dimmer.addClass(className.disabled);
	          }
	        },

	        remove: {
	          active: function() {
	            $dimmer
	              .removeClass(className.transition)
	              .removeClass(className.active)
	            ;
	          },
	          dimmed: function() {
	            $dimmable.removeClass(className.dimmed);
	          },
	          disabled: function() {
	            $dimmer.removeClass(className.disabled);
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.debug('Showing dimmer', $dimmer, settings);
	          if( !module.is.active() && module.is.enabled() ) {
	            module.animate.show(callback);
	            $.proxy(settings.onShow, element)();
	            $.proxy(settings.onChange, element)();
	          }
	          else {
	            module.debug('Dimmer is already shown or disabled');
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.is.active() || module.is.animating() ) {
	            module.debug('Hiding dimmer', $dimmer);
	            module.animate.hide(callback);
	            $.proxy(settings.onHide, element)();
	            $.proxy(settings.onChange, element)();
	          }
	          else {
	            module.debug('Dimmer is not visible');
	          }
	        },

	        toggle: function() {
	          module.verbose('Toggling dimmer visibility', $dimmer);
	          if( !module.is.dimmed() ) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      module.preinitialize();

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.dimmer.settings = {

	  name        : 'Dimmer',
	  namespace   : 'dimmer',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  transition  : 'fade',
	  useCSS      : true,
	  on          : false,
	  closable    : true,

	  duration    : {
	    show : 500,
	    hide : 500
	  },

	  onChange    : function(){},
	  onShow      : function(){},
	  onHide      : function(){},

	  error   : {
	    method   : 'The method you called is not defined.'
	  },

	  selector: {
	    dimmable : '.ui.dimmable',
	    dimmer   : '.ui.dimmer',
	    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'
	  },

	  template: {
	    dimmer: function() {
	     return $('<div />').attr('class', 'ui dimmer');
	    }
	  },

	  className : {
	    active     : 'active',
	    dimmable   : 'ui dimmable',
	    dimmed     : 'dimmed',
	    disabled   : 'disabled',
	    pageDimmer : 'page',
	    hide       : 'hide',
	    show       : 'show',
	    transition : 'transition'
	  }

	};

	})( jQuery, window , document );
	/*
	 * # Semantic - Dropdown
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */
	;(function ( $, window, document, undefined ) {

	$.fn.dropdown = function(parameters) {
	    var
	    $allModules    = $(this),
	    $document      = $(document),

	    moduleSelector = $allModules.selector || '',

	    hasTouch       = ('ontouchstart' in document.documentElement),
	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings          = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)
	          : $.extend({}, $.fn.dropdown.settings),

	        className       = settings.className,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $item           = $module.find(selector.item),
	        $text           = $module.find(selector.text),
	        $input          = $module.find(selector.input),

	        $menu           = $module.children(selector.menu),


	        element         = this,
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing dropdown', settings);

	          module.save.defaults();
	          module.set.selected();

	          if(hasTouch) {
	            module.bind.touchEvents();
	          }
	          module.bind.mouseEvents();
	          module.bind.keyboardEvents();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of dropdown', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous dropdown for', $module);
	          $item
	            .off(eventNamespace)
	          ;
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        bind: {
	          keyboardEvents: function() {
	            module.debug('Binding keyboard events');
	            $module
	              .on('keydown' + eventNamespace, module.handleKeyboard)
	            ;
	            $module
	              .on('focus' + eventNamespace, module.show)
	            ;
	          },
	          touchEvents: function() {
	            module.debug('Touch device detected binding touch events');
	            $module
	              .on('touchstart' + eventNamespace, module.event.test.toggle)
	            ;
	            $item
	              .on('touchstart' + eventNamespace, module.event.item.mouseenter)
	              .on('touchstart' + eventNamespace, module.event.item.click)
	            ;
	          },
	          mouseEvents: function() {
	            module.verbose('Mouse detected binding mouse events');
	            if(settings.on == 'click') {
	              $module
	                .on('click' + eventNamespace, module.event.test.toggle)
	              ;
	            }
	            else if(settings.on == 'hover') {
	              $module
	                .on('mouseenter' + eventNamespace, module.delay.show)
	                .on('mouseleave' + eventNamespace, module.delay.hide)
	              ;
	            }
	            else {
	              $module
	                .on(settings.on + eventNamespace, module.toggle)
	              ;
	            }
	            $item
	              .on('mouseenter' + eventNamespace, module.event.item.mouseenter)
	              .on('mouseleave' + eventNamespace, module.event.item.mouseleave)
	              .on('click'      + eventNamespace, module.event.item.click)
	            ;
	          },
	          intent: function() {
	            module.verbose('Binding hide intent event to document');
	            if(hasTouch) {
	              $document
	                .on('touchstart' + eventNamespace, module.event.test.touch)
	                .on('touchmove'  + eventNamespace, module.event.test.touch)
	              ;
	            }
	            $document
	              .on('click' + eventNamespace, module.event.test.hide)
	            ;
	          }
	        },

	        unbind: {
	          intent: function() {
	            module.verbose('Removing hide intent event from document');
	            if(hasTouch) {
	              $document
	                .off('touchstart' + eventNamespace)
	                .off('touchmove' + eventNamespace)
	              ;
	            }
	            $document
	              .off('click' + eventNamespace)
	            ;
	          }
	        },

	        handleKeyboard: function(event) {
	          var
	            $selectedItem = $item.filter('.' + className.selected),
	            pressedKey    = event.which,
	            keys          = {
	              enter     : 13,
	              escape    : 27,
	              upArrow   : 38,
	              downArrow : 40
	            },
	            selectedClass   = className.selected,
	            currentIndex    = $item.index( $selectedItem ),
	            hasSelectedItem = ($selectedItem.size() > 0),
	            resultSize      = $item.size(),
	            newIndex
	          ;
	          // close shortcuts
	          if(pressedKey == keys.escape) {
	            module.verbose('Escape key pressed, closing dropdown');
	            module.hide();
	          }
	          // result shortcuts
	          if(module.is.visible()) {
	            if(pressedKey == keys.enter && hasSelectedItem) {
	              module.verbose('Enter key pressed, choosing selected item');
	              $.proxy(module.event.item.click, $item.filter('.' + selectedClass) )(event);
	              event.preventDefault();
	              return false;
	            }
	            else if(pressedKey == keys.upArrow) {
	              module.verbose('Up key pressed, changing active item');
	              newIndex = (currentIndex - 1 < 0)
	                ? currentIndex
	                : currentIndex - 1
	              ;
	              $item
	                .removeClass(selectedClass)
	                .eq(newIndex)
	                  .addClass(selectedClass)
	              ;
	              event.preventDefault();
	            }
	            else if(pressedKey == keys.downArrow) {
	              module.verbose('Down key pressed, changing active item');
	              newIndex = (currentIndex + 1 >= resultSize)
	                ? currentIndex
	                : currentIndex + 1
	              ;
	              $item
	                .removeClass(selectedClass)
	                .eq(newIndex)
	                  .addClass(selectedClass)
	              ;
	              event.preventDefault();
	            }
	          }
	          else {
	            if(pressedKey == keys.enter) {
	              module.show();
	            }
	          }
	        },

	        event: {
	          test: {
	            toggle: function(event) {
	              if( module.determine.intent(event, module.toggle) ) {
	                event.preventDefault();
	              }
	            },
	            touch: function(event) {
	              module.determine.intent(event, function() {
	                if(event.type == 'touchstart') {
	                  module.timer = setTimeout(module.hide, settings.delay.touch);
	                }
	                else if(event.type == 'touchmove') {
	                  clearTimeout(module.timer);
	                }
	              });
	              event.stopPropagation();
	            },
	            hide: function(event) {
	              module.determine.intent(event, module.hide);
	            }
	          },

	          item: {

	            mouseenter: function(event) {
	              var
	                $currentMenu = $(this).find(selector.submenu),
	                $otherMenus  = $(this).siblings(selector.item).children(selector.menu)
	              ;
	              if($currentMenu.length > 0  || $otherMenus.length > 0) {
	                clearTimeout(module.itemTimer);
	                  module.itemTimer = setTimeout(function() {
	                  if($otherMenus.length > 0) {
	                    module.animate.hide(false, $otherMenus.filter(':visible'));
	                  }
	                  if($currentMenu.length > 0) {
	                    module.verbose('Showing sub-menu', $currentMenu);
	                    module.animate.show(false, $currentMenu);
	                  }
	                }, settings.delay.show * 2);
	                event.preventDefault();
	                event.stopPropagation();
	              }
	            },

	            mouseleave: function(event) {
	              var
	                $currentMenu = $(this).find(selector.menu)
	              ;
	              if($currentMenu.size() > 0) {
	                clearTimeout(module.itemTimer);
	                module.itemTimer = setTimeout(function() {
	                  module.verbose('Hiding sub-menu', $currentMenu);
	                  module.animate.hide(false,  $currentMenu);
	                }, settings.delay.hide);
	              }
	            },

	            click: function (event) {
	              var
	                $choice = $(this),
	                text    = ( $choice.data(metadata.text) !== undefined )
	                  ? $choice.data(metadata.text)
	                  : $choice.text(),
	                value   = ( $choice.data(metadata.value) !== undefined)
	                  ? $choice.data(metadata.value)
	                  : (typeof text === 'string')
	                      ? text.toLowerCase()
	                      : text,
	                callback = function() {
	                  module.determine.selectAction(text, value);
	                  $.proxy(settings.onChange, element)(value, text);
	                }
	              ;
	              if( $choice.find(selector.menu).size() === 0 ) {
	                if(event.type == 'touchstart') {
	                  $choice.one('click', callback);
	                }
	                else {
	                  callback();
	                }
	              }
	            }

	          },

	          resetStyle: function() {
	            $(this).removeAttr('style');
	          }

	        },

	        determine: {
	          selectAction: function(text, value) {
	            module.verbose('Determining action', settings.action);
	            if( $.isFunction( module.action[settings.action] ) ) {
	              module.verbose('Triggering preset action', settings.action, text, value);
	              module.action[ settings.action ](text, value);
	            }
	            else if( $.isFunction(settings.action) ) {
	              module.verbose('Triggering user action', settings.action, text, value);
	              settings.action(text, value);
	            }
	            else {
	              module.error(error.action, settings.action);
	            }
	          },
	          intent: function(event, callback) {
	            module.debug('Determining whether event occurred in dropdown', event.target);
	            callback = callback || function(){};
	            if( $(event.target).closest($menu).size() === 0 ) {
	              module.verbose('Triggering event', callback);
	              callback();
	              return true;
	            }
	            else {
	              module.verbose('Event occurred in dropdown, canceling callback');
	              return false;
	            }
	          }
	        },

	        action: {

	          nothing: function() {},

	          hide: function() {
	            module.hide();
	          },

	          activate: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            module.set.selected(value);
	            module.set.value(value);
	            module.hide();
	          },

	          /* Deprecated */
	          auto: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            module.set.selected(value);
	            module.set.value(value);
	            module.hide();
	          },

	          /* Deprecated */
	          changeText: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            module.set.selected(value);
	            module.hide();
	          },

	          /* Deprecated */
	          updateForm: function(text, value) {
	            value = (value !== undefined)
	              ? value
	              : text
	            ;
	            module.set.selected(value);
	            module.set.value(value);
	            module.hide();
	          }

	        },

	        get: {
	          text: function() {
	            return $text.text();
	          },
	          value: function() {
	            return ($input.size() > 0)
	              ? $input.val()
	              : $module.data(metadata.value)
	            ;
	          },
	          item: function(value, strict) {
	            var
	              $selectedItem = false
	            ;
	            value = (value !== undefined)
	              ? value
	              : ( module.get.value() !== undefined)
	                ? module.get.value()
	                : module.get.text()
	            ;
	            if(strict === undefined && value === '') {
	              module.debug('Ambiguous dropdown value using strict type check', value);
	              strict = true;
	            }
	            else {
	              strict = strict || false;
	            }
	            if(value !== undefined) {
	              $item
	                .each(function() {
	                  var
	                    $choice       = $(this),
	                    optionText    = ( $choice.data(metadata.text) !== undefined )
	                      ? $choice.data(metadata.text)
	                      : $choice.text(),
	                    optionValue   = ( $choice.data(metadata.value) !== undefined )
	                      ? $choice.data(metadata.value)
	                      : (typeof optionText === 'string')
	                        ? optionText.toLowerCase()
	                        : optionText
	                  ;
	                  if(strict) {
	                    if( optionValue === value ) {
	                      $selectedItem = $(this);
	                    }
	                    else if( !$selectedItem && optionText === value ) {
	                      $selectedItem = $(this);
	                    }
	                  }
	                  else {
	                    if( optionValue == value ) {
	                      $selectedItem = $(this);
	                    }
	                    else if( !$selectedItem && optionText == value ) {
	                      $selectedItem = $(this);
	                    }
	                  }
	                })
	              ;
	            }
	            else {
	              value = module.get.text();
	            }
	            return $selectedItem || false;
	          }
	        },

	        restore: {
	          defaults: function() {
	            module.restore.defaultText();
	            module.restore.defaultValue();
	          },
	          defaultText: function() {
	            var
	              defaultText = $module.data(metadata.defaultText)
	            ;
	            module.debug('Restoring default text', defaultText);
	            module.set.text(defaultText);
	          },
	          defaultValue: function() {
	            var
	              defaultValue = $module.data(metadata.defaultValue)
	            ;
	            if(defaultValue !== undefined) {
	              module.debug('Restoring default value', defaultValue);
	              module.set.selected(defaultValue);
	              module.set.value(defaultValue);
	            }
	          }
	        },

	        save: {
	          defaults: function() {
	            module.save.defaultText();
	            module.save.defaultValue();
	          },
	          defaultValue: function() {
	            $module.data(metadata.defaultValue, module.get.value() );
	          },
	          defaultText: function() {
	            $module.data(metadata.defaultText, $text.text() );
	          }
	        },

	        set: {
	          text: function(text) {
	            module.debug('Changing text', text, $text);
	            $text.removeClass(className.placeholder);
	            $text.text(text);
	          },
	          value: function(value) {
	            module.debug('Adding selected value to hidden input', value, $input);
	            if($input.size() > 0) {
	              $input
	                .val(value)
	                .trigger('change')
	              ;
	            }
	            else {
	              $module.data(metadata.value, value);
	            }
	          },
	          active: function() {
	            $module.addClass(className.active);
	          },
	          visible: function() {
	            $module.addClass(className.visible);
	          },
	          selected: function(value) {
	            var
	              $selectedItem = module.get.item(value),
	              selectedText
	            ;
	            if($selectedItem) {
	              module.debug('Setting selected menu item to', $selectedItem);
	              selectedText = ($selectedItem.data(metadata.text) !== undefined)
	                ? $selectedItem.data(metadata.text)
	                : $selectedItem.text()
	              ;
	              $item
	                .removeClass(className.active)
	              ;
	              $selectedItem
	                .addClass(className.active)
	              ;
	              module.set.text(selectedText);
	            }
	          }
	        },

	        remove: {
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          visible: function() {
	            $module.removeClass(className.visible);
	          }
	        },

	        is: {
	          selection: function() {
	            return $module.hasClass(className.selection);
	          },
	          animated: function($subMenu) {
	            return ($subMenu)
	              ? $subMenu.is(':animated') || $subMenu.transition && $subMenu.transition('is animating')
	              : $menu.is(':animated') || $menu.transition && $menu.transition('is animating')
	            ;
	          },
	          visible: function($subMenu) {
	            return ($subMenu)
	              ? $subMenu.is(':visible')
	              : $menu.is(':visible')
	            ;
	          },
	          hidden: function($subMenu) {
	            return ($subMenu)
	              ? $subMenu.is(':not(:visible)')
	              : $menu.is(':not(:visible)')
	            ;
	          }
	        },

	        can: {
	          click: function() {
	            return (hasTouch || settings.on == 'click');
	          },
	          show: function() {
	            return !$module.hasClass(className.disabled);
	          }
	        },

	        animate: {
	          show: function(callback, $subMenu) {
	            var
	              $currentMenu = $subMenu || $menu
	            ;
	            callback = callback || function(){};
	            if( module.is.hidden($currentMenu) ) {
	              module.verbose('Doing menu show animation', $currentMenu);
	              if(settings.transition == 'none') {
	                callback();
	              }
	              else if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $currentMenu
	                  .transition({
	                    animation : settings.transition + ' in',
	                    duration  : settings.duration,
	                    complete  : callback,
	                    queue     : false
	                  })
	                ;
	              }
	              else if(settings.transition == 'slide down') {
	                $currentMenu
	                  .hide()
	                  .clearQueue()
	                  .children()
	                    .clearQueue()
	                    .css('opacity', 0)
	                    .delay(50)
	                    .animate({
	                      opacity : 1
	                    }, settings.duration, 'easeOutQuad', module.event.resetStyle)
	                    .end()
	                  .slideDown(100, 'easeOutQuad', function() {
	                    $.proxy(module.event.resetStyle, this)();
	                    callback();
	                  })
	                ;
	              }
	              else if(settings.transition == 'fade') {
	                $currentMenu
	                  .hide()
	                  .clearQueue()
	                  .fadeIn(settings.duration, function() {
	                    $.proxy(module.event.resetStyle, this)();
	                    callback();
	                  })
	                ;
	              }
	              else {
	                module.error(error.transition, settings.transition);
	              }
	            }
	          },
	          hide: function(callback, $subMenu) {
	            var
	              $currentMenu = $subMenu || $menu
	            ;
	            callback = callback || function(){};
	            if(module.is.visible($currentMenu) ) {
	              module.verbose('Doing menu hide animation', $currentMenu);
	              if($.fn.transition !== undefined && $module.transition('is supported')) {
	                $currentMenu
	                  .transition({
	                    animation : settings.transition + ' out',
	                    duration  : settings.duration,
	                    complete  : callback,
	                    queue     : false
	                  })
	                ;
	              }
	              else if(settings.transition == 'none') {
	                callback();
	              }
	              else if(settings.transition == 'slide down') {
	                $currentMenu
	                  .show()
	                  .clearQueue()
	                  .children()
	                    .clearQueue()
	                    .css('opacity', 1)
	                    .animate({
	                      opacity : 0
	                    }, 100, 'easeOutQuad', module.event.resetStyle)
	                    .end()
	                  .delay(50)
	                  .slideUp(100, 'easeOutQuad', function() {
	                    $.proxy(module.event.resetStyle, this)();
	                    callback();
	                  })
	                ;
	              }
	              else if(settings.transition == 'fade') {
	                $currentMenu
	                  .show()
	                  .clearQueue()
	                  .fadeOut(150, function() {
	                    $.proxy(module.event.resetStyle, this)();
	                    callback();
	                  })
	                ;
	              }
	              else {
	                module.error(error.transition);
	              }
	            }
	          }
	        },

	        show: function() {
	          module.debug('Checking if dropdown can show');
	          if( module.is.hidden() ) {
	            module.hideOthers();
	            module.set.active();
	            module.animate.show(function() {
	              if( module.can.click() ) {
	                module.bind.intent();
	              }
	              module.set.visible();
	            });
	            $.proxy(settings.onShow, element)();
	          }
	        },

	        hide: function() {
	          if( !module.is.animated() && module.is.visible() ) {
	            module.debug('Hiding dropdown');
	            if( module.can.click() ) {
	              module.unbind.intent();
	            }
	            module.remove.active();
	            module.animate.hide(module.remove.visible);
	            $.proxy(settings.onHide, element)();
	          }
	        },

	        delay: {
	          show: function() {
	            module.verbose('Delaying show event to ensure user intent');
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.show, settings.delay.show);
	          },
	          hide: function() {
	            module.verbose('Delaying hide event to ensure user intent');
	            clearTimeout(module.timer);
	            module.timer = setTimeout(module.hide, settings.delay.hide);
	          }
	        },

	        hideOthers: function() {
	          module.verbose('Finding other dropdowns to hide');
	          $allModules
	            .not($module)
	              .has(selector.menu + ':visible')
	              .dropdown('hide')
	          ;
	        },

	        toggle: function() {
	          module.verbose('Toggling menu visibility');
	          if( module.is.hidden() ) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                module.error(error.method, query);
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.dropdown.settings = {

	  name        : 'Dropdown',
	  namespace   : 'dropdown',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  on          : 'click',
	  action      : 'activate',

	  delay: {
	    show  : 200,
	    hide  : 300,
	    touch : 50
	  },

	  transition : 'slide down',
	  duration   : 250,

	  onChange : function(value, text){},
	  onShow   : function(){},
	  onHide   : function(){},

	  error   : {
	    action    : 'You called a dropdown action that was not defined',
	    method    : 'The method you called is not defined.',
	    transition : 'The requested transition was not found'
	  },

	  metadata: {
	    defaultText  : 'defaultText',
	    defaultValue : 'defaultValue',
	    text         : 'text',
	    value        : 'value'
	  },

	  selector : {
	    menu    : '.menu',
	    submenu : '> .menu',
	    item    : '.menu > .item',
	    text    : '> .text',
	    input   : '> input[type="hidden"]'
	  },

	  className : {
	    active      : 'active',
	    placeholder : 'default',
	    disabled    : 'disabled',
	    visible     : 'visible',
	    selected    : 'selected',
	    selection   : 'selection'
	  }

	};

	// Adds easing
	$.extend( $.easing, {
	  easeOutQuad: function (x, t, b, c, d) {
	    return -c *(t/=d)*(t-2) + b;
	  }
	});


	})( jQuery, window , document );

	/*
	 * # Semantic - Modal
	 * http://github.com/semantic-org/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.modal = function(parameters) {
	  var
	    $allModules = $(this),
	    $window     = $(window),
	    $document   = $(document),
	    $body       = $('body'),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;


	  $allModules
	    .each(function() {
	      var
	        settings    = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.modal.settings, parameters)
	          : $.extend({}, $.fn.modal.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        namespace       = settings.namespace,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,
	        moduleSelector  = $allModules.selector || '',

	        $module      = $(this),
	        $context     = $(settings.context),
	        $close       = $module.find(selector.close),

	        $allModals,
	        $otherModals,
	        $focusedElement,
	        $dimmable,
	        $dimmer,

	        element      = this,
	        instance     = $module.data(moduleNamespace),
	        module
	      ;

	      module  = {

	        initialize: function() {
	          module.verbose('Initializing dimmer', $context);

	          if($.fn.dimmer === undefined) {
	            module.error(error.dimmer);
	            return;
	          }
	          $dimmable = $context
	            .dimmer({
	              closable : false,
	              useCSS   : true,
	              duration : {
	                show     : settings.duration * 0.9,
	                hide     : settings.duration * 1.1
	              }
	            })
	          ;

	          if(settings.detachable) {
	            $dimmable.dimmer('add content', $module);
	          }

	          $dimmer = $dimmable
	            .dimmer('get dimmer')
	          ;

	          module.refreshSelectors();

	          module.verbose('Attaching close events', $close);
	          $close
	            .on('click' + eventNamespace, module.event.close)
	          ;
	          $window
	            .on('resize' + eventNamespace, module.event.resize)
	          ;
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of modal');
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous modal');
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	          $close
	            .off(eventNamespace)
	          ;
	          $context
	            .dimmer('destroy')
	          ;
	        },

	        refresh: function() {
	          module.remove.scrolling();
	          module.cacheSizes();
	          module.set.screenHeight();
	          module.set.type();
	          module.set.position();
	        },

	        refreshSelectors: function() {
	          $otherModals = $module.siblings(selector.modal);
	          $allModals   = $otherModals.add($module);
	        },

	        attachEvents: function(selector, event) {
	          var
	            $toggle = $(selector)
	          ;
	          event = $.isFunction(module[event])
	            ? module[event]
	            : module.toggle
	          ;
	          if($toggle.size() > 0) {
	            module.debug('Attaching modal events to element', selector, event);
	            $toggle
	              .off(eventNamespace)
	              .on('click' + eventNamespace, event)
	            ;
	          }
	          else {
	            module.error(error.notFound);
	          }
	        },

	        event: {
	          close: function() {
	            module.verbose('Closing element pressed');
	            if( $(this).is(selector.approve) ) {
	              if($.proxy(settings.onApprove, element)() !== false) {
	                module.hide();
	              }
	              else {
	                module.verbose('Approve callback returned false cancelling hide');
	              }
	            }
	            else if( $(this).is(selector.deny) ) {
	              if($.proxy(settings.onDeny, element)() !== false) {
	                module.hide();
	              }
	              else {
	                module.verbose('Deny callback returned false cancelling hide');
	              }
	            }
	            else {
	              module.hide();
	            }
	          },
	          click: function(event) {
	            if( $(event.target).closest(selector.modal).size() === 0 ) {
	              module.debug('Dimmer clicked, hiding all modals');
	              if(settings.allowMultiple) {
	                module.hide();
	              }
	              else {
	                module.hideAll();
	              }
	              event.stopImmediatePropagation();
	            }
	          },
	          debounce: function(method, delay) {
	            clearTimeout(module.timer);
	            module.timer = setTimeout(method, delay);
	          },
	          keyboard: function(event) {
	            var
	              keyCode   = event.which,
	              escapeKey = 27
	            ;
	            if(keyCode == escapeKey) {
	              if(settings.closable) {
	                module.debug('Escape key pressed hiding modal');
	                module.hide();
	              }
	              else {
	                module.debug('Escape key pressed, but closable is set to false');
	              }
	              event.preventDefault();
	            }
	          },
	          resize: function() {
	            if( $dimmable.dimmer('is active') ) {
	              requestAnimationFrame(module.refresh);
	            }
	          }
	        },

	        toggle: function() {
	          if( module.is.active() ) {
	            module.hide();
	          }
	          else {
	            module.show();
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.showDimmer();
	          module.showModal(callback);
	        },

	        onlyVisible: function() {
	          module.refreshSelectors();
	          return module.is.active() && $otherModals.filter(':visible').size() === 0;
	        },

	        othersVisible: function() {
	          module.refreshSelectors();
	          return $otherModals.filter(':visible').size() > 0;
	        },

	        showModal: function(callback) {
	          if(module.is.active()) {
	            module.debug('Modal is already visible');
	            return;
	          }

	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;

	          module.save.focus();
	          module.add.keyboardShortcuts();

	          if(module.cache === undefined) {
	            module.cacheSizes();
	          }
	          module.set.position();
	          module.set.screenHeight();
	          module.set.type();

	          if(module.othersVisible()  && !settings.allowMultiple) {
	            module.debug('Other modals visible, queueing show animation');
	            module.hideOthers(module.showModal);
	          }
	          else {
	            $.proxy(settings.onShow, element)();

	            var transitionCallback = function() {
	              module.set.active();
	              $.proxy(settings.onVisible, element)();
	              callback();
	            };

	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              module.debug('Showing modal with css animations');
	              $module
	                .transition(settings.transition + ' in', settings.duration, transitionCallback)
	              ;
	            }
	            else {
	              module.debug('Showing modal with javascript');
	              $module
	                .fadeIn(settings.duration, settings.easing, transitionCallback)
	              ;
	            }
	          }
	        },

	        showDimmer: function() {
	          if( !$dimmable.dimmer('is active') ) {
	            module.debug('Showing dimmer');
	            $dimmable.dimmer('show');
	          }
	          else {
	            module.debug('Dimmer is already visible');
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.refreshSelectors();
	          if(module.onlyVisible()) {
	            module.hideDimmer();
	          }
	          module.hideModal(callback);
	        },

	        hideDimmer: function() {
	          if( !module.is.active() ) {
	            module.debug('Dimmer is already hidden');
	            return;
	          }
	          module.debug('Hiding dimmer');
	          if(settings.closable) {
	            $dimmer
	              .off('click' + eventNamespace)
	            ;
	          }
	          $dimmable.dimmer('hide', function() {
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              $module
	                .transition('reset')
	              ;
	              module.remove.screenHeight();
	            }
	            module.remove.active();
	          });
	        },

	        hideModal: function(callback) {
	          if(!module.is.active()) {
	            module.debug('Modal is already hidden');
	            return;
	          }

	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;

	          module.restore.focus();
	          module.remove.keyboardShortcuts();

	          $.proxy(settings.onHide, element)();

	          var transitionCallback = function() {
	            module.remove.active();
	            $.proxy(settings.onHidden, element)();
	            callback();
	          };

	          if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	            module.debug('Hiding modal with css animations');
	            $module
	              .transition(settings.transition + ' out', settings.duration, transitionCallback)
	            ;
	          }
	          else {
	            module.debug('Hiding modal with javascript');
	            $module
	              .fadeOut(settings.duration, settings.easing, transitionCallback)
	            ;
	          }
	        },

	        hideAll: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( $module.is(':visible') || module.othersVisible() ) {
	            module.debug('Hiding all visible modals');
	            module.hideDimmer();
	            $allModals
	              .filter(':visible')
	                .modal('hide modal', callback)
	            ;
	          }
	        },

	        hideOthers: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          if( module.othersVisible() ) {
	            module.debug('Hiding other modals');
	            $otherModals
	              .filter(':visible')
	                .modal('hide modal', callback)
	            ;
	          }
	        },

	        add: {
	          keyboardShortcuts: function() {
	            module.verbose('Adding keyboard shortcuts');
	            $document
	              .on('keyup' + eventNamespace, module.event.keyboard)
	            ;
	          }
	        },

	        save: {
	          focus: function() {
	            $focusedElement = $(document.activeElement).blur();
	          }
	        },

	        restore: {
	          focus: function() {
	            if($focusedElement && $focusedElement.size() > 0) {
	              $focusedElement.focus();
	            }
	          }
	        },

	        remove: {
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          screenHeight: function() {
	            if(module.cache.height > module.cache.pageHeight) {
	              module.debug('Removing page height');
	              $body
	                .css('height', '')
	              ;
	            }
	          },
	          keyboardShortcuts: function() {
	            module.verbose('Removing keyboard shortcuts');
	            $document
	              .off('keyup' + eventNamespace)
	            ;
	          },
	          scrolling: function() {
	            $dimmable.removeClass(className.scrolling);
	            $module.removeClass(className.scrolling);
	          }
	        },


	        cacheSizes: function() {
	          var
	            modalHeight = $module.outerHeight()
	          ;
	          if(modalHeight !== 0) {
	            module.cache = {
	              pageHeight    : $(document).outerHeight(),
	              height        : modalHeight + settings.offset,
	              contextHeight : (settings.context == 'body')
	                ? $(window).height()
	                : $dimmable.height()
	            };
	            module.debug('Caching modal and container sizes', module.cache);
	          }
	        },


	        can: {
	          fit: function() {
	            return (module.cache.height < module.cache.contextHeight);
	          }
	        },

	        is: {
	          active: function() {
	            return $module.hasClass(className.active);
	          },
	          modernBrowser: function() {
	            // appName for IE11 reports 'Netscape' can no longer use
	            return !(window.ActiveXObject || "ActiveXObject" in window);
	          }
	        },

	        set: {
	          screenHeight: function() {
	            if(module.cache.height > module.cache.pageHeight) {
	              module.debug('Modal is taller than page content, resizing page height');
	              $body
	                .css('height', module.cache.height + settings.padding)
	              ;
	            }
	          },
	          active: function() {
	            $module.addClass(className.active);

	            if(settings.closable) {
	              $dimmer
	                .off('click' + eventNamespace)
	                .on('click' + eventNamespace, module.event.click)
	              ;
	            }

	            if(settings.autofocus) {
	                var $inputs    = $module.find(':input:visible');
	                var $autofocus = $inputs.filter('[autofocus]');
	                var $input     = $autofocus.length ? $autofocus : $inputs;

	                $input.first().focus();
	            }
	          },
	          scrolling: function() {
	            $dimmable.addClass(className.scrolling);
	            $module.addClass(className.scrolling);
	          },
	          type: function() {
	            if(module.can.fit()) {
	              module.verbose('Modal fits on screen');
	              module.remove.scrolling();
	            }
	            else {
	              module.verbose('Modal cannot fit on screen setting to scrolling');
	              module.set.scrolling();
	            }
	          },
	          position: function() {
	            module.verbose('Centering modal on page', module.cache);
	            if(module.can.fit()) {
	              $module
	                .css({
	                  top: '',
	                  marginTop: -(module.cache.height / 2)
	                })
	              ;
	            }
	            else {
	              $module
	                .css({
	                  marginTop : '1em',
	                  top       : $document.scrollTop()
	                })
	              ;
	            }
	          }
	        },

	        setting: function(name, value) {
	          module.debug('Changing setting', name, value);
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.modal.settings = {

	  name          : 'Modal',
	  namespace     : 'modal',

	  debug         : false,
	  verbose       : true,
	  performance   : true,

	  allowMultiple : true,
	  detachable    : true,
	  closable      : true,
	  autofocus     : true,
	  context       : 'body',

	  duration      : 500,
	  easing        : 'easeOutQuad',
	  offset        : 0,
	  transition    : 'scale',

	  padding       : 30,

	  onShow        : function(){},
	  onHide        : function(){},

	  onVisible     : function(){},
	  onHidden      : function(){},

	  onApprove     : function(){ return true; },
	  onDeny        : function(){ return true; },

	  selector    : {
	    close    : '.close, .actions .button',
	    approve  : '.actions .positive, .actions .approve, .actions .ok',
	    deny     : '.actions .negative, .actions .deny, .actions .cancel',
	    modal    : '.ui.modal'
	  },
	  error : {
	    dimmer    : 'UI Dimmer, a required component is not included in this page',
	    method    : 'The method you called is not defined.'
	  },
	  className : {
	    active    : 'active',
	    scrolling : 'scrolling'
	  }
	};

	// Adds easing
	$.extend( $.easing, {
	  easeOutQuad: function (x, t, b, c, d) {
	    return -c *(t/=d)*(t-2) + b;
	  }
	});

	})( jQuery, window , document );

	/*
	 * # Semantic - Nag
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.nag = function(parameters) {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $(this)
	    .each(function() {
	      var
	        settings        = $.extend(true, {}, $.fn.nag.settings, parameters),

	        className       = settings.className,
	        selector        = settings.selector,
	        error           = settings.error,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = namespace + '-module',

	        $module         = $(this),

	        $close          = $module.find(selector.close),
	        $context        = $(settings.context),


	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        moduleOffset,
	        moduleHeight,

	        contextWidth,
	        contextHeight,
	        contextOffset,

	        yOffset,
	        yPosition,

	        timer,
	        module,

	        requestAnimationFrame = window.requestAnimationFrame
	          || window.mozRequestAnimationFrame
	          || window.webkitRequestAnimationFrame
	          || window.msRequestAnimationFrame
	          || function(callback) { setTimeout(callback, 0); }
	      ;
	      module = {

	        initialize: function() {
	          module.verbose('Initializing element');
	          // calculate module offset once
	          moduleOffset  = $module.offset();
	          moduleHeight  = $module.outerHeight();
	          contextWidth  = $context.outerWidth();
	          contextHeight = $context.outerHeight();
	          contextOffset = $context.offset();

	          $module
	            .data(moduleNamespace, module)
	          ;
	          $close
	            .on('click' + eventNamespace, module.dismiss)
	          ;
	          // lets avoid javascript if we dont need to reposition
	          if(settings.context == window && settings.position == 'fixed') {
	            $module
	              .addClass(className.fixed)
	            ;
	          }
	          if(settings.sticky) {
	            module.verbose('Adding scroll events');
	            // retrigger on scroll for absolute
	            if(settings.position == 'absolute') {
	              $context
	                .on('scroll' + eventNamespace, module.event.scroll)
	                .on('resize' + eventNamespace, module.event.scroll)
	              ;
	            }
	            // fixed is always relative to window
	            else {
	              $(window)
	                .on('scroll' + eventNamespace, module.event.scroll)
	                .on('resize' + eventNamespace, module.event.scroll)
	              ;
	            }
	            // fire once to position on init
	            $.proxy(module.event.scroll, this)();
	          }

	          if(settings.displayTime > 0) {
	            setTimeout(module.hide, settings.displayTime);
	          }
	          if(module.should.show()) {
	            if( !$module.is(':visible') ) {
	              module.show();
	            }
	          }
	          else {
	            module.hide();
	          }
	        },

	        destroy: function() {
	          module.verbose('Destroying instance');
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	          if(settings.sticky) {
	            $context
	              .off(eventNamespace)
	            ;
	          }
	        },

	        refresh: function() {
	          module.debug('Refreshing cached calculations');
	          moduleOffset  = $module.offset();
	          moduleHeight  = $module.outerHeight();
	          contextWidth  = $context.outerWidth();
	          contextHeight = $context.outerHeight();
	          contextOffset = $context.offset();
	        },

	        show: function() {
	          module.debug('Showing nag', settings.animation.show);
	          if(settings.animation.show == 'fade') {
	            $module
	              .fadeIn(settings.duration, settings.easing)
	            ;
	          }
	          else {
	            $module
	              .slideDown(settings.duration, settings.easing)
	            ;
	          }
	        },

	        hide: function() {
	          module.debug('Showing nag', settings.animation.hide);
	          if(settings.animation.show == 'fade') {
	            $module
	              .fadeIn(settings.duration, settings.easing)
	            ;
	          }
	          else {
	            $module
	              .slideUp(settings.duration, settings.easing)
	            ;
	          }
	        },

	        onHide: function() {
	          module.debug('Removing nag', settings.animation.hide);
	          $module.remove();
	          if (settings.onHide) {
	            settings.onHide();
	          }
	        },

	        stick: function() {
	          module.refresh();

	          if(settings.position == 'fixed') {
	            var
	              windowScroll = $(window).prop('pageYOffset') || $(window).scrollTop(),
	              fixedOffset = ( $module.hasClass(className.bottom) )
	                ? contextOffset.top + (contextHeight - moduleHeight) - windowScroll
	                : contextOffset.top - windowScroll
	            ;
	            $module
	              .css({
	                position : 'fixed',
	                top      : fixedOffset,
	                left     : contextOffset.left,
	                width    : contextWidth - settings.scrollBarWidth
	              })
	            ;
	          }
	          else {
	            $module
	              .css({
	                top : yPosition
	              })
	            ;
	          }
	        },
	        unStick: function() {
	          $module
	            .css({
	              top : ''
	            })
	          ;
	        },
	        dismiss: function(event) {
	          if(settings.storageMethod) {
	            module.storage.set(settings.storedKey, settings.storedValue);
	          }
	          module.hide();
	          event.stopImmediatePropagation();
	          event.preventDefault();
	        },

	        should: {
	          show: function() {
	            if(settings.persist) {
	              module.debug('Persistent nag is set, can show nag');
	              return true;
	            }
	            if(module.storage.get(settings.storedKey) != settings.storedValue) {
	              module.debug('Stored value is not set, can show nag', module.storage.get(settings.storedKey));
	              return true;
	            }
	            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.storedKey));
	            return false;
	          },
	          stick: function() {
	            yOffset   = $context.prop('pageYOffset') || $context.scrollTop();
	            yPosition = ( $module.hasClass(className.bottom) )
	              ? (contextHeight - $module.outerHeight() ) + yOffset
	              : yOffset
	            ;
	            // absolute position calculated when y offset met
	            if(yPosition > moduleOffset.top) {
	              return true;
	            }
	            else if(settings.position == 'fixed') {
	              return true;
	            }
	            return false;
	          }
	        },

	        storage: {

	          set: function(key, value) {
	            module.debug('Setting stored value', key, value, settings.storageMethod);
	            if(settings.storageMethod == 'local' && window.store !== undefined) {
	              window.store.set(key, value);
	            }
	            // store by cookie
	            else if($.cookie !== undefined) {
	              $.cookie(key, value);
	            }
	            else {
	              module.error(error.noStorage);
	            }
	          },
	          get: function(key) {
	            module.debug('Getting stored value', key, settings.storageMethod);
	            if(settings.storageMethod == 'local' && window.store !== undefined) {
	              return window.store.get(key);
	            }
	            // get by cookie
	            else if($.cookie !== undefined) {
	              return $.cookie(key);
	            }
	            else {
	              module.error(error.noStorage);
	            }
	          }

	        },

	        event: {
	          scroll: function() {
	            if(timer !== undefined) {
	              clearTimeout(timer);
	            }
	            timer = setTimeout(function() {
	              if(module.should.stick() ) {
	                requestAnimationFrame(module.stick);
	              }
	              else {
	                module.unStick();
	              }
	            }, settings.lag);
	          }
	        },
	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          module.debug('Changing internal', name, value);
	          if(value !== undefined) {
	            if( $.isPlainObject(name) ) {
	              $.extend(true, module, name);
	            }
	            else {
	              module[name] = value;
	            }
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }

	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.nag.settings = {

	  name        : 'Nag',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  namespace   : 'Nag',

	  // allows cookie to be overriden
	  persist     : false,

	  // set to zero to manually dismiss, otherwise hides on its own
	  displayTime : 0,

	  animation   : {
	    show: 'slide',
	    hide: 'slide'
	  },

	  // method of stickyness
	  position       : 'fixed',
	  scrollBarWidth : 18,

	  // type of storage to use
	  storageMethod  : 'cookie',

	  // value to store in dismissed localstorage/cookie
	  storedKey      : 'nag',
	  storedValue    : 'dismiss',

	  // need to calculate stickyness on scroll
	  sticky         : false,

	  // how often to check scroll event
	  lag            : 0,

	  // context for scroll event
	  context        : window,

	  error: {
	    noStorage  : 'Neither $.cookie or store is defined. A storage solution is required for storing state',
	    method    : 'The method you called is not defined.'
	  },

	  className     : {
	    bottom      : 'bottom',
	    fixed       : 'fixed'
	  },

	  selector      : {
	    close: '.icon.close'
	  },

	  speed         : 500,
	  easing        : 'easeOutQuad',

	  onHide: function() {}

	};

	})( jQuery, window , document );

	/*
	 * # Semantic - Popup
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.popup = function(parameters) {
	  var
	    $allModules     = $(this),
	    $document       = $(document),

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.popup.settings, parameters)
	          : $.extend({}, $.fn.popup.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        error           = settings.error,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + settings.namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $context        = $(settings.context),
	        $target         = (settings.target)
	          ? $(settings.target)
	          : $module,

	        $window         = $(window),

	        $offsetParent   = (settings.inline)
	          ? $target.offsetParent()
	          : $window,
	        $popup          = (settings.inline)
	          ? $target.next(settings.selector.popup)
	          : $window.children(settings.selector.popup).last(),

	        searchDepth     = 0,

	        element         = this,
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        // binds events
	        initialize: function() {
	          module.debug('Initializing module', $module);
	          if(settings.on == 'click') {
	            $module
	              .on('click', module.toggle)
	            ;
	          }
	          else {
	            $module
	              .on(module.get.startEvent() + eventNamespace, module.event.start)
	              .on(module.get.endEvent() + eventNamespace, module.event.end)
	            ;
	          }
	          if(settings.target) {
	            module.debug('Target set to element', $target);
	          }
	          $window
	            .on('resize' + eventNamespace, module.event.resize)
	          ;
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        refresh: function() {
	          if(settings.inline) {
	            $popup = $target.next(selector.popup);
	            $offsetParent = $target.offsetParent();
	          }
	          else {
	            $popup = $window.children(selector.popup).last();
	          }
	        },

	        destroy: function() {
	          module.debug('Destroying previous module');
	          $window
	            .off(eventNamespace)
	          ;
	          $popup
	            .remove()
	          ;
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        event: {
	          start:  function(event) {
	            module.timer = setTimeout(function() {
	              if( module.is.hidden() ) {
	                module.show();
	              }
	            }, settings.delay);
	          },
	          end:  function() {
	            clearTimeout(module.timer);
	            if( module.is.visible() ) {
	              module.hide();
	            }
	          },
	          resize: function() {
	            if( module.is.visible() ) {
	              module.set.position();
	            }
	          }
	        },

	        // generates popup html from metadata
	        create: function() {
	          module.debug('Creating pop-up html');
	          var
	            html      = $module.data(metadata.html)      || settings.html,
	            variation = $module.data(metadata.variation) || settings.variation,
	            title     = $module.data(metadata.title)     || settings.title,
	            content   = $module.data(metadata.content)   || $module.attr('title') || settings.content
	          ;
	          if(html || content || title) {
	            if(!html) {
	              html = settings.template({
	                title   : title,
	                content : content
	              });
	            }
	            $popup = $('<div/>')
	              .addClass(className.popup)
	              .addClass(variation)
	              .html(html)
	            ;
	            if(settings.inline) {
	              module.verbose('Inserting popup element inline', $popup);
	              $popup
	                .data(moduleNamespace, instance)
	                .insertAfter($module)
	              ;
	            }
	            else {
	              module.verbose('Appending popup element to body', $popup);
	              $popup
	                .data(moduleNamespace, instance)
	                .appendTo( $context )
	              ;
	            }
	            $.proxy(settings.onCreate, $popup)();
	          }
	          else {
	            module.error(error.content);
	          }
	        },

	        // determines popup state
	        toggle: function() {
	          module.debug('Toggling pop-up');
	          if( module.is.hidden() ) {
	            module.debug('Popup is hidden, showing pop-up');
	            module.unbind.close();
	            module.hideAll();
	            module.show();
	          }
	          else {
	            module.debug('Popup is visible, hiding pop-up');
	            module.hide();
	          }
	        },

	        show: function(callback) {
	          callback = callback || function(){};
	          module.debug('Showing pop-up', settings.transition);
	          if(!settings.preserve) {
	            module.refresh();
	          }
	          if( !module.exists() ) {
	            module.create();
	          }
	          module.save.conditions();
	          module.set.position();
	          module.animate.show(callback);
	        },


	        hide: function(callback) {
	          callback = callback || function(){};
	          $module
	            .removeClass(className.visible)
	          ;
	          module.restore.conditions();
	          module.unbind.close();
	          if( module.is.visible() ) {
	            module.animate.hide(callback);
	          }
	        },

	        hideAll: function() {
	          $(selector.popup)
	            .filter(':visible')
	              .popup('hide')
	          ;
	        },

	        hideGracefully: function(event) {
	          // don't close on clicks inside popup
	          if(event && $(event.target).closest(selector.popup).size() === 0) {
	            module.debug('Click occurred outside popup hiding popup');
	            module.hide();
	          }
	          else {
	            module.debug('Click was inside popup, keeping popup open');
	          }
	        },

	        exists: function() {
	          if(settings.inline) {
	            return ( $popup.size() !== 0 );
	          }
	          else {
	            return ( $popup.parent($context).size() );
	          }
	        },

	        remove: function() {
	          module.debug('Removing popup');
	          $popup
	            .remove()
	          ;
	          $.proxy(settings.onRemove, $popup)();
	        },

	        save: {
	          conditions: function() {
	            module.cache = {
	              title: $module.attr('title')
	            };
	            if (module.cache.title) {
	              $module.removeAttr('title');
	            }
	            module.verbose('Saving original attributes', module.cache.title);
	          }
	        },
	        restore: {
	          conditions: function() {
	            if(module.cache && module.cache.title) {
	              $module.attr('title', module.cache.title);
	              module.verbose('Restoring original attributes', module.cache.title);
	            }
	            return true;
	          }
	        },
	        animate: {
	          show: function(callback) {
	            callback = callback || function(){};
	            $module
	              .addClass(className.visible)
	            ;
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              $popup
	                .transition(settings.transition + ' in', settings.duration, function() {
	                  module.bind.close();
	                  $.proxy(callback, element)();
	                })
	              ;
	            }
	            else {
	              $popup
	                .stop()
	                .fadeIn(settings.duration, settings.easing, function() {
	                  module.bind.close();
	                  $.proxy(callback, element)();
	                })
	              ;
	            }
	            $.proxy(settings.onShow, element)();
	          },
	          hide: function(callback) {
	            callback = callback || function(){};
	            module.debug('Hiding pop-up');
	            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {
	              $popup
	                .transition(settings.transition + ' out', settings.duration, function() {
	                  module.reset();
	                  callback();
	                })
	              ;
	            }
	            else {
	              $popup
	                .stop()
	                .fadeOut(settings.duration, settings.easing, function() {
	                  module.reset();
	                  callback();
	                })
	              ;
	            }
	            $.proxy(settings.onHide, element)();
	          }
	        },

	        get: {
	          startEvent: function() {
	            if(settings.on == 'hover') {
	              return 'mouseenter';
	            }
	            else if(settings.on == 'focus') {
	              return 'focus';
	            }
	          },
	          endEvent: function() {
	            if(settings.on == 'hover') {
	              return 'mouseleave';
	            }
	            else if(settings.on == 'focus') {
	              return 'blur';
	            }
	          },
	          offstagePosition: function() {
	            var
	              boundary  = {
	                top    : $(window).scrollTop(),
	                bottom : $(window).scrollTop() + $(window).height(),
	                left   : 0,
	                right  : $(window).width()
	              },
	              popup     = {
	                width    : $popup.width(),
	                height   : $popup.outerHeight(),
	                position : $popup.offset()
	              },
	              offstage  = {},
	              offstagePositions = []
	            ;
	            if(popup.position) {
	              offstage = {
	                top    : (popup.position.top < boundary.top),
	                bottom : (popup.position.top + popup.height > boundary.bottom),
	                right  : (popup.position.left + popup.width > boundary.right),
	                left   : (popup.position.left < boundary.left)
	              };
	            }
	            module.verbose('Checking if outside viewable area', popup.position);
	            // return only boundaries that have been surpassed
	            $.each(offstage, function(direction, isOffstage) {
	              if(isOffstage) {
	                offstagePositions.push(direction);
	              }
	            });
	            return (offstagePositions.length > 0)
	              ? offstagePositions.join(' ')
	              : false
	            ;
	          },
	          nextPosition: function(position) {
	            switch(position) {
	              case 'top left':
	                position = 'bottom left';
	              break;
	              case 'bottom left':
	                position = 'top right';
	              break;
	              case 'top right':
	                position = 'bottom right';
	              break;
	              case 'bottom right':
	                position = 'top center';
	              break;
	              case 'top center':
	                position = 'bottom center';
	              break;
	              case 'bottom center':
	                position = 'right center';
	              break;
	              case 'right center':
	                position = 'left center';
	              break;
	              case 'left center':
	                position = 'top center';
	              break;
	            }
	            return position;
	          }
	        },

	        set: {
	          position: function(position, arrowOffset) {
	            var
	              windowWidth  = $(window).width(),
	              windowHeight = $(window).height(),

	              width        = $target.outerWidth(),
	              height       = $target.outerHeight(),

	              popupWidth   = $popup.width(),
	              popupHeight  = $popup.outerHeight(),

	              parentWidth  = $offsetParent.outerWidth(),
	              parentHeight = $offsetParent.outerHeight(),

	              distanceAway = settings.distanceAway,

	              offset       = (settings.inline)
	                ? $target.position()
	                : $target.offset(),

	              positioning,
	              offstagePosition
	            ;
	            position    = position    || $module.data(metadata.position)    || settings.position;
	            arrowOffset = arrowOffset || $module.data(metadata.offset)      || settings.offset;
	            // adjust for margin when inline
	            if(settings.inline) {
	              if(position == 'left center' || position == 'right center') {
	                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);
	                distanceAway += -parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);
	              }
	              else {
	                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);
	                distanceAway += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);
	              }
	            }
	            module.debug('Calculating offset for position', position);
	            switch(position) {
	              case 'top left':
	                positioning = {
	                  bottom :  parentHeight - offset.top + distanceAway,
	                  right  :  parentWidth - offset.left - arrowOffset,
	                  top    : 'auto',
	                  left   : 'auto'
	                };
	              break;
	              case 'top center':
	                positioning = {
	                  bottom :  parentHeight - offset.top + distanceAway,
	                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,
	                  top    : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'top right':
	                positioning = {
	                  top    : 'auto',
	                  bottom :  parentHeight - offset.top + distanceAway,
	                  left   : offset.left + width + arrowOffset,
	                  right  : 'auto'
	                };
	              break;
	              case 'left center':
	                positioning = {
	                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,
	                  right  : parentWidth - offset.left + distanceAway,
	                  left   : 'auto',
	                  bottom : 'auto'
	                };
	              break;
	              case 'right center':
	                positioning = {
	                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,
	                  left   : offset.left + width + distanceAway,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'bottom left':
	                positioning = {
	                  top    :  offset.top + height + distanceAway,
	                  right  : parentWidth - offset.left - arrowOffset,
	                  left   : 'auto',
	                  bottom : 'auto'
	                };
	              break;
	              case 'bottom center':
	                positioning = {
	                  top    :  offset.top + height + distanceAway,
	                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	              case 'bottom right':
	                positioning = {
	                  top    :  offset.top + height + distanceAway,
	                  left   : offset.left + width + arrowOffset,
	                  bottom : 'auto',
	                  right  : 'auto'
	                };
	              break;
	            }
	            // tentatively place on stage
	            $popup
	              .css(positioning)
	              .removeClass(className.position)
	              .addClass(position)
	              .addClass(className.loading)
	            ;
	            // check if is offstage
	            offstagePosition = module.get.offstagePosition();

	            // recursively find new positioning
	            if(offstagePosition) {
	              module.debug('Element is outside boundaries', offstagePosition);
	              if(searchDepth < settings.maxSearchDepth) {
	                position = module.get.nextPosition(position);
	                searchDepth++;
	                module.debug('Trying new position', position);
	                return module.set.position(position);
	              }
	              else {
	                module.error(error.recursion);
	                searchDepth = 0;
	                module.reset();
	                $popup.removeClass(className.loading);
	                return false;
	              }
	            }
	            else {
	              module.debug('Position is on stage', position);
	              searchDepth = 0;
	              $popup.removeClass(className.loading);
	              return true;
	            }
	          }

	        },

	        bind: {
	          close:function() {
	            if(settings.on == 'click' && settings.closable) {
	              module.verbose('Binding popup close event to document');
	              $document
	                .on('click' + eventNamespace, function(event) {
	                  module.verbose('Pop-up clickaway intent detected');
	                  $.proxy(module.hideGracefully, this)(event);
	                })
	              ;
	            }
	          }
	        },

	        unbind: {
	          close: function() {
	            if(settings.on == 'click' && settings.closable) {
	              module.verbose('Removing close event from document');
	              $document
	                .off('click' + eventNamespace)
	              ;
	            }
	          }
	        },

	        is: {
	          animating: function() {
	            return ( $popup.is(':animated') || $popup.hasClass(className.animating) );
	          },
	          visible: function() {
	            return $popup.is(':visible');
	          },
	          hidden: function() {
	            return !module.is.visible();
	          }
	        },

	        reset: function() {
	          $popup
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	          if(!settings.preserve) {
	            module.remove();
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.popup.settings = {

	  name           : 'Popup',
	  debug          : false,
	  verbose        : true,
	  performance    : true,
	  namespace      : 'popup',

	  onCreate       : function(){},
	  onRemove       : function(){},
	  onShow         : function(){},
	  onHide         : function(){},

	  variation      : '',
	  content        : false,
	  html           : false,
	  title          : false,

	  on             : 'hover',
	  target         : false,
	  closable       : true,

	  context        : 'body',
	  position       : 'top center',
	  delay          : 150,
	  inline         : false,
	  preserve       : false,

	  duration       : 250,
	  easing         : 'easeOutQuad',
	  transition     : 'scale',

	  distanceAway   : 0,
	  offset         : 0,
	  maxSearchDepth : 10,

	  error: {
	    content   : 'Your popup has no content specified',
	    method    : 'The method you called is not defined.',
	    recursion : 'Popup attempted to reposition element to fit, but could not find an adequate position.'
	  },

	  metadata: {
	    content   : 'content',
	    html      : 'html',
	    offset    : 'offset',
	    position  : 'position',
	    title     : 'title',
	    variation : 'variation'
	  },

	  className   : {
	    animating   : 'animating',
	    loading     : 'loading',
	    popup       : 'ui popup',
	    position    : 'top left center bottom right',
	    visible     : 'visible'
	  },

	  selector    : {
	    popup    : '.ui.popup'
	  },

	  template: function(text) {
	    var html = '';
	    if(typeof text !== undefined) {
	      if(typeof text.title !== undefined && text.title) {
	        html += '<div class="header">' + text.title + '</div>';
	      }
	      if(typeof text.content !== undefined && text.content) {
	        html += '<div class="content">' + text.content + '</div>';
	      }
	    }
	    return html;
	  }

	};

	// Adds easing
	$.extend( $.easing, {
	  easeOutQuad: function (x, t, b, c, d) {
	    return -c *(t/=d)*(t-2) + b;
	  }
	});


	})( jQuery, window , document );

	/*
	 * # Semantic - Rating
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.rating = function(parameters) {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.rating.settings, parameters)
	          : $.extend({}, $.fn.rating.settings),

	        namespace       = settings.namespace,
	        className       = settings.className,
	        metadata        = settings.metadata,
	        selector        = settings.selector,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        element         = this,
	        instance        = $(this).data(moduleNamespace),

	        $module         = $(this),
	        $icon           = $module.find(selector.icon),

	        module
	      ;

	      module = {

	        initialize: function() {
	          module.verbose('Initializing rating module', settings);

	          if(settings.interactive) {
	            module.enable();
	          }
	          else {
	            module.disable();
	          }

	          if(settings.initialRating) {
	            module.debug('Setting initial rating');
	            module.setRating(settings.initialRating);
	          }
	          if( $module.data(metadata.rating) ) {
	            module.debug('Rating found in metadata');
	            module.setRating( $module.data(metadata.rating) );
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Instantiating module', settings);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous instance', instance);
	          $module
	            .removeData(moduleNamespace)
	          ;
	          $icon
	            .off(eventNamespace)
	          ;
	        },

	        event: {
	          mouseenter: function() {
	            var
	              $activeIcon = $(this)
	            ;
	            $activeIcon
	              .nextAll()
	                .removeClass(className.hover)
	            ;
	            $module
	              .addClass(className.hover)
	            ;
	            $activeIcon
	              .addClass(className.hover)
	                .prevAll()
	                .addClass(className.hover)
	            ;
	          },
	          mouseleave: function() {
	            $module
	              .removeClass(className.hover)
	            ;
	            $icon
	              .removeClass(className.hover)
	            ;
	          },
	          click: function() {
	            var
	              $activeIcon   = $(this),
	              currentRating = module.getRating(),
	              rating        = $icon.index($activeIcon) + 1
	            ;
	            if(settings.clearable && currentRating == rating) {
	              module.clearRating();
	            }
	            else {
	              module.setRating( rating );
	            }
	          }
	        },

	        clearRating: function() {
	          module.debug('Clearing current rating');
	          module.setRating(0);
	        },

	        getRating: function() {
	          var
	            currentRating = $icon.filter('.' + className.active).size()
	          ;
	          module.verbose('Current rating retrieved', currentRating);
	          return currentRating;
	        },

	        enable: function() {
	          module.debug('Setting rating to interactive mode');
	          $icon
	            .on('mouseenter' + eventNamespace, module.event.mouseenter)
	            .on('mouseleave' + eventNamespace, module.event.mouseleave)
	            .on('click' + eventNamespace, module.event.click)
	          ;
	          $module
	            .removeClass(className.disabled)
	          ;
	        },

	        disable: function() {
	          module.debug('Setting rating to read-only mode');
	          $icon
	            .off(eventNamespace)
	          ;
	          $module
	            .addClass(className.disabled)
	          ;
	        },

	        setRating: function(rating) {
	          var
	            ratingIndex = (rating - 1 >= 0)
	              ? (rating - 1)
	              : 0,
	            $activeIcon = $icon.eq(ratingIndex)
	          ;
	          $module
	            .removeClass(className.hover)
	          ;
	          $icon
	            .removeClass(className.hover)
	            .removeClass(className.active)
	          ;
	          if(rating > 0) {
	            module.verbose('Setting current rating to', rating);
	            $activeIcon
	              .addClass(className.active)
	                .prevAll()
	                .addClass(className.active)
	            ;
	          }
	          $.proxy(settings.onRate, element)(rating);
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.rating.settings = {

	  name          : 'Rating',
	  namespace     : 'rating',

	  verbose       : true,
	  debug         : false,
	  performance   : true,

	  initialRating : 0,
	  interactive   : true,
	  clearable     : false,

	  onRate        : function(rating){},

	  error       : {
	    method : 'The method you called is not defined'
	  },

	  metadata: {
	    rating: 'rating'
	  },

	  className : {
	    active   : 'active',
	    disabled : 'disabled',
	    hover    : 'hover',
	    loading  : 'loading'
	  },

	  selector  : {
	    icon : '.icon'
	  }

	};

	})( jQuery, window , document );

	/*
	 * # Semantic - Search
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ($, window, document, undefined) {

	$.fn.search = function(source, parameters) {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;
	  $(this)
	    .each(function() {
	      var
	        settings        = $.extend(true, {}, $.fn.search.settings, parameters),

	        className       = settings.className,
	        selector        = settings.selector,
	        error           = settings.error,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = namespace + '-module',

	        $module         = $(this),
	        $prompt         = $module.find(selector.prompt),
	        $searchButton   = $module.find(selector.searchButton),
	        $results        = $module.find(selector.results),
	        $result         = $module.find(selector.result),
	        $category       = $module.find(selector.category),

	        element         = this,
	        instance        = $module.data(moduleNamespace),

	        module
	      ;
	      module = {

	        initialize: function() {
	          module.verbose('Initializing module');
	          var
	            prompt = $prompt[0],
	            inputEvent   = (prompt.oninput !== undefined)
	              ? 'input'
	              : (prompt.onpropertychange !== undefined)
	                ? 'propertychange'
	                : 'keyup'
	          ;
	          // attach events
	          $prompt
	            .on('focus' + eventNamespace, module.event.focus)
	            .on('blur' + eventNamespace, module.event.blur)
	            .on('keydown' + eventNamespace, module.handleKeyboard)
	          ;
	          if(settings.automatic) {
	            $prompt
	              .on(inputEvent + eventNamespace, module.search.throttle)
	            ;
	          }
	          $searchButton
	            .on('click' + eventNamespace, module.search.query)
	          ;
	          $results
	            .on('click' + eventNamespace, selector.result, module.results.select)
	          ;
	          module.instantiate();
	        },
	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },
	        destroy: function() {
	          module.verbose('Destroying instance');
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },
	        event: {
	          focus: function() {
	            $module
	              .addClass(className.focus)
	            ;
	            module.results.show();
	          },
	          blur: function() {
	            module.search.cancel();
	            $module
	              .removeClass(className.focus)
	            ;
	            module.results.hide();
	          }
	        },
	        handleKeyboard: function(event) {
	          var
	            // force latest jq dom
	            $result       = $module.find(selector.result),
	            $category     = $module.find(selector.category),
	            keyCode       = event.which,
	            keys          = {
	              backspace : 8,
	              enter     : 13,
	              escape    : 27,
	              upArrow   : 38,
	              downArrow : 40
	            },
	            activeClass  = className.active,
	            currentIndex = $result.index( $result.filter('.' + activeClass) ),
	            resultSize   = $result.size(),
	            newIndex
	          ;
	          // search shortcuts
	          if(keyCode == keys.escape) {
	            module.verbose('Escape key pressed, blurring search field');
	            $prompt
	              .trigger('blur')
	            ;
	          }
	          // result shortcuts
	          if($results.filter(':visible').size() > 0) {
	            if(keyCode == keys.enter) {
	              module.verbose('Enter key pressed, selecting active result');
	              if( $result.filter('.' + activeClass).size() > 0 ) {
	                $.proxy(module.results.select, $result.filter('.' + activeClass) )();
	                event.preventDefault();
	                return false;
	              }
	            }
	            else if(keyCode == keys.upArrow) {
	              module.verbose('Up key pressed, changing active result');
	              newIndex = (currentIndex - 1 < 0)
	                ? currentIndex
	                : currentIndex - 1
	              ;
	              $category
	                .removeClass(activeClass)
	              ;
	              $result
	                .removeClass(activeClass)
	                .eq(newIndex)
	                  .addClass(activeClass)
	                  .closest($category)
	                    .addClass(activeClass)
	              ;
	              event.preventDefault();
	            }
	            else if(keyCode == keys.downArrow) {
	              module.verbose('Down key pressed, changing active result');
	              newIndex = (currentIndex + 1 >= resultSize)
	                ? currentIndex
	                : currentIndex + 1
	              ;
	              $category
	                .removeClass(activeClass)
	              ;
	              $result
	                .removeClass(activeClass)
	                .eq(newIndex)
	                  .addClass(activeClass)
	                  .closest($category)
	                    .addClass(activeClass)
	              ;
	              event.preventDefault();
	            }
	          }
	          else {
	            // query shortcuts
	            if(keyCode == keys.enter) {
	              module.verbose('Enter key pressed, executing query');
	              module.search.query();
	              $searchButton
	                .addClass(className.down)
	              ;
	              $prompt
	                .one('keyup', function(){
	                  $searchButton
	                    .removeClass(className.down)
	                  ;
	                })
	              ;
	            }
	          }
	        },
	        search: {
	          cancel: function() {
	            var
	              xhr = $module.data('xhr') || false
	            ;
	            if( xhr && xhr.state() != 'resolved') {
	              module.debug('Cancelling last search');
	              xhr.abort();
	            }
	          },
	          throttle: function() {
	            var
	              searchTerm    = $prompt.val(),
	              numCharacters = searchTerm.length
	            ;
	            clearTimeout(module.timer);
	            if(numCharacters >= settings.minCharacters)  {
	              module.timer = setTimeout(module.search.query, settings.searchThrottle);
	            }
	            else {
	              module.results.hide();
	            }
	          },
	          query: function() {
	            var
	              searchTerm = $prompt.val(),
	              cachedHTML = module.search.cache.read(searchTerm)
	            ;
	            if(cachedHTML) {
	              module.debug("Reading result for '" + searchTerm + "' from cache");
	              module.results.add(cachedHTML);
	            }
	            else {
	              module.debug("Querying for '" + searchTerm + "'");
	              if(typeof source == 'object') {
	                module.search.local(searchTerm);
	              }
	              else {
	                module.search.remote(searchTerm);
	              }
	              $.proxy(settings.onSearchQuery, $module)(searchTerm);
	            }
	          },
	          local: function(searchTerm) {
	            var
	              results   = [],
	              fullTextResults = [],
	              searchFields    = $.isArray(settings.searchFields)
	                ? settings.searchFields
	                : [settings.searchFields],

	              searchRegExp   = new RegExp('(?:\s|^)' + searchTerm, 'i'),
	              fullTextRegExp = new RegExp(searchTerm, 'i'),
	              searchHTML
	            ;
	            $module
	              .addClass(className.loading)
	            ;
	            // iterate through search fields in array order
	            $.each(searchFields, function(index, field) {
	              $.each(source, function(label, thing) {
	                if(typeof thing[field] == 'string' && ($.inArray(thing, results) == -1) && ($.inArray(thing, fullTextResults) == -1) ) {
	                  if( searchRegExp.test( thing[field] ) ) {
	                    results.push(thing);
	                  }
	                  else if( fullTextRegExp.test( thing[field] ) ) {
	                    fullTextResults.push(thing);
	                  }
	                }
	              });
	            });
	            searchHTML = module.results.generate({
	              results: $.merge(results, fullTextResults)
	            });
	            $module
	              .removeClass(className.loading)
	            ;
	            module.search.cache.write(searchTerm, searchHTML);
	            module.results.add(searchHTML);
	          },
	          remote: function(searchTerm) {
	            var
	              apiSettings = {
	                stateContext  : $module,
	                url           : source,
	                urlData: { query: searchTerm },
	                success       : function(response) {
	                  searchHTML = module.results.generate(response);
	                  module.search.cache.write(searchTerm, searchHTML);
	                  module.results.add(searchHTML);
	                },
	                failure      : module.error
	              },
	              searchHTML
	            ;
	            module.search.cancel();
	            module.debug('Executing search');
	            $.extend(true, apiSettings, settings.apiSettings);
	            $.api(apiSettings);
	          },

	          cache: {
	            read: function(name) {
	              var
	                cache = $module.data('cache')
	              ;
	              return (settings.cache && (typeof cache == 'object') && (cache[name] !== undefined) )
	                ? cache[name]
	                : false
	              ;
	            },
	            write: function(name, value) {
	              var
	                cache = ($module.data('cache') !== undefined)
	                  ? $module.data('cache')
	                  : {}
	              ;
	              cache[name] = value;
	              $module
	                .data('cache', cache)
	              ;
	            }
	          }
	        },

	        results: {
	          generate: function(response) {
	            module.debug('Generating html from response', response);
	            var
	              template = settings.templates[settings.type],
	              html     = ''
	            ;
	            if(($.isPlainObject(response.results) && !$.isEmptyObject(response.results)) || ($.isArray(response.results) && response.results.length > 0) ) {
	              if(settings.maxResults > 0) {
	                response.results = $.makeArray(response.results).slice(0, settings.maxResults);
	              }
	              if(response.results.length > 0) {
	                if($.isFunction(template)) {
	                  html = template(response);
	                }
	                else {
	                  module.error(error.noTemplate, false);
	                }
	              }
	            }
	            else {
	              html = module.message(error.noResults, 'empty');
	            }
	            $.proxy(settings.onResults, $module)(response);
	            return html;
	          },
	          add: function(html) {
	            if(settings.onResultsAdd == 'default' || $.proxy(settings.onResultsAdd, $results)(html) == 'default') {
	              $results
	                .html(html)
	              ;
	            }
	            module.results.show();
	          },
	          show: function() {
	            if( ($results.filter(':visible').size() === 0) && ($prompt.filter(':focus').size() > 0) && $results.html() !== '') {
	              $results
	                .stop()
	                .fadeIn(200)
	              ;
	              $.proxy(settings.onResultsOpen, $results)();
	            }
	          },
	          hide: function() {
	            if($results.filter(':visible').size() > 0) {
	              $results
	                .stop()
	                .fadeOut(200)
	              ;
	              $.proxy(settings.onResultsClose, $results)();
	            }
	          },
	          select: function(event) {
	            module.debug('Search result selected');
	            var
	              $result = $(this),
	              $title  = $result.find('.title'),
	              title   = $title.html()
	            ;
	            if(settings.onSelect == 'default' || $.proxy(settings.onSelect, this)(event) == 'default') {
	              var
	                $link  = $result.find('a[href]').eq(0),
	                href   = $link.attr('href') || false,
	                target = $link.attr('target') || false
	              ;
	              module.results.hide();
	              $prompt
	                .val(title)
	              ;
	              if(href) {
	                if(target == '_blank' || event.ctrlKey) {
	                  window.open(href);
	                }
	                else {
	                  window.location.href = (href);
	                }
	              }
	            }
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }

	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.search.settings = {

	  name           : 'Search Module',
	  namespace      : 'search',

	  debug          : false,
	  verbose        : true,
	  performance    : true,

	  // onSelect default action is defined in module
	  onSelect       : 'default',
	  onResultsAdd   : 'default',

	  onSearchQuery  : function(){},
	  onResults      : function(response){},

	  onResultsOpen  : function(){},
	  onResultsClose : function(){},

	  automatic      : 'true',
	  type           : 'simple',
	  minCharacters  : 3,
	  searchThrottle : 300,
	  maxResults     : 7,
	  cache          : true,

	  searchFields    : [
	    'title',
	    'description'
	  ],

	  // api config
	  apiSettings: {

	  },

	  className: {
	    active  : 'active',
	    down    : 'down',
	    focus   : 'focus',
	    empty   : 'empty',
	    loading : 'loading'
	  },

	  error : {
	    noResults   : 'Your search returned no results',
	    logging     : 'Error in debug logging, exiting.',
	    noTemplate  : 'A valid template name was not specified.',
	    serverError : 'There was an issue with querying the server.',
	    method      : 'The method you called is not defined.'
	  },

	  selector : {
	    prompt       : '.prompt',
	    searchButton : '.search.button',
	    results      : '.results',
	    category     : '.category',
	    result       : '.result'
	  },

	  templates: {
	    message: function(message, type) {
	      var
	        html = ''
	      ;
	      if(message !== undefined && type !== undefined) {
	        html +=  ''
	          + '<div class="message ' + type +'">'
	        ;
	        // message type
	        if(type == 'empty') {
	          html += ''
	            + '<div class="header">No Results</div class="header">'
	            + '<div class="description">' + message + '</div class="description">'
	          ;
	        }
	        else {
	          html += ' <div class="description">' + message + '</div>';
	        }
	        html += '</div>';
	      }
	      return html;
	    },
	    categories: function(response) {
	      var
	        html = ''
	      ;
	      if(response.results !== undefined) {
	        // each category
	        $.each(response.results, function(index, category) {
	          if(category.results !== undefined && category.results.length > 0) {
	            html  += ''
	              + '<div class="category">'
	              + '<div class="name">' + category.name + '</div>'
	            ;
	            // each item inside category
	            $.each(category.results, function(index, result) {
	              html  += '<div class="result">';
	              html  += '<a href="' + result.url + '"></a>';
	              if(result.image !== undefined) {
	                html+= ''
	                  + '<div class="image">'
	                  + ' <img src="' + result.image + '">'
	                  + '</div>'
	                ;
	              }
	              html += '<div class="info">';
	              if(result.price !== undefined) {
	                html+= '<div class="price">' + result.price + '</div>';
	              }
	              if(result.title !== undefined) {
	                html+= '<div class="title">' + result.title + '</div>';
	              }
	              if(result.description !== undefined) {
	                html+= '<div class="description">' + result.description + '</div>';
	              }
	              html  += ''
	                + '</div>'
	                + '</div>'
	              ;
	            });
	            html  += ''
	              + '</div>'
	            ;
	          }
	        });
	        if(response.resultPage) {
	          html += ''
	          + '<a href="' + response.resultPage.url + '" class="all">'
	          +   response.resultPage.text
	          + '</a>';
	        }
	        return html;
	      }
	      return false;
	    },
	    simple: function(response) {
	      var
	        html = ''
	      ;
	      if(response.results !== undefined) {

	        // each result
	        $.each(response.results, function(index, result) {
	          html  += '<a class="result" href="' + result.url + '">';
	          if(result.image !== undefined) {
	            html+= ''
	              + '<div class="image">'
	              + ' <img src="' + result.image + '">'
	              + '</div>'
	            ;
	          }
	          html += '<div class="info">';
	          if(result.price !== undefined) {
	            html+= '<div class="price">' + result.price + '</div>';
	          }
	          if(result.title !== undefined) {
	            html+= '<div class="title">' + result.title + '</div>';
	          }
	          if(result.description !== undefined) {
	            html+= '<div class="description">' + result.description + '</div>';
	          }
	          html  += ''
	            + '</div>'
	            + '</a>'
	          ;
	        });

	        if(response.resultPage) {
	          html += ''
	          + '<a href="' + response.resultPage.url + '" class="all">'
	          +   response.resultPage.text
	          + '</a>';
	        }
	        return html;
	      }
	      return false;
	    }
	  }
	};

	})( jQuery, window , document );
	/*
	 * # Semantic - Shape
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.shape = function(parameters) {
	  var
	    $allModules     = $(this),
	    $body           = $('body'),

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        moduleSelector  = $allModules.selector || '',
	        settings        = $.extend(true, {}, $.fn.shape.settings, parameters),

	        // internal aliases
	        namespace     = settings.namespace,
	        selector      = settings.selector,
	        error         = settings.error,
	        className     = settings.className,

	        // define namespaces for modules
	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        // selector cache
	        $module       = $(this),
	        $sides        = $module.find(selector.sides),
	        $side         = $module.find(selector.side),

	        // private variables
	        nextSelector = false,
	        $activeSide,
	        $nextSide,

	        // standard module
	        element       = this,
	        instance      = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.verbose('Initializing module for', element);
	          module.set.defaultSide();
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', element);
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache for', element);
	          $module = $(element);
	          $sides  = $(this).find(selector.shape);
	          $side   = $(this).find(selector.side);
	        },

	        repaint: function() {
	          module.verbose('Forcing repaint event');
	          var
	            shape          = $sides.get(0) || document.createElement('div'),
	            fakeAssignment = shape.offsetWidth
	          ;
	        },

	        animate: function(propertyObject, callback) {
	          module.verbose('Animating box with properties', propertyObject);
	          callback = callback || function(event) {
	            module.verbose('Executing animation callback');
	            if(event !== undefined) {
	              event.stopPropagation();
	            }
	            module.reset();
	            module.set.active();
	          };
	          $.proxy(settings.beforeChange, $nextSide[0])();
	          if(module.get.transitionEvent()) {
	            module.verbose('Starting CSS animation');
	            $module
	              .addClass(className.animating)
	            ;
	            module.repaint();
	            $module
	              .addClass(className.animating)
	            ;
	            $activeSide
	              .addClass(className.hidden)
	            ;
	            $sides
	              .css(propertyObject)
	              .one(module.get.transitionEvent(), callback)
	            ;
	            module.set.duration(settings.duration);
	          }
	          else {
	            callback();
	          }
	        },

	        queue: function(method) {
	          module.debug('Queueing animation of', method);
	          $sides
	            .one(module.get.transitionEvent(), function() {
	              module.debug('Executing queued animation');
	              setTimeout(function(){
	                $module.shape(method);
	              }, 0);
	            })
	          ;
	        },

	        reset: function() {
	          module.verbose('Animating states reset');
	          $module
	            .removeClass(className.animating)
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	          // removeAttr style does not consistently work in safari
	          $sides
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	          $side
	            .attr('style', '')
	            .removeAttr('style')
	            .removeClass(className.hidden)
	          ;
	          $nextSide
	            .removeClass(className.animating)
	            .attr('style', '')
	            .removeAttr('style')
	          ;
	        },

	        is: {
	          animating: function() {
	            return $module.hasClass(className.animating);
	          }
	        },

	        set: {

	          defaultSide: function() {
	            $activeSide = $module.find('.' + settings.className.active);
	            $nextSide   = ( $activeSide.next(selector.side).size() > 0 )
	              ? $activeSide.next(selector.side)
	              : $module.find(selector.side).first()
	            ;
	            nextSelector = false;
	            module.verbose('Active side set to', $activeSide);
	            module.verbose('Next side set to', $nextSide);
	          },

	          duration: function(duration) {
	            duration = duration || settings.duration;
	            duration = (typeof duration == 'number')
	              ? duration + 'ms'
	              : duration
	            ;
	            module.verbose('Setting animation duration', duration);
	            $sides.add($side)
	              .css({
	                '-webkit-transition-duration': duration,
	                '-moz-transition-duration': duration,
	                '-ms-transition-duration': duration,
	                '-o-transition-duration': duration,
	                'transition-duration': duration
	              })
	            ;
	          },

	          stageSize: function() {
	            var
	              $clone      = $module.clone().addClass(className.loading),
	              $activeSide = $clone.find('.' + settings.className.active),
	              $nextSide   = (nextSelector)
	                ? $clone.find(nextSelector)
	                : ( $activeSide.next(selector.side).size() > 0 )
	                  ? $activeSide.next(selector.side)
	                  : $clone.find(selector.side).first(),
	              newSize = {}
	            ;
	            $activeSide.removeClass(className.active);
	            $nextSide.addClass(className.active);
	            $clone.prependTo($body);
	            newSize = {
	              width  : $nextSide.outerWidth(),
	              height : $nextSide.outerHeight()
	            };
	            $clone.remove();
	            $module
	              .css(newSize)
	            ;
	            module.verbose('Resizing stage to fit new content', newSize);
	          },

	          nextSide: function(selector) {
	            nextSelector = selector;
	            $nextSide = $module.find(selector);
	            if($nextSide.size() === 0) {
	              module.error(error.side);
	            }
	            module.verbose('Next side manually set to', $nextSide);
	          },

	          active: function() {
	            module.verbose('Setting new side to active', $nextSide);
	            $side
	              .removeClass(className.active)
	            ;
	            $nextSide
	              .addClass(className.active)
	            ;
	            $.proxy(settings.onChange, $nextSide[0])();
	            module.set.defaultSide();
	          }
	        },

	        flip: {

	          up: function() {
	            module.debug('Flipping up', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.above();
	              module.animate( module.get.transform.up() );
	            }
	            else {
	              module.queue('flip up');
	            }
	          },

	          down: function() {
	            module.debug('Flipping down', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.below();
	              module.animate( module.get.transform.down() );
	            }
	            else {
	              module.queue('flip down');
	            }
	          },

	          left: function() {
	            module.debug('Flipping left', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.left();
	              module.animate(module.get.transform.left() );
	            }
	            else {
	              module.queue('flip left');
	            }
	          },

	          right: function() {
	            module.debug('Flipping right', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.right();
	              module.animate(module.get.transform.right() );
	            }
	            else {
	              module.queue('flip right');
	            }
	          },

	          over: function() {
	            module.debug('Flipping over', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.behind();
	              module.animate(module.get.transform.over() );
	            }
	            else {
	              module.queue('flip over');
	            }
	          },

	          back: function() {
	            module.debug('Flipping back', $nextSide);
	            if( !module.is.animating() ) {
	              module.set.stageSize();
	              module.stage.behind();
	              module.animate(module.get.transform.back() );
	            }
	            else {
	              module.queue('flip back');
	            }
	          }

	        },

	        get: {

	          transform: {
	            up: function() {
	              var
	                translate = {
	                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),
	                  z: -($activeSide.outerHeight() / 2)
	                }
	              ;
	              return {
	                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'
	              };
	            },

	            down: function() {
	              var
	                translate = {
	                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),
	                  z: -($activeSide.outerHeight() / 2)
	                }
	              ;
	              return {
	                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'
	              };
	            },

	            left: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),
	                  z : -($activeSide.outerWidth() / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'
	              };
	            },

	            right: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),
	                  z : -($activeSide.outerWidth() / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'
	              };
	            },

	            over: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'
	              };
	            },

	            back: function() {
	              var
	                translate = {
	                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)
	                }
	              ;
	              return {
	                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'
	              };
	            }
	          },

	          transitionEvent: function() {
	            var
	              element     = document.createElement('element'),
	              transitions = {
	                'transition'       :'transitionend',
	                'OTransition'      :'oTransitionEnd',
	                'MozTransition'    :'transitionend',
	                'WebkitTransition' :'webkitTransitionEnd'
	              },
	              transition
	            ;
	            for(transition in transitions){
	              if( element.style[transition] !== undefined ){
	                return transitions[transition];
	              }
	            }
	          },

	          nextSide: function() {
	            return ( $activeSide.next(selector.side).size() > 0 )
	              ? $activeSide.next(selector.side)
	              : $module.find(selector.side).first()
	            ;
	          }

	        },

	        stage: {

	          above: function() {
	            var
	              box = {
	                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),
	                depth  : {
	                  active : ($nextSide.outerHeight() / 2),
	                  next   : ($activeSide.outerHeight() / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as above', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'display'   : 'block',
	                'top'       : box.origin + 'px',
	                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          below: function() {
	            var
	              box = {
	                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),
	                depth  : {
	                  active : ($nextSide.outerHeight() / 2),
	                  next   : ($activeSide.outerHeight() / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as below', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'display'   : 'block',
	                'top'       : box.origin + 'px',
	                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          left: function() {
	            var
	              box = {
	                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),
	                depth  : {
	                  active : ($nextSide.outerWidth() / 2),
	                  next   : ($activeSide.outerWidth() / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as left', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'display'   : 'block',
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          right: function() {
	            var
	              box = {
	                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),
	                depth  : {
	                  active : ($nextSide.outerWidth() / 2),
	                  next   : ($activeSide.outerWidth() / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as left', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'display'   : 'block',
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'
	              })
	            ;
	          },

	          behind: function() {
	            var
	              box = {
	                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),
	                depth  : {
	                  active : ($nextSide.outerWidth() / 2),
	                  next   : ($activeSide.outerWidth() / 2)
	                }
	              }
	            ;
	            module.verbose('Setting the initial animation position as behind', $nextSide, box);
	            $activeSide
	              .css({
	                'transform' : 'rotateY(0deg)'
	              })
	            ;
	            $nextSide
	              .addClass(className.animating)
	              .css({
	                'display'   : 'block',
	                'left'      : box.origin + 'px',
	                'transform' : 'rotateY(-180deg)'
	              })
	            ;
	          }
	        },
	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.shape.settings = {

	  // module info
	  name : 'Shape',

	  // debug content outputted to console
	  debug      : false,

	  // verbose debug output
	  verbose    : true,

	  // performance data output
	  performance: true,

	  // event namespace
	  namespace  : 'shape',

	  // callback occurs on side change
	  beforeChange : function() {},
	  onChange     : function() {},

	  // animation duration
	  duration   : 700,

	  // possible errors
	  error: {
	    side   : 'You tried to switch to a side that does not exist.',
	    method : 'The method you called is not defined'
	  },

	  // classnames used
	  className   : {
	    animating : 'animating',
	    hidden    : 'hidden',
	    loading   : 'loading',
	    active    : 'active'
	  },

	  // selectors used
	  selector    : {
	    sides : '.sides',
	    side  : '.side'
	  }

	};


	})( jQuery, window , document );
	/*
	 * # Semantic - Sidebar
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.sidebar = function(parameters) {
	  var
	    $allModules    = $(this),
	    $body          = $('body'),
	    $head          = $('head'),

	    moduleSelector = $allModules.selector || '',

	    time           = new Date().getTime(),
	    performance    = [],

	    query          = arguments[0],
	    methodInvoked  = (typeof query == 'string'),
	    queryArguments = [].slice.call(arguments, 1),
	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)
	          : $.extend({}, $.fn.sidebar.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        namespace       = settings.namespace,
	        error           = settings.error,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $style          = $('style[title=' + namespace + ']'),

	        element         = this,
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module      = {

	        initialize: function() {
	          module.debug('Initializing sidebar', $module);
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', $module);
	          $module
	            .off(eventNamespace)
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing selector cache');
	          $style  = $('style[title=' + namespace + ']');
	        },

	        attachEvents: function(selector, event) {
	          var
	            $toggle = $(selector)
	          ;
	          event = $.isFunction(module[event])
	            ? module[event]
	            : module.toggle
	          ;
	          if($toggle.size() > 0) {
	            module.debug('Attaching sidebar events to element', selector, event);
	            $toggle
	              .off(eventNamespace)
	              .on('click' + eventNamespace, event)
	            ;
	          }
	          else {
	            module.error(error.notFound);
	          }
	        },

	        show: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.debug('Showing sidebar', callback);
	          if(module.is.closed()) {
	            if(!settings.overlay) {
	              if(settings.exclusive) {
	                module.hideAll();
	              }
	              module.pushPage();
	            }
	            module.set.active();
	            callback();
	            $.proxy(settings.onChange, element)();
	            $.proxy(settings.onShow, element)();
	          }
	          else {
	            module.debug('Sidebar is already visible');
	          }
	        },

	        hide: function(callback) {
	          callback = $.isFunction(callback)
	            ? callback
	            : function(){}
	          ;
	          module.debug('Hiding sidebar', callback);
	          if(module.is.open()) {
	            if(!settings.overlay) {
	              module.pullPage();
	              module.remove.pushed();
	            }
	            module.remove.active();
	            callback();
	            $.proxy(settings.onChange, element)();
	            $.proxy(settings.onHide, element)();
	          }
	        },

	        hideAll: function() {
	          $(selector.sidebar)
	            .filter(':visible')
	              .sidebar('hide')
	          ;
	        },

	        toggle: function() {
	          if(module.is.closed()) {
	            module.show();
	          }
	          else {
	            module.hide();
	          }
	        },

	        pushPage: function() {
	          var
	            direction = module.get.direction(),
	            distance  = (module.is.vertical())
	              ? $module.outerHeight()
	              : $module.outerWidth()
	          ;
	          if(settings.useCSS) {
	            module.debug('Using CSS to animate body');
	            module.add.bodyCSS(direction, distance);
	            module.set.pushed();
	          }
	          else {
	            module.animatePage(direction, distance, module.set.pushed);
	          }
	        },

	        pullPage: function() {
	          var
	            direction = module.get.direction()
	          ;
	          if(settings.useCSS) {
	            module.debug('Resetting body position css');
	            module.remove.bodyCSS();
	          }
	          else {
	            module.debug('Resetting body position using javascript');
	            module.animatePage(direction, 0);
	          }
	          module.remove.pushed();
	        },

	        animatePage: function(direction, distance) {
	          var
	            animateSettings = {}
	          ;
	          animateSettings['padding-' + direction] = distance;
	          module.debug('Using javascript to animate body', animateSettings);
	          $body
	            .animate(animateSettings, settings.duration, module.set.pushed)
	          ;
	        },

	        add: {
	          bodyCSS: function(direction, distance) {
	            var
	              style
	            ;
	            if(direction !== className.bottom) {
	              style = ''
	                + '<style title="' + namespace + '">'
	                + 'body.pushed {'
	                + '  margin-' + direction + ': ' + distance + 'px !important;'
	                + '}'
	                + '</style>'
	              ;
	            }
	            $head.append(style);
	            module.debug('Adding body css to head', $style);
	          }
	        },


	        remove: {
	          bodyCSS: function() {
	            module.debug('Removing body css styles', $style);
	            module.refresh();
	            $style.remove();
	          },
	          active: function() {
	            $module.removeClass(className.active);
	          },
	          pushed: function() {
	            module.verbose('Removing body push state', module.get.direction());
	            $body
	              .removeClass(className[ module.get.direction() ])
	              .removeClass(className.pushed)
	            ;
	          }
	        },

	        set: {
	          active: function() {
	            $module.addClass(className.active);
	          },
	          pushed: function() {
	            module.verbose('Adding body push state', module.get.direction());
	            $body
	              .addClass(className[ module.get.direction() ])
	              .addClass(className.pushed)
	            ;
	          }
	        },

	        get: {
	          direction: function() {
	            if($module.hasClass(className.top)) {
	              return className.top;
	            }
	            else if($module.hasClass(className.right)) {
	              return className.right;
	            }
	            else if($module.hasClass(className.bottom)) {
	              return className.bottom;
	            }
	            else {
	              return className.left;
	            }
	          },
	          transitionEvent: function() {
	            var
	              element     = document.createElement('element'),
	              transitions = {
	                'transition'       :'transitionend',
	                'OTransition'      :'oTransitionEnd',
	                'MozTransition'    :'transitionend',
	                'WebkitTransition' :'webkitTransitionEnd'
	              },
	              transition
	            ;
	            for(transition in transitions){
	              if( element.style[transition] !== undefined ){
	                return transitions[transition];
	              }
	            }
	          }
	        },

	        is: {
	          open: function() {
	            return $module.is(':animated') || $module.hasClass(className.active);
	          },
	          closed: function() {
	            return !module.is.open();
	          },
	          vertical: function() {
	            return $module.hasClass(className.top);
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };
	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;

	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.sidebar.settings = {

	  name        : 'Sidebar',
	  namespace   : 'sidebar',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  useCSS      : true,
	  exclusive   : true,
	  overlay     : false,
	  duration    : 300,

	  onChange     : function(){},
	  onShow       : function(){},
	  onHide       : function(){},

	  className: {
	    active : 'active',
	    pushed : 'pushed',
	    top    : 'top',
	    left   : 'left',
	    right  : 'right',
	    bottom : 'bottom'
	  },

	  selector: {
	    sidebar: '.ui.sidebar'
	  },

	  error   : {
	    method   : 'The method you called is not defined.',
	    notFound : 'There were no elements that matched the specified selector'
	  }

	};

	})( jQuery, window , document );

	/*
	 * # Semantic - Tab
	 * http://github.com/jlukic/semantic-ui/
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */


	;(function ($, window, document, undefined) {

	  $.fn.tab = function(parameters) {

	    var
	      settings        = $.extend(true, {}, $.fn.tab.settings, parameters),

	      $module         = $(this),
	      $tabs           = $(settings.context).find(settings.selector.tabs),

	      moduleSelector  = $module.selector || '',

	      cache           = {},
	      firstLoad       = true,
	      recursionDepth  = 0,

	      activeTabPath,
	      parameterArray,
	      historyEvent,

	      element         = this,
	      time            = new Date().getTime(),
	      performance     = [],

	      className       = settings.className,
	      metadata        = settings.metadata,
	      error           = settings.error,

	      eventNamespace  = '.' + settings.namespace,
	      moduleNamespace = 'module-' + settings.namespace,

	      instance        = $module.data(moduleNamespace),

	      query           = arguments[0],
	      methodInvoked   = (instance !== undefined && typeof query == 'string'),
	      queryArguments  = [].slice.call(arguments, 1),

	      module,
	      returnedValue
	    ;

	    module = {

	      initialize: function() {
	        module.debug('Initializing Tabs', $module);

	        // set up automatic routing
	        if(settings.auto) {
	          module.verbose('Setting up automatic tab retrieval from server');
	          settings.apiSettings = {
	            url: settings.path + '/{$tab}'
	          };
	        }

	        // attach history events
	        if(settings.history) {
	          module.debug('Initializing page state');
	          if( $.address === undefined ) {
	            module.error(error.state);
	            return false;
	          }
	          else {
	            if(settings.historyType == 'hash') {
	              module.debug('Using hash state change to manage state');
	            }
	            if(settings.historyType == 'html5') {
	              module.debug('Using HTML5 to manage state');
	              if(settings.path !== false) {
	                $.address
	                  .history(true)
	                  .state(settings.path)
	                ;
	              }
	              else {
	                module.error(error.path);
	                return false;
	              }
	            }
	            $.address
	              .unbind('change')
	              .bind('change', module.event.history.change)
	            ;
	          }
	        }

	        // attach events if navigation wasn't set to window
	        if( !$.isWindow( element ) ) {
	          module.debug('Attaching tab activation events to element', $module);
	          $module
	            .on('click' + eventNamespace, module.event.click)
	          ;
	        }
	        module.instantiate();
	      },

	      instantiate: function () {
	        module.verbose('Storing instance of module', module);
	        $module
	          .data(moduleNamespace, module)
	        ;
	      },

	      destroy: function() {
	        module.debug('Destroying tabs', $module);
	        $module
	          .removeData(moduleNamespace)
	          .off(eventNamespace)
	        ;
	      },

	      event: {
	        click: function(event) {
	          var
	            tabPath = $(this).data(metadata.tab)
	          ;
	          if(tabPath !== undefined) {
	            if(settings.history) {
	              module.verbose('Updating page state', event);
	              $.address.value(tabPath);
	            }
	            else {
	              module.verbose('Changing tab without state management', event);
	              module.changeTab(tabPath);
	            }
	            event.preventDefault();
	          }
	          else {
	            module.debug('No tab specified');
	          }
	        },
	        history: {
	          change: function(event) {
	            var
	              tabPath   = event.pathNames.join('/') || module.get.initialPath(),
	              pageTitle = settings.templates.determineTitle(tabPath) || false
	            ;
	            module.debug('History change event', tabPath, event);
	            historyEvent = event;
	            if(tabPath !== undefined) {
	              module.changeTab(tabPath);
	            }
	            if(pageTitle) {
	              $.address.title(pageTitle);
	            }
	          }
	        }
	      },

	      refresh: function() {
	        if(activeTabPath) {
	          module.debug('Refreshing tab', activeTabPath);
	          module.changeTab(activeTabPath);
	        }
	      },

	      cache: {

	        read: function(cacheKey) {
	          return (cacheKey !== undefined)
	            ? cache[cacheKey]
	            : false
	          ;
	        },
	        add: function(cacheKey, content) {
	          cacheKey = cacheKey || activeTabPath;
	          module.debug('Adding cached content for', cacheKey);
	          cache[cacheKey] = content;
	        },
	        remove: function(cacheKey) {
	          cacheKey = cacheKey || activeTabPath;
	          module.debug('Removing cached content for', cacheKey);
	          delete cache[cacheKey];
	        }
	      },

	      set: {
	        state: function(url) {
	          $.address.value(url);
	        }
	      },

	      changeTab: function(tabPath) {
	        var
	          pushStateAvailable = (window.history && window.history.pushState),
	          shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),
	          remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),
	          // only get default path if not remote content
	          pathArray = (remoteContent && !shouldIgnoreLoad)
	            ? module.utilities.pathToArray(tabPath)
	            : module.get.defaultPathArray(tabPath)
	        ;
	        tabPath = module.utilities.arrayToPath(pathArray);
	        module.deactivate.all();
	        $.each(pathArray, function(index, tab) {
	          var
	            currentPathArray   = pathArray.slice(0, index + 1),
	            currentPath        = module.utilities.arrayToPath(currentPathArray),

	            isTab              = module.is.tab(currentPath),
	            isLastIndex        = (index + 1 == pathArray.length),

	            $tab               = module.get.tabElement(currentPath),
	            nextPathArray,
	            nextPath,
	            isLastTab
	          ;
	          module.verbose('Looking for tab', tab);
	          if(isTab) {
	            module.verbose('Tab was found', tab);

	            // scope up
	            activeTabPath = currentPath;
	            parameterArray = module.utilities.filterArray(pathArray, currentPathArray);

	            if(isLastIndex) {
	              isLastTab = true;
	            }
	            else {
	              nextPathArray = pathArray.slice(0, index + 2);
	              nextPath      = module.utilities.arrayToPath(nextPathArray);
	              isLastTab     = ( !module.is.tab(nextPath) );
	              if(isLastTab) {
	                module.verbose('Tab parameters found', nextPathArray);
	              }
	            }
	            if(isLastTab && remoteContent) {
	              if(!shouldIgnoreLoad) {
	                module.activate.navigation(currentPath);
	                module.content.fetch(currentPath, tabPath);
	              }
	              else {
	                module.debug('Ignoring remote content on first tab load', currentPath);
	                firstLoad = false;
	                module.cache.add(tabPath, $tab.html());
	                module.activate.all(currentPath);
	                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);
	                $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);
	              }
	              return false;
	            }
	            else {
	              module.debug('Opened local tab', currentPath);
	              module.activate.all(currentPath);
	              if( !module.cache.read(currentPath) ) {
	                module.cache.add(currentPath, true);
	                module.debug('First time tab loaded calling tab init');
	                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);
	              }
	              $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);
	            }
	          }
	          else {
	            module.error(error.missingTab, tab);
	            return false;
	          }
	        });
	      },

	      content: {

	        fetch: function(tabPath, fullTabPath) {
	          var
	            $tab             = module.get.tabElement(tabPath),
	            apiSettings      = {
	              dataType     : 'html',
	              stateContext : $tab,
	              success      : function(response) {
	                module.cache.add(fullTabPath, response);
	                module.content.update(tabPath, response);
	                if(tabPath == activeTabPath) {
	                  module.debug('Content loaded', tabPath);
	                  module.activate.tab(tabPath);
	                }
	                else {
	                  module.debug('Content loaded in background', tabPath);
	                }
	                $.proxy(settings.onTabInit, $tab)(tabPath, parameterArray, historyEvent);
	                $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);
	              },
	              urlData: { tab: fullTabPath }
	            },
	            request         = $tab.data(metadata.promise) || false,
	            existingRequest = ( request && request.state() === 'pending' ),
	            requestSettings,
	            cachedContent
	          ;

	          fullTabPath   = fullTabPath || tabPath;
	          cachedContent = module.cache.read(fullTabPath);

	          if(settings.cache && cachedContent) {
	            module.debug('Showing existing content', fullTabPath);
	            module.content.update(tabPath, cachedContent);
	            module.activate.tab(tabPath);
	            $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);
	          }
	          else if(existingRequest) {
	            module.debug('Content is already loading', fullTabPath);
	            $tab
	              .addClass(className.loading)
	            ;
	          }
	          else if($.api !== undefined) {
	            console.log(settings.apiSettings);
	            requestSettings = $.extend(true, { headers: { 'X-Remote': true } }, settings.apiSettings, apiSettings);
	            module.debug('Retrieving remote content', fullTabPath, requestSettings);
	            $.api( requestSettings );
	          }
	          else {
	            module.error(error.api);
	          }
	        },

	        update: function(tabPath, html) {
	          module.debug('Updating html for', tabPath);
	          var
	            $tab = module.get.tabElement(tabPath)
	          ;
	          $tab
	            .html(html)
	          ;
	        }
	      },

	      activate: {
	        all: function(tabPath) {
	          module.activate.tab(tabPath);
	          module.activate.navigation(tabPath);
	        },
	        tab: function(tabPath) {
	          var
	            $tab = module.get.tabElement(tabPath)
	          ;
	          module.verbose('Showing tab content for', $tab);
	          $tab.addClass(className.active);
	        },
	        navigation: function(tabPath) {
	          var
	            $navigation = module.get.navElement(tabPath)
	          ;
	          module.verbose('Activating tab navigation for', $navigation, tabPath);
	          $navigation.addClass(className.active);
	        }
	      },

	      deactivate: {
	        all: function() {
	          module.deactivate.navigation();
	          module.deactivate.tabs();
	        },
	        navigation: function() {
	          $module
	            .removeClass(className.active)
	          ;
	        },
	        tabs: function() {
	          $tabs
	            .removeClass(className.active + ' ' + className.loading)
	          ;
	        }
	      },

	      is: {
	        tab: function(tabName) {
	          return (tabName !== undefined)
	            ? ( module.get.tabElement(tabName).size() > 0 )
	            : false
	          ;
	        }
	      },

	      get: {
	        initialPath: function() {
	          return $module.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);
	        },
	        path: function() {
	          return $.address.value();
	        },
	        // adds default tabs to tab path
	        defaultPathArray: function(tabPath) {
	          return module.utilities.pathToArray( module.get.defaultPath(tabPath) );
	        },
	        defaultPath: function(tabPath) {
	          var
	            $defaultNav = $module.filter('[data-' + metadata.tab + '^="' + tabPath + '/"]').eq(0),
	            defaultTab  = $defaultNav.data(metadata.tab) || false
	          ;
	          if( defaultTab ) {
	            module.debug('Found default tab', defaultTab);
	            if(recursionDepth < settings.maxDepth) {
	              recursionDepth++;
	              return module.get.defaultPath(defaultTab);
	            }
	            module.error(error.recursion);
	          }
	          else {
	            module.debug('No default tabs found for', tabPath, $tabs);
	          }
	          recursionDepth = 0;
	          return tabPath;
	        },
	        navElement: function(tabPath) {
	          tabPath = tabPath || activeTabPath;
	          return $module.filter('[data-' + metadata.tab + '="' + tabPath + '"]');
	        },
	        tabElement: function(tabPath) {
	          var
	            $fullPathTab,
	            $simplePathTab,
	            tabPathArray,
	            lastTab
	          ;
	          tabPath        = tabPath || activeTabPath;
	          tabPathArray   = module.utilities.pathToArray(tabPath);
	          lastTab        = module.utilities.last(tabPathArray);
	          $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '="' + lastTab + '"]');
	          $simplePathTab = $tabs.filter('[data-' + metadata.tab + '="' + tabPath + '"]');
	          return ($fullPathTab.size() > 0)
	            ? $fullPathTab
	            : $simplePathTab
	          ;
	        },
	        tab: function() {
	          return activeTabPath;
	        }
	      },

	      utilities: {
	        filterArray: function(keepArray, removeArray) {
	          return $.grep(keepArray, function(keepValue) {
	            return ( $.inArray(keepValue, removeArray) == -1);
	          });
	        },
	        last: function(array) {
	          return $.isArray(array)
	            ? array[ array.length - 1]
	            : false
	          ;
	        },
	        pathToArray: function(pathName) {
	          if(pathName === undefined) {
	            pathName = activeTabPath;
	          }
	          return typeof pathName == 'string'
	            ? pathName.split('/')
	            : [pathName]
	          ;
	        },
	        arrayToPath: function(pathArray) {
	          return $.isArray(pathArray)
	            ? pathArray.join('/')
	            : false
	          ;
	        }
	      },

	      setting: function(name, value) {
	        if( $.isPlainObject(name) ) {
	          $.extend(true, settings, name);
	        }
	        else if(value !== undefined) {
	          settings[name] = value;
	        }
	        else {
	          return settings[name];
	        }
	      },
	      internal: function(name, value) {
	        if( $.isPlainObject(name) ) {
	          $.extend(true, module, name);
	        }
	        else if(value !== undefined) {
	          module[name] = value;
	        }
	        else {
	          return module[name];
	        }
	      },
	      debug: function() {
	        if(settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.debug.apply(console, arguments);
	          }
	        }
	      },
	      verbose: function() {
	        if(settings.verbose && settings.debug) {
	          if(settings.performance) {
	            module.performance.log(arguments);
	          }
	          else {
	            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	            module.verbose.apply(console, arguments);
	          }
	        }
	      },
	      error: function() {
	        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	        module.error.apply(console, arguments);
	      },
	      performance: {
	        log: function(message) {
	          var
	            currentTime,
	            executionTime,
	            previousTime
	          ;
	          if(settings.performance) {
	            currentTime   = new Date().getTime();
	            previousTime  = time || currentTime;
	            executionTime = currentTime - previousTime;
	            time          = currentTime;
	            performance.push({
	              'Element'        : element,
	              'Name'           : message[0],
	              'Arguments'      : [].slice.call(message, 1) || '',
	              'Execution Time' : executionTime
	            });
	          }
	          clearTimeout(module.performance.timer);
	          module.performance.timer = setTimeout(module.performance.display, 100);
	        },
	        display: function() {
	          var
	            title = settings.name + ':',
	            totalTime = 0
	          ;
	          time = false;
	          clearTimeout(module.performance.timer);
	          $.each(performance, function(index, data) {
	            totalTime += data['Execution Time'];
	          });
	          title += ' ' + totalTime + 'ms';
	          if(moduleSelector) {
	            title += ' \'' + moduleSelector + '\'';
	          }
	          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	            console.groupCollapsed(title);
	            if(console.table) {
	              console.table(performance);
	            }
	            else {
	              $.each(performance, function(index, data) {
	                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	              });
	            }
	            console.groupEnd();
	          }
	          performance = [];
	        }
	      },
	      invoke: function(query, passedArguments, context) {
	        var
	          object = instance,
	          maxDepth,
	          found,
	          response
	        ;
	        passedArguments = passedArguments || queryArguments;
	        context         = element         || context;
	        if(typeof query == 'string' && object !== undefined) {
	          query    = query.split(/[\. ]/);
	          maxDepth = query.length - 1;
	          $.each(query, function(depth, value) {
	            var camelCaseValue = (depth != maxDepth)
	              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	              : query
	            ;
	            if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	              object = object[camelCaseValue];
	            }
	            else if( object[camelCaseValue] !== undefined ) {
	              found = object[camelCaseValue];
	              return false;
	            }
	            else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	              object = object[value];
	            }
	            else if( object[value] !== undefined ) {
	              found = object[value];
	              return false;
	            }
	            else {
	              return false;
	            }
	          });
	        }
	        if ( $.isFunction( found ) ) {
	          response = found.apply(context, passedArguments);
	        }
	        else if(found !== undefined) {
	          response = found;
	        }
	        if($.isArray(returnedValue)) {
	          returnedValue.push(response);
	        }
	        else if(returnedValue !== undefined) {
	          returnedValue = [returnedValue, response];
	        }
	        else if(response !== undefined) {
	          returnedValue = response;
	        }
	        return found;
	      }
	    };

	    if(methodInvoked) {
	      if(instance === undefined) {
	        module.initialize();
	      }
	      module.invoke(query);
	    }
	    else {
	      if(instance !== undefined) {
	        module.destroy();
	      }
	      module.initialize();
	    }

	    return (returnedValue !== undefined)
	      ? returnedValue
	      : this
	    ;

	  };

	  // shortcut for tabbed content with no defined navigation
	  $.tab = function(settings) {
	    $(window).tab(settings);
	  };

	  $.fn.tab.settings = {

	    name        : 'Tab',
	    debug       : false,
	    verbose     : true,
	    performance : true,
	    namespace   : 'tab',

	    // only called first time a tab's content is loaded (when remote source)
	    onTabInit   : function(tabPath, parameterArray, historyEvent) {},
	    // called on every load
	    onTabLoad   : function(tabPath, parameterArray, historyEvent) {},

	    templates   : {
	      determineTitle: function(tabArray) {}
	    },

	    // uses pjax style endpoints fetching content from same url with remote-content headers
	    auto            : false,
	    history         : true,
	    historyType     : 'hash',
	    path            : false,

	    context         : 'body',

	    // max depth a tab can be nested
	    maxDepth        : 25,
	    // dont load content on first load
	    ignoreFirstLoad : false,
	    // load tab content new every tab click
	    alwaysRefresh   : false,
	    // cache the content requests to pull locally
	    cache           : true,
	    // settings for api call
	    apiSettings     : false,

	    error: {
	      api        : 'You attempted to load content without API module',
	      method     : 'The method you called is not defined',
	      missingTab : 'Tab cannot be found',
	      noContent  : 'The tab you specified is missing a content url.',
	      path       : 'History enabled, but no path was specified',
	      recursion  : 'Max recursive depth reached',
	      state      : 'The state library has not been initialized'
	    },

	    metadata : {
	      tab    : 'tab',
	      loaded : 'loaded',
	      promise: 'promise'
	    },

	    className   : {
	      loading : 'loading',
	      active  : 'active'
	    },

	    selector    : {
	      tabs : '.ui.tab'
	    }

	  };

	})( jQuery, window , document );

	/*
	 * # Semantic - Transition
	 * http://github.com/jlukic/semantic-ui/
	 *
	 *
	 * Copyright 2014 Contributors
	 * Released under the MIT license
	 * http://opensource.org/licenses/MIT
	 *
	 */

	;(function ( $, window, document, undefined ) {

	$.fn.transition = function() {
	  var
	    $allModules     = $(this),
	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    moduleArguments = arguments,
	    query           = moduleArguments[0],
	    queryArguments  = [].slice.call(arguments, 1),
	    methodInvoked   = (typeof query === 'string'),

	    requestAnimationFrame = window.requestAnimationFrame
	      || window.mozRequestAnimationFrame
	      || window.webkitRequestAnimationFrame
	      || window.msRequestAnimationFrame
	      || function(callback) { setTimeout(callback, 0); },

	    returnedValue
	  ;
	  $allModules
	    .each(function() {
	      var
	        $module  = $(this),
	        element  = this,

	        // set at run time
	        settings,
	        instance,

	        error,
	        className,
	        metadata,
	        animationEnd,
	        animationName,

	        namespace,
	        moduleNamespace,
	        module
	      ;

	      module = {

	        initialize: function() {
	          // get settings
	          settings        = module.get.settings.apply(element, moduleArguments);
	          module.verbose('Converted arguments into settings object', settings);

	          // set shortcuts
	          error           = settings.error;
	          className       = settings.className;
	          namespace       = settings.namespace;
	          metadata        = settings.metadata;
	          moduleNamespace = 'module-' + namespace;

	          animationEnd    = module.get.animationEvent();
	          animationName   = module.get.animationName();

	          instance        = $module.data(moduleNamespace) || module;

	          if(methodInvoked) {
	            methodInvoked = module.invoke(query);
	          }
	          // no internal method was found matching query or query not made
	          if(methodInvoked === false) {
	            module.animate();
	          }
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          $module
	            .data(moduleNamespace, instance)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous module for', element);
	          $module
	            .removeData(moduleNamespace)
	          ;
	        },

	        refresh: function() {
	          module.verbose('Refreshing display type on next animation');
	          delete instance.displayType;
	        },

	        forceRepaint: function() {
	          module.verbose('Forcing element repaint');
	          var
	            $parentElement = $module.parent(),
	            $nextElement = $module.next()
	          ;
	          if($nextElement.size() === 0) {
	            $module.detach().appendTo($parentElement);
	          }
	          else {
	            $module.detach().insertBefore($nextElement);
	          }
	        },

	        repaint: function() {
	          module.verbose('Repainting element');
	          var
	            fakeAssignment = element.offsetWidth
	          ;
	        },

	        animate: function(overrideSettings) {
	          settings = overrideSettings || settings;
	          if(!module.is.supported()) {
	            module.error(error.support);
	            return false;
	          }
	          module.debug('Preparing animation', settings.animation);
	          if(module.is.animating() && settings.queue) {
	            if(!settings.allowRepeats && module.has.direction() && module.is.occuring() && instance.queuing !== true) {
	              module.error(error.repeated);
	            }
	            else {
	              module.queue(settings.animation);
	            }
	            return false;
	          }
	          if(module.can.animate) {
	            module.set.animating(settings.animation);
	          }
	          else {
	            module.error(error.noAnimation, settings.animation);
	          }
	        },

	        reset: function() {
	          module.debug('Resetting animation to beginning conditions');
	          $module.off(animationEnd);
	          module.restore.conditions();
	          module.hide();
	          module.remove.animating();
	        },

	        queue: function(animation) {
	          module.debug('Queueing animation of', animation);
	          instance.queuing = true;
	          $module
	            .one(animationEnd, function() {
	              instance.queuing = false;
	              module.repaint();
	              module.animate.apply(this, settings);
	            })
	          ;
	        },

	        complete: function () {
	          module.verbose('CSS animation complete', settings.animation);
	          if(!module.is.looping()) {
	            if( module.is.outward() ) {
	              module.verbose('Animation is outward, hiding element');
	              module.restore.conditions();
	              module.remove.display();
	              module.hide();
	              $.proxy(settings.onHide, this)();
	            }
	            else if( module.is.inward() ) {
	              module.verbose('Animation is outward, showing element');
	              module.restore.conditions();
	              module.show();
	              $.proxy(settings.onShow, this)();
	            }
	            else {
	              module.restore.conditions();
	            }
	            module.remove.duration();
	            module.remove.animating();
	          }
	          $.proxy(settings.complete, this)();
	        },

	        has: {
	          direction: function(animation) {
	            animation = animation || settings.animation;
	            if( animation.search(className.inward) !== -1 || animation.search(className.outward) !== -1) {
	              module.debug('Direction already set in animation');
	              return true;
	            }
	            return false;
	          }
	        },

	        set: {

	          animating: function(animation) {
	            animation = animation || settings.animation;
	            module.save.conditions();
	            if(module.can.transition() && !module.has.direction()) {
	              module.set.direction();
	            }
	            module.remove.hidden();
	            module.set.display();
	            $module
	              .addClass(className.animating)
	              .addClass(className.transition)
	              .addClass(animation)
	              .one(animationEnd, module.complete)
	            ;
	            module.set.duration(settings.duration);
	            module.debug('Starting tween', settings.animation, $module.attr('class'));
	          },

	          display: function() {
	            var
	              displayType = module.get.displayType()
	            ;
	            if(displayType !== 'block' && displayType !== 'none') {
	              module.verbose('Setting final visibility to', displayType);
	              $module
	                .css({
	                  display: displayType
	                })
	              ;
	            }
	          },

	          direction: function() {
	            if($module.is(':visible')) {
	              module.debug('Automatically determining the direction of animation', 'Outward');
	              $module
	                .removeClass(className.inward)
	                .addClass(className.outward)
	              ;
	            }
	            else {
	              module.debug('Automatically determining the direction of animation', 'Inward');
	              $module
	                .removeClass(className.outward)
	                .addClass(className.inward)
	              ;
	            }
	          },

	          looping: function() {
	            module.debug('Transition set to loop');
	            $module
	              .addClass(className.looping)
	            ;
	          },

	          duration: function(duration) {
	            duration = duration || settings.duration;
	            duration = (typeof duration == 'number')
	              ? duration + 'ms'
	              : duration
	            ;
	            module.verbose('Setting animation duration', duration);
	            $module
	              .css({
	                '-webkit-animation-duration': duration,
	                '-moz-animation-duration': duration,
	                '-ms-animation-duration': duration,
	                '-o-animation-duration': duration,
	                'animation-duration': duration
	              })
	            ;
	          },

	          hidden: function() {
	            $module
	              .addClass(className.transition)
	              .addClass(className.hidden)
	            ;
	          },

	          visible: function() {
	            $module
	              .addClass(className.transition)
	              .addClass(className.visible)
	            ;
	          }
	        },

	        save: {
	          displayType: function(displayType) {
	            instance.displayType = displayType;
	          },
	          transitionExists: function(animation, exists) {
	            $.fn.transition.exists[animation] = exists;
	            module.verbose('Saving existence of transition', animation, exists);
	          },
	          conditions: function() {
	            instance.cache = {
	              className : $module.attr('class'),
	              style     : $module.attr('style')
	            };
	            module.verbose('Saving original attributes', instance.cache);
	          }
	        },

	        restore: {
	          conditions: function() {
	            if(instance.cache === undefined) {
	              return false;
	            }
	            if(instance.cache.className) {
	              $module.attr('class', instance.cache.className);
	            }
	            else {
	              $module.removeAttr('class');
	            }
	            if(instance.cache.style) {
	              $module.attr('style', instance.cache.style);
	            }
	            else {
	              if(module.get.displayType() === 'block') {
	                $module.removeAttr('style');
	              }
	            }
	            if(module.is.looping()) {
	              module.remove.looping();
	            }
	            module.verbose('Restoring original attributes', instance.cache);
	          }
	        },

	        remove: {

	          animating: function() {
	            $module.removeClass(className.animating);
	          },

	          display: function() {
	            if(instance.displayType !== undefined) {
	              $module.css('display', '');
	            }
	          },

	          duration: function() {
	            $module
	              .css({
	                '-webkit-animation-duration' : '',
	                '-moz-animation-duration'    : '',
	                '-ms-animation-duration'     : '',
	                '-o-animation-duration'      : '',
	                'animation-duration'         : ''
	              })
	            ;
	          },

	          hidden: function() {
	            $module.removeClass(className.hidden);
	          },

	          visible: function() {
	            $module.removeClass(className.visible);
	          },

	          looping: function() {
	            module.debug('Transitions are no longer looping');
	            $module
	              .removeClass(className.looping)
	            ;
	            module.forceRepaint();
	          }

	        },

	        get: {

	          settings: function(animation, duration, complete) {
	            // single settings object
	            if(typeof animation == 'object') {
	              return $.extend(true, {}, $.fn.transition.settings, animation);
	            }
	            // all arguments provided
	            else if(typeof complete == 'function') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation,
	                complete  : complete,
	                duration  : duration
	              });
	            }
	            // only duration provided
	            else if(typeof duration == 'string' || typeof duration == 'number') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation,
	                duration  : duration
	              });
	            }
	            // duration is actually settings object
	            else if(typeof duration == 'object') {
	              return $.extend({}, $.fn.transition.settings, duration, {
	                animation : animation
	              });
	            }
	            // duration is actually callback
	            else if(typeof duration == 'function') {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation,
	                complete  : duration
	              });
	            }
	            // only animation provided
	            else {
	              return $.extend({}, $.fn.transition.settings, {
	                animation : animation
	              });
	            }
	            return $.fn.transition.settings;
	          },

	          displayType: function() {
	            if(instance.displayType === undefined) {
	              // create fake element to determine display state
	              module.can.transition();
	            }
	            return instance.displayType;
	          },

	          transitionExists: function(animation) {
	            return $.fn.transition.exists[animation];
	          },

	          animationName: function() {
	            var
	              element     = document.createElement('div'),
	              animations  = {
	                'animation'       :'animationName',
	                'OAnimation'      :'oAnimationName',
	                'MozAnimation'    :'mozAnimationName',
	                'WebkitAnimation' :'webkitAnimationName'
	              },
	              animation
	            ;
	            for(animation in animations){
	              if( element.style[animation] !== undefined ){
	                module.verbose('Determined animation vendor name property', animations[animation]);
	                return animations[animation];
	              }
	            }
	            return false;
	          },

	          animationEvent: function() {
	            var
	              element     = document.createElement('div'),
	              animations  = {
	                'animation'       :'animationend',
	                'OAnimation'      :'oAnimationEnd',
	                'MozAnimation'    :'animationend',
	                'WebkitAnimation' :'webkitAnimationEnd'
	              },
	              animation
	            ;
	            for(animation in animations){
	              if( element.style[animation] !== undefined ){
	                module.verbose('Determined animation vendor end event', animations[animation]);
	                return animations[animation];
	              }
	            }
	            return false;
	          }

	        },

	        can: {
	          animate: function() {
	            if($module.css(settings.animation) !== 'none') {
	              module.debug('CSS definition found',  $module.css(settings.animation));
	              return true;
	            }
	            else {
	              module.debug('Unable to find css definition', $module.attr('class'));
	              return false;
	            }
	          },
	          transition: function() {
	            var
	              elementClass     = $module.attr('class'),
	              animation        = settings.animation,
	              transitionExists = module.get.transitionExists(settings.animation),
	              $clone,
	              currentAnimation,
	              inAnimation,
	              displayType
	            ;
	            if( transitionExists === undefined || instance.displayType === undefined) {
	              module.verbose('Determining whether animation exists');
	              $clone = $('<div>').addClass( elementClass ).appendTo($('body'));
	              currentAnimation = $clone
	                .removeClass(className.inward)
	                .removeClass(className.outward)
	                .addClass(className.animating)
	                .addClass(className.transition)
	                .addClass(animation)
	                .css(animationName)
	              ;
	              inAnimation = $clone
	                .addClass(className.inward)
	                .css(animationName)
	              ;
	              displayType = $clone
	                .attr('class', elementClass)
	                .show()
	                .css('display')
	              ;
	              module.verbose('Determining final display state', displayType);
	              if(currentAnimation != inAnimation) {
	                module.debug('Transition exists for animation', animation);
	                transitionExists = true;
	              }
	              else {
	                module.debug('Static animation found', animation, displayType);
	                transitionExists = false;
	              }
	              $clone.remove();
	              module.save.displayType(displayType);
	              module.save.transitionExists(animation, transitionExists);
	            }
	            return transitionExists;
	          }
	        },

	        is: {
	          animating: function() {
	            return $module.hasClass(className.animating);
	          },
	          inward: function() {
	            return $module.hasClass(className.inward);
	          },
	          outward: function() {
	            return $module.hasClass(className.outward);
	          },
	          looping: function() {
	            return $module.hasClass(className.looping);
	          },
	          occuring: function(animation) {
	            animation = animation || settings.animation;
	            return ( $module.hasClass(animation) );
	          },
	          visible: function() {
	            return $module.is(':visible');
	          },
	          supported: function() {
	            return(animationName !== false && animationEnd !== false);
	          }
	        },

	        hide: function() {
	          module.verbose('Hiding element');
	          module.remove.visible();
	          module.set.hidden();
	          module.repaint();
	        },

	        show: function(display) {
	          module.verbose('Showing element', display);
	          module.remove.hidden();
	          module.set.visible();
	          module.repaint();
	        },

	        start: function() {
	          module.verbose('Starting animation');
	          $module.removeClass(className.disabled);
	        },

	        stop: function() {
	          module.debug('Stopping animation');
	          $module.addClass(className.disabled);
	        },

	        toggle: function() {
	          module.debug('Toggling play status');
	          $module.toggleClass(className.disabled);
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found || false;
	        }
	      };
	      module.initialize();
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.transition.exists = {};

	$.fn.transition.settings = {

	  // module info
	  name        : 'Transition',

	  // debug content outputted to console
	  debug       : false,

	  // verbose debug output
	  verbose     : true,

	  // performance data output
	  performance : true,

	  // event namespace
	  namespace   : 'transition',

	  // animation complete event
	  complete    : function() {},
	  onShow      : function() {},
	  onHide      : function() {},

	  // whether animation can occur twice in a row
	  allowRepeats : false,

	  // animation duration
	  animation  : 'fade',
	  duration   : '700ms',

	  // new animations will occur after previous ones
	  queue       : true,

	  className   : {
	    animating  : 'animating',
	    disabled   : 'disabled',
	    hidden     : 'hidden',
	    inward     : 'in',
	    loading    : 'loading',
	    looping    : 'looping',
	    outward    : 'out',
	    transition : 'ui transition',
	    visible    : 'visible'
	  },

	  // possible errors
	  error: {
	    noAnimation : 'There is no css animation matching the one you specified.',
	    repeated    : 'That animation is already occurring, cancelling repeated animation',
	    method      : 'The method you called is not defined',
	    support     : 'This browser does not support CSS animations'
	  }

	};


	})( jQuery, window , document );

	/*  ******************************
	  Module - Video
	  Author: Jack Lukic

	  This is a video playlist and video embed plugin which helps
	  provide helpers for adding embed code for vimeo and youtube and
	  abstracting event handlers for each library

	******************************  */

	;(function ($, window, document, undefined) {

	$.fn.video = function(parameters) {

	  var
	    $allModules     = $(this),

	    moduleSelector  = $allModules.selector || '',

	    time            = new Date().getTime(),
	    performance     = [],

	    query           = arguments[0],
	    methodInvoked   = (typeof query == 'string'),
	    queryArguments  = [].slice.call(arguments, 1),

	    returnedValue
	  ;

	  $allModules
	    .each(function() {
	      var
	        settings        = ( $.isPlainObject(parameters) )
	          ? $.extend(true, {}, $.fn.video.settings, parameters)
	          : $.extend({}, $.fn.video.settings),

	        selector        = settings.selector,
	        className       = settings.className,
	        error           = settings.error,
	        metadata        = settings.metadata,
	        namespace       = settings.namespace,

	        eventNamespace  = '.' + namespace,
	        moduleNamespace = 'module-' + namespace,

	        $module         = $(this),
	        $placeholder    = $module.find(selector.placeholder),
	        $playButton     = $module.find(selector.playButton),
	        $embed          = $module.find(selector.embed),

	        element         = this,
	        instance        = $module.data(moduleNamespace),
	        module
	      ;

	      module = {

	        initialize: function() {
	          module.debug('Initializing video');
	          $placeholder
	            .on('click' + eventNamespace, module.play)
	          ;
	          $playButton
	            .on('click' + eventNamespace, module.play)
	          ;
	          module.instantiate();
	        },

	        instantiate: function() {
	          module.verbose('Storing instance of module', module);
	          instance = module;
	          $module
	            .data(moduleNamespace, module)
	          ;
	        },

	        destroy: function() {
	          module.verbose('Destroying previous instance of video');
	          $module
	            .removeData(moduleNamespace)
	            .off(eventNamespace)
	          ;
	          $placeholder
	            .off(eventNamespace)
	          ;
	          $playButton
	            .off(eventNamespace)
	          ;
	        },

	        // sets new video
	        change: function(source, id, url) {
	          module.debug('Changing video to ', source, id, url);
	          $module
	            .data(metadata.source, source)
	            .data(metadata.id, id)
	            .data(metadata.url, url)
	          ;
	          settings.onChange();
	        },

	        // clears video embed
	        reset: function() {
	          module.debug('Clearing video embed and showing placeholder');
	          $module
	            .removeClass(className.active)
	          ;
	          $embed
	            .html(' ')
	          ;
	          $placeholder
	            .show()
	          ;
	          settings.onReset();
	        },

	        // plays current video
	        play: function() {
	          module.debug('Playing video');
	          var
	            source = $module.data(metadata.source) || false,
	            url    = $module.data(metadata.url)    || false,
	            id     = $module.data(metadata.id)     || false
	          ;
	          $embed
	            .html( module.generate.html(source, id, url) )
	          ;
	          $module
	            .addClass(className.active)
	          ;
	          settings.onPlay();
	        },

	        generate: {
	          // generates iframe html
	          html: function(source, id, url) {
	            module.debug('Generating embed html');
	            var
	              width = (settings.width == 'auto')
	                ? $module.width()
	                : settings.width,
	              height = (settings.height == 'auto')
	                ? $module.height()
	                : settings.height,
	              html
	            ;
	            if(source && id) {
	              if(source == 'vimeo') {
	                html = ''
	                  + '<iframe src="http://player.vimeo.com/video/' + id + '?=' + module.generate.url(source) + '"'
	                  + ' width="' + width + '" height="' + height + '"'
	                  + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
	                ;
	              }
	              else if(source == 'youtube') {
	                html = ''
	                  + '<iframe src="http://www.youtube.com/embed/' + id + '?=' + module.generate.url(source) + '"'
	                  + ' width="' + width + '" height="' + height + '"'
	                  + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
	                ;
	              }
	            }
	            else if(url) {
	              html = ''
	                + '<iframe src="' + url + '"'
	                + ' width="' + width + '" height="' + height + '"'
	                + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
	              ;
	            }
	            else {
	              module.error(error.noVideo);
	            }
	            return html;
	          },

	          // generate url parameters
	          url: function(source) {
	            var
	              api      = (settings.api)
	                ? 1
	                : 0,
	              autoplay = (settings.autoplay)
	                ? 1
	                : 0,
	              hd       = (settings.hd)
	                ? 1
	                : 0,
	              showUI   = (settings.showUI)
	                ? 1
	                : 0,
	              // opposite used for some params
	              hideUI   = !(settings.showUI)
	                ? 1
	                : 0,
	              url = ''
	            ;
	            if(source == 'vimeo') {
	              url = ''
	                +      'api='      + api
	                + '&amp;title='    + showUI
	                + '&amp;byline='   + showUI
	                + '&amp;portrait=' + showUI
	                + '&amp;autoplay=' + autoplay
	              ;
	              if(settings.color) {
	                url += '&amp;color=' + settings.color;
	              }
	            }
	            if(source == 'ustream') {
	              url = ''
	                + 'autoplay=' + autoplay
	              ;
	              if(settings.color) {
	                url += '&amp;color=' + settings.color;
	              }
	            }
	            else if(source == 'youtube') {
	              url = ''
	                +      'enablejsapi=' + api
	                + '&amp;autoplay='    + autoplay
	                + '&amp;autohide='    + hideUI
	                + '&amp;hq='          + hd
	                + '&amp;modestbranding=1'
	              ;
	              if(settings.color) {
	                url += '&amp;color=' + settings.color;
	              }
	            }
	            return url;
	          }
	        },

	        setting: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, settings, name);
	          }
	          else if(value !== undefined) {
	            settings[name] = value;
	          }
	          else {
	            return settings[name];
	          }
	        },
	        internal: function(name, value) {
	          if( $.isPlainObject(name) ) {
	            $.extend(true, module, name);
	          }
	          else if(value !== undefined) {
	            module[name] = value;
	          }
	          else {
	            return module[name];
	          }
	        },
	        debug: function() {
	          if(settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.debug.apply(console, arguments);
	            }
	          }
	        },
	        verbose: function() {
	          if(settings.verbose && settings.debug) {
	            if(settings.performance) {
	              module.performance.log(arguments);
	            }
	            else {
	              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');
	              module.verbose.apply(console, arguments);
	            }
	          }
	        },
	        error: function() {
	          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');
	          module.error.apply(console, arguments);
	        },
	        performance: {
	          log: function(message) {
	            var
	              currentTime,
	              executionTime,
	              previousTime
	            ;
	            if(settings.performance) {
	              currentTime   = new Date().getTime();
	              previousTime  = time || currentTime;
	              executionTime = currentTime - previousTime;
	              time          = currentTime;
	              performance.push({
	                'Element'        : element,
	                'Name'           : message[0],
	                'Arguments'      : [].slice.call(message, 1) || '',
	                'Execution Time' : executionTime
	              });
	            }
	            clearTimeout(module.performance.timer);
	            module.performance.timer = setTimeout(module.performance.display, 100);
	          },
	          display: function() {
	            var
	              title = settings.name + ':',
	              totalTime = 0
	            ;
	            time = false;
	            clearTimeout(module.performance.timer);
	            $.each(performance, function(index, data) {
	              totalTime += data['Execution Time'];
	            });
	            title += ' ' + totalTime + 'ms';
	            if(moduleSelector) {
	              title += ' \'' + moduleSelector + '\'';
	            }
	            if($allModules.size() > 1) {
	              title += ' ' + '(' + $allModules.size() + ')';
	            }
	            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {
	              console.groupCollapsed(title);
	              if(console.table) {
	                console.table(performance);
	              }
	              else {
	                $.each(performance, function(index, data) {
	                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');
	                });
	              }
	              console.groupEnd();
	            }
	            performance = [];
	          }
	        },
	        invoke: function(query, passedArguments, context) {
	          var
	            object = instance,
	            maxDepth,
	            found,
	            response
	          ;
	          passedArguments = passedArguments || queryArguments;
	          context         = element         || context;
	          if(typeof query == 'string' && object !== undefined) {
	            query    = query.split(/[\. ]/);
	            maxDepth = query.length - 1;
	            $.each(query, function(depth, value) {
	              var camelCaseValue = (depth != maxDepth)
	                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)
	                : query
	              ;
	              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {
	                object = object[camelCaseValue];
	              }
	              else if( object[camelCaseValue] !== undefined ) {
	                found = object[camelCaseValue];
	                return false;
	              }
	              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {
	                object = object[value];
	              }
	              else if( object[value] !== undefined ) {
	                found = object[value];
	                return false;
	              }
	              else {
	                return false;
	              }
	            });
	          }
	          if ( $.isFunction( found ) ) {
	            response = found.apply(context, passedArguments);
	          }
	          else if(found !== undefined) {
	            response = found;
	          }
	          if($.isArray(returnedValue)) {
	            returnedValue.push(response);
	          }
	          else if(returnedValue !== undefined) {
	            returnedValue = [returnedValue, response];
	          }
	          else if(response !== undefined) {
	            returnedValue = response;
	          }
	          return found;
	        }
	      };

	      if(methodInvoked) {
	        if(instance === undefined) {
	          module.initialize();
	        }
	        module.invoke(query);
	      }
	      else {
	        if(instance !== undefined) {
	          module.destroy();
	        }
	        module.initialize();
	      }
	    })
	  ;
	  return (returnedValue !== undefined)
	    ? returnedValue
	    : this
	  ;
	};

	$.fn.video.settings = {

	  name        : 'Video',
	  namespace   : 'video',

	  debug       : false,
	  verbose     : true,
	  performance : true,

	  metadata    : {
	    source : 'source',
	    id     : 'id',
	    url    : 'url'
	  },

	  onPlay   : function(){},
	  onReset  : function(){},
	  onChange : function(){},

	  // callbacks not coded yet (needs to use jsapi)
	  onPause  : function() {},
	  onStop   : function() {},

	  width    : 'auto',
	  height   : 'auto',

	  autoplay : false,
	  color    : '#442359',
	  hd       : true,
	  showUI   : false,
	  api      : true,

	  error      : {
	    noVideo     : 'No video specified',
	    method      : 'The method you called is not defined'
	  },

	  className   : {
	    active      : 'active'
	  },

	  selector    : {
	    embed       : '.embed',
	    placeholder : '.placeholder',
	    playButton  : '.play'
	  }
	};


	})( jQuery, window , document );


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(19);
	if(typeof content === 'string') content = [module.id, content, ''];
	// add the styles to the DOM
	var update = __webpack_require__(16)(content);
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/jonathan/Projects/smooth/developer-tools/node_modules/css-loader/index.js!/Users/jonathan/Projects/smooth/developer-tools/node_modules/sass-loader/index.js?outputStyle=expanded!/Users/jonathan/Projects/smooth/developer-tools/bower_components/semantic/build/packaged/css/semantic.css", function() {
			var newContent = require("!!/Users/jonathan/Projects/smooth/developer-tools/node_modules/css-loader/index.js!/Users/jonathan/Projects/smooth/developer-tools/node_modules/sass-loader/index.js?outputStyle=expanded!/Users/jonathan/Projects/smooth/developer-tools/bower_components/semantic/build/packaged/css/semantic.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(29)();
	exports.push([module.id, "/*\n * # Semantic - Breadcrumb\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Breadcrumb\n*******************************/\n.ui.breadcrumb {\n  margin: 1em 0em;\n  display: inline-block;\n  vertical-align: middle; }\n\n.ui.breadcrumb:first-child {\n  margin-top: 0em; }\n\n.ui.breadcrumb:last-child {\n  margin-bottom: 0em; }\n\n/*******************************\n          Content\n*******************************/\n.ui.breadcrumb .divider {\n  display: inline-block;\n  opacity: 0.5;\n  margin: 0em 0.15em 0em;\n  font-size: 1em;\n  color: rgba(0, 0, 0, 0.3); }\n\n.ui.breadcrumb a.section {\n  cursor: pointer; }\n\n.ui.breadcrumb .section {\n  display: inline-block;\n  margin: 0em;\n  padding: 0em; }\n\n/* Loose Coupling */\n.ui.breadcrumb.segment {\n  display: inline-block;\n  padding: 0.5em 1em; }\n\n/*******************************\n            States\n*******************************/\n.ui.breadcrumb .active.section {\n  font-weight: bold; }\n\n/*******************************\n           Variations\n*******************************/\n.ui.small.breadcrumb {\n  font-size: 0.75em; }\n\n.ui.large.breadcrumb {\n  font-size: 1.1em; }\n\n.ui.huge.breadcrumb {\n  font-size: 1.3em; }\n\n/*\n * # Semantic - Form\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Standard\n*******************************/\n/*--------------------\n        Form\n---------------------*/\n.ui.form {\n  position: relative;\n  max-width: 100%; }\n\n.ui.form :first-child {\n  margin-top: 0em; }\n\n.ui.form :last-child {\n  margin-bottom: 0em; }\n\n/*--------------------\n        Content\n---------------------*/\n.ui.form > p {\n  margin: 1em 0; }\n\n/*--------------------\n        Field\n---------------------*/\n.ui.form .field {\n  clear: both;\n  margin: 0em 0em 1em; }\n\n/*--------------------\n        Labels\n---------------------*/\n.ui.form .field > label {\n  margin: 0em 0em 0.3em;\n  display: block;\n  color: #555555;\n  font-size: 0.875em; }\n\n/*--------------------\n    Standard Inputs\n---------------------*/\n.ui.form textarea, .ui.form input[type=\"color\"], .ui.form input[type=\"date\"], .ui.form input[type=\"datetime\"], .ui.form input[type=\"datetime-local\"], .ui.form input[type=\"email\"], .ui.form input[type=\"month\"], .ui.form input[type=\"number\"], .ui.form input[type=\"password\"], .ui.form input[type=\"range\"], .ui.form input[type=\"search\"], .ui.form input[type=\"tel\"], .ui.form input[type=\"text\"], .ui.form input[type=\"time\"], .ui.form input[type=\"url\"], .ui.form input[type=\"week\"], .ui.form .ui.input {\n  width: 100%; }\n\n.ui.form textarea, .ui.form input[type=\"color\"], .ui.form input[type=\"date\"], .ui.form input[type=\"datetime\"], .ui.form input[type=\"datetime-local\"], .ui.form input[type=\"email\"], .ui.form input[type=\"month\"], .ui.form input[type=\"number\"], .ui.form input[type=\"password\"], .ui.form input[type=\"search\"], .ui.form input[type=\"tel\"], .ui.form input[type=\"text\"], .ui.form input[type=\"time\"], .ui.form input[type=\"url\"], .ui.form input[type=\"week\"] {\n  margin: 0em;\n  padding: 0.65em 1em;\n  font-size: 1em;\n  background-color: #FFFFFF;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  outline: none;\n  color: rgba(0, 0, 0, 0.7);\n  border-radius: 0.3125em;\n  -webkit-transition: background-color 0.3s ease-out, -webkit-box-shadow 0.2s ease, border-color 0.2s ease;\n  -moz-transition: background-color 0.3s ease-out, box-shadow 0.2s ease, border-color 0.2s ease;\n  transition: background-color 0.3s ease-out, box-shadow 0.2s ease, border-color 0.2s ease;\n  -webkit-box-shadow: 0em 0em 0em 0em rgba(0, 0, 0, 0.3) inset;\n  box-shadow: 0em 0em 0em 0em rgba(0, 0, 0, 0.3) inset;\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.textarea, .ui.form textarea {\n  line-height: 1.33;\n  min-height: 8em;\n  height: 12em;\n  max-height: 24em;\n  resize: vertical; }\n\n.ui.form textarea, .ui.form input[type=\"checkbox\"] {\n  vertical-align: top; }\n\n/*--------------------\n       Dividers\n---------------------*/\n.ui.form .divider {\n  clear: both;\n  margin: 1em 0em; }\n\n/*--------------------\n   Types of Messages\n---------------------*/\n.ui.form .info.message, .ui.form .warning.message, .ui.form .error.message {\n  display: none; }\n\n/* Assumptions */\n.ui.form .message:first-child {\n  margin-top: 0px; }\n\n/*--------------------\n   Validation Prompt\n---------------------*/\n.ui.form .field .prompt.label {\n  white-space: nowrap; }\n\n.ui.form .inline.field .prompt {\n  margin-top: 0em;\n  margin-left: 1em; }\n\n.ui.form .inline.field .prompt:before {\n  margin-top: -0.3em;\n  bottom: auto;\n  right: auto;\n  top: 50%;\n  left: 0em; }\n\n/*******************************\n            States\n*******************************/\n/*--------------------\n        Focus\n---------------------*/\n.ui.form input[type=\"color\"]:focus, .ui.form input[type=\"date\"]:focus, .ui.form input[type=\"datetime\"]:focus, .ui.form input[type=\"datetime-local\"]:focus, .ui.form input[type=\"email\"]:focus, .ui.form input[type=\"month\"]:focus, .ui.form input[type=\"number\"]:focus, .ui.form input[type=\"password\"]:focus, .ui.form input[type=\"search\"]:focus, .ui.form input[type=\"tel\"]:focus, .ui.form input[type=\"text\"]:focus, .ui.form input[type=\"time\"]:focus, .ui.form input[type=\"url\"]:focus, .ui.form input[type=\"week\"]:focus .ui.form textarea:focus {\n  color: rgba(0, 0, 0, 0.85);\n  border-color: rgba(0, 0, 0, 0.2);\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n  -webkit-appearance: none;\n  -webkit-box-shadow: 0.3em 0em 0em 0em rgba(0, 0, 0, 0.2) inset;\n  box-shadow: 0.3em 0em 0em 0em rgba(0, 0, 0, 0.2) inset; }\n\n/*--------------------\n        Error\n---------------------*/\n/* On Form */\n.ui.form.warning .warning.message {\n  display: block; }\n\n/*--------------------\n        Warning\n---------------------*/\n/* On Form */\n.ui.form.error .error.message {\n  display: block; }\n\n/* On Field(s) */\n.ui.form .fields.error .field label, .ui.form .field.error label, .ui.form .fields.error .field .input, .ui.form .field.error .input {\n  color: #D95C5C; }\n\n.ui.form .fields.error .field .corner.label, .ui.form .field.error .corner.label {\n  border-color: #D95C5C;\n  color: #FFFFFF; }\n\n.ui.form .fields.error .field textarea, .ui.form .fields.error .field input[type=\"color\"], .ui.form .fields.error .field input[type=\"date\"], .ui.form .fields.error .field input[type=\"datetime\"], .ui.form .fields.error .field input[type=\"datetime-local\"], .ui.form .fields.error .field input[type=\"email\"], .ui.form .fields.error .field input[type=\"month\"], .ui.form .fields.error .field input[type=\"number\"], .ui.form .fields.error .field input[type=\"password\"], .ui.form .fields.error .field input[type=\"search\"], .ui.form .fields.error .field input[type=\"tel\"], .ui.form .fields.error .field input[type=\"text\"], .ui.form .fields.error .field input[type=\"time\"], .ui.form .fields.error .field input[type=\"url\"], .ui.form .fields.error .field input[type=\"week\"], .ui.form .field.error textarea, .ui.form .field.error input[type=\"color\"], .ui.form .field.error input[type=\"date\"], .ui.form .field.error input[type=\"datetime\"], .ui.form .field.error input[type=\"datetime-local\"], .ui.form .field.error input[type=\"email\"], .ui.form .field.error input[type=\"month\"], .ui.form .field.error input[type=\"number\"], .ui.form .field.error input[type=\"password\"], .ui.form .field.error input[type=\"search\"], .ui.form .field.error input[type=\"tel\"], .ui.form .field.error input[type=\"text\"], .ui.form .field.error input[type=\"time\"], .ui.form .field.error input[type=\"url\"], .ui.form .field.error input[type=\"week\"] {\n  background-color: #FFFAFA;\n  border-color: #E7BEBE;\n  border-left: none;\n  color: #D95C5C;\n  padding-left: 1.2em;\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n  -webkit-box-shadow: 0.3em 0em 0em 0em #D95C5C inset;\n  box-shadow: 0.3em 0em 0em 0em #D95C5C inset; }\n\n.ui.form .field.error textarea:focus, .ui.form .field.error input[type=\"color\"]:focus, .ui.form .field.error input[type=\"date\"]:focus, .ui.form .field.error input[type=\"datetime\"]:focus, .ui.form .field.error input[type=\"datetime-local\"]:focus, .ui.form .field.error input[type=\"email\"]:focus, .ui.form .field.error input[type=\"month\"]:focus, .ui.form .field.error input[type=\"number\"]:focus, .ui.form .field.error input[type=\"password\"]:focus, .ui.form .field.error input[type=\"search\"]:focus, .ui.form .field.error input[type=\"tel\"]:focus, .ui.form .field.error input[type=\"text\"]:focus, .ui.form .field.error input[type=\"time\"]:focus, .ui.form .field.error input[type=\"url\"]:focus, .ui.form .field.error input[type=\"week\"]:focus {\n  border-color: #ff5050;\n  color: #ff5050;\n  -webkit-appearance: none;\n  -webkit-box-shadow: 0.3em 0em 0em 0em #FF5050 inset;\n  box-shadow: 0.3em 0em 0em 0em #FF5050 inset; }\n\n/*----------------------------\n  Dropdown Selection Warning\n-----------------------------*/\n.ui.form .fields.error .field .ui.dropdown, .ui.form .fields.error .field .ui.dropdown .item, .ui.form .field.error .ui.dropdown, .ui.form .field.error .ui.dropdown .item {\n  background-color: #FFFAFA;\n  color: #D95C5C; }\n\n.ui.form .fields.error .field .ui.dropdown, .ui.form .field.error .ui.dropdown {\n  -webkit-box-shadow: 0px 0px 0px 1px #E7BEBE !important;\n  box-shadow: 0px 0px 0px 1px #E7BEBE !important; }\n\n.ui.form .fields.error .field .ui.dropdown:hover, .ui.form .field.error .ui.dropdown:hover {\n  -webkit-box-shadow: 0px 0px 0px 1px #E7BEBE !important;\n  box-shadow: 0px 0px 0px 1px #E7BEBE !important; }\n\n.ui.form .fields.error .field .ui.dropdown:hover .menu, .ui.form .field.error .ui.dropdown:hover .menu {\n  -webkit-box-shadow: 0px 1px 0px 1px #E7BEBE;\n  box-shadow: 0px 1px 0px 1px #E7BEBE; }\n\n.ui.form .fields.error .field .ui.selection.dropdown .menu .item:hover, .ui.form .field.error .ui.selection.dropdown .menu .item:hover {\n  background-color: #FFF2F2; }\n\n/* Currently Active Item */\n.ui.form .fields.error .field .ui.dropdown .menu .active.item, .ui.form .field.error .ui.dropdown .menu .active.item {\n  background-color: #FDCFCF !important; }\n\n/*--------------------\n  Empty (Placeholder)\n---------------------*/\n/* browsers require these rules separate */\n.ui.form ::-webkit-input-placeholder {\n  color: #AAAAAA; }\n\n.ui.form ::-moz-placeholder {\n  color: #AAAAAA; }\n\n.ui.form :focus::-webkit-input-placeholder {\n  color: #999999; }\n\n.ui.form :focus::-moz-placeholder {\n  color: #999999; }\n\n/* Error Placeholder */\n.ui.form .error ::-webkit-input-placeholder {\n  color: rgba(255, 80, 80, 0.4); }\n\n.ui.form .error ::-moz-placeholder {\n  color: rgba(255, 80, 80, 0.4); }\n\n.ui.form .error :focus::-webkit-input-placeholder {\n  color: rgba(255, 80, 80, 0.7); }\n\n.ui.form .error :focus::-moz-placeholder {\n  color: rgba(255, 80, 80, 0.7); }\n\n/*--------------------\n       Disabled\n---------------------*/\n.ui.form .field :disabled, .ui.form .field.disabled {\n  opacity: 0.5; }\n\n.ui.form .field.disabled label {\n  opacity: 0.5; }\n\n.ui.form .field.disabled :disabled {\n  opacity: 1; }\n\n/*--------------------\n     Loading State\n---------------------*/\n/* On Form */\n.ui.form.loading {\n  position: relative; }\n\n.ui.form.loading:after {\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  content: '';\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8) url("+__webpack_require__(168)+") no-repeat 50% 50%;\n  visibility: visible; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------------\n      Fluid Width\n---------------------*/\n.ui.form.fluid {\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*--------------------------\n  Input w/ attached Button\n---------------------------*/\n.ui.form input.attached {\n  width: auto; }\n\n/*--------------------\n      Date Input\n---------------------*/\n.ui.form .date.field > label {\n  position: relative; }\n\n.ui.form .date.field > label:after {\n  position: absolute;\n  top: 2em;\n  right: 0.5em;\n  font-family: 'Icons';\n  content: '\\f133';\n  font-size: 1.2em;\n  font-weight: normal;\n  color: #CCCCCC; }\n\n/*--------------------\n    Inverted Colors\n---------------------*/\n.ui.inverted.form label {\n  color: #FFFFFF; }\n\n.ui.inverted.form .field.error textarea, .ui.inverted.form .field.error input[type=\"color\"], .ui.inverted.form .field.error input[type=\"date\"], .ui.inverted.form .field.error input[type=\"datetime\"], .ui.inverted.form .field.error input[type=\"datetime-local\"], .ui.inverted.form .field.error input[type=\"email\"], .ui.inverted.form .field.error input[type=\"month\"], .ui.inverted.form .field.error input[type=\"number\"], .ui.inverted.form .field.error input[type=\"password\"], .ui.inverted.form .field.error input[type=\"search\"], .ui.inverted.form .field.error input[type=\"tel\"], .ui.inverted.form .field.error input[type=\"text\"], .ui.inverted.form .field.error input[type=\"time\"], .ui.inverted.form .field.error input[type=\"url\"], .ui.inverted.form .field.error input[type=\"week\"] {\n  background-color: #FFCCCC; }\n\n.ui.inverted.form .ui.checkbox label {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.form .ui.checkbox label:hover, .ui.inverted.form .ui.checkbox .box:hover {\n  color: #FFFFFF; }\n\n/*--------------------\n     Field Groups\n---------------------*/\n/* Grouped Vertically */\n.ui.form .grouped.fields {\n  margin: 0em 0em 1em; }\n\n.ui.form .grouped.fields .field {\n  display: block;\n  float: none;\n  margin: 0.5em 0em;\n  padding: 0em; }\n\n/*--------------------\n          Fields\n---------------------*/\n/* Split fields */\n.ui.form .fields {\n  clear: both; }\n\n.ui.form .fields:after {\n  content: ' ';\n  display: block;\n  clear: both;\n  visibility: hidden;\n  line-height: 0;\n  height: 0; }\n\n.ui.form .fields > .field {\n  clear: none;\n  float: left;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.form .fields > .field:first-child {\n  border-left: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/* Other Combinations */\n.ui.form .two.fields > .fields, .ui.form .two.fields > .field {\n  width: 50%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.form .three.fields > .fields, .ui.form .three.fields > .field {\n  width: 33.333%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.form .four.fields > .fields, .ui.form .four.fields > .field {\n  width: 25%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.form .five.fields > .fields, .ui.form .five.fields > .field {\n  width: 20%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.form .fields .field:first-child {\n  padding-left: 0%; }\n\n.ui.form .fields .field:last-child {\n  padding-right: 0%; }\n\n/* Fields grid support */\n.ui.form .fields .wide.field {\n  width: 6.25%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.form .fields .wide.field:first-child {\n  padding-left: 0%; }\n\n.ui.form .fields .wide.field:last-child {\n  padding-right: 0%; }\n\n.ui.form .fields > .one.wide.field {\n  width: 6.25%; }\n\n.ui.form .fields > .two.wide.field {\n  width: 12.5%; }\n\n.ui.form .fields > .three.wide.field {\n  width: 18.75%; }\n\n.ui.form .fields > .four.wide.field {\n  width: 25%; }\n\n.ui.form .fields > .five.wide.field {\n  width: 31.25%; }\n\n.ui.form .fields > .six.wide.field {\n  width: 37.5%; }\n\n.ui.form .fields > .seven.wide.field {\n  width: 43.75%; }\n\n.ui.form .fields > .eight.wide.field {\n  width: 50%; }\n\n.ui.form .fields > .nine.wide.field {\n  width: 56.25%; }\n\n.ui.form .fields > .ten.wide.field {\n  width: 62.5%; }\n\n.ui.form .fields > .eleven.wide.field {\n  width: 68.75%; }\n\n.ui.form .fields > .twelve.wide.field {\n  width: 75%; }\n\n.ui.form .fields > .thirteen.wide.field {\n  width: 81.25%; }\n\n.ui.form .fields > .fourteen.wide.field {\n  width: 87.5%; }\n\n.ui.form .fields > .fifteen.wide.field {\n  width: 93.75%; }\n\n.ui.form .fields > .sixteen.wide.field {\n  width: 100%; }\n\n/* Swap to full width on mobile */\n@media only screen and (max-width: 767px) {\n  .ui.form .two.fields > .fields, .ui.form .two.fields > .field, .ui.form .three.fields > .fields, .ui.form .three.fields > .field, .ui.form .four.fields > .fields, .ui.form .four.fields > .field, .ui.form .five.fields > .fields, .ui.form .five.fields > .field, .ui.form .fields > .two.wide.field, .ui.form .fields > .three.wide.field, .ui.form .fields > .four.wide.field, .ui.form .fields > .five.wide.field, .ui.form .fields > .six.wide.field, .ui.form .fields > .seven.wide.field, .ui.form .fields > .eight.wide.field, .ui.form .fields > .nine.wide.field, .ui.form .fields > .ten.wide.field, .ui.form .fields > .eleven.wide.field, .ui.form .fields > .twelve.wide.field, .ui.form .fields > .thirteen.wide.field, .ui.form .fields > .fourteen.wide.field, .ui.form .fields > .fifteen.wide.field, .ui.form .fields > .sixteen.wide.field {\n    width: 100%;\n    padding-left: 0%;\n    padding-right: 0%; } }\n\n/*--------------------\n    Inline Fields\n---------------------*/\n.ui.form .inline.fields .field {\n  min-height: 1.3em;\n  margin-right: 0.5em; }\n\n.ui.form .inline.fields .field > label, .ui.form .inline.fields .field > p, .ui.form .inline.fields .field > .ui.input, .ui.form .inline.fields .field > input, .ui.form .inline.field > label, .ui.form .inline.field > p, .ui.form .inline.field > .ui.input, .ui.form .inline.field > input {\n  display: inline-block;\n  width: auto;\n  margin-top: 0em;\n  margin-bottom: 0em;\n  vertical-align: middle; }\n\n.ui.form .inline.fields .field > :first-child, .ui.form .inline.field > :first-child {\n  margin: 0em 0.5em 0em 0em; }\n\n.ui.form .inline.fields .field > :only-child, .ui.form .inline.field > :only-child {\n  margin: 0em; }\n\n/*--------------------\n        Sizes\n---------------------*/\n/* Standard */\n.ui.small.form {\n  font-size: 0.875em; }\n\n.ui.small.form textarea, .ui.small.form input[type=\"color\"], .ui.small.form input[type=\"date\"], .ui.small.form input[type=\"datetime\"], .ui.small.form input[type=\"datetime-local\"], .ui.small.form input[type=\"email\"], .ui.small.form input[type=\"month\"], .ui.small.form input[type=\"number\"], .ui.small.form input[type=\"password\"], .ui.small.form input[type=\"search\"], .ui.small.form input[type=\"tel\"], .ui.small.form input[type=\"text\"], .ui.small.form input[type=\"time\"], .ui.small.form input[type=\"url\"], .ui.small.form input[type=\"week\"], .ui.small.form label {\n  font-size: 1em; }\n\n/* Large */\n.ui.large.form {\n  font-size: 1.125em; }\n\n/*\n * # Semantic - Grid\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Grid\n*******************************/\n.ui.grid {\n  display: block;\n  text-align: left;\n  font-size: 0em;\n  margin: 0% -1.5%;\n  padding: 0%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\nbody > .ui.grid {\n  margin-left: 0% !important;\n  margin-right: 0% !important; }\n\n.ui.grid:after, .ui.row:after {\n  content: \".\";\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden; }\n\n/*-------------------\n       Columns\n--------------------*/\n/* Standard 16 column */\n.ui.grid > .column, .ui.grid > .row > .column {\n  display: inline-block;\n  text-align: left;\n  font-size: 1rem;\n  width: 6.25%;\n  padding-left: 1.5%;\n  padding-right: 1.5%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  vertical-align: top; }\n\n/* Vertical padding when no rows */\n.ui.grid > .column {\n  margin-top: 1rem;\n  margin-bottom: 1rem; }\n\n/*-------------------\n        Rows\n--------------------*/\n.ui.grid > .row {\n  display: block;\n  width: 100% !important;\n  margin-top: 1.5%;\n  padding: 1rem 0% 0%;\n  font-size: 0rem; }\n\n.ui.grid > .row:first-child {\n  padding-top: 0rem;\n  margin-top: 0rem; }\n\n/*-------------------\n      Content\n--------------------*/\n.ui.grid > .row > img, .ui.grid > .row > .column > img {\n  max-width: 100%; }\n\n.ui.grid .column > .ui.segment:only-child {\n  margin: 0em; }\n\n/*******************************\n           Variations\n*******************************/\n/*-----------------------\n  Page Grid (Responsive)\n-------------------------*/\n.ui.page.grid {\n  min-width: 320px;\n  margin-left: 0%;\n  margin-right: 0%; }\n\n@media only screen and (max-width: 991px) {\n  .ui.page.grid {\n    padding: 0% 4%; } }\n\n@media only screen and (min-width: 992px) {\n  .ui.page.grid {\n    padding: 0% 8%; } }\n\n@media only screen and (min-width: 1500px) {\n  .ui.page.grid {\n    padding: 0% 13%; } }\n\n@media only screen and (min-width: 1750px) {\n  .ui.page.grid {\n    padding: 0% 18%; } }\n\n@media only screen and (min-width: 2000px) {\n  .ui.page.grid {\n    padding: 0% 23%; } }\n\n/*-------------------\n    Column Width\n--------------------*/\n/* Sizing Combinations */\n.ui.grid > .row > .one.wide.column, .ui.grid > .column.row > .one.wide.column, .ui.grid > .one.wide.column, .ui.column.grid > .one.wide.column {\n  width: 6.25%; }\n\n.ui.grid > .row > .two.wide.column, .ui.grid > .column.row > .two.wide.column, .ui.grid > .two.wide.column, .ui.column.grid > .two.wide.column {\n  width: 12.5%; }\n\n.ui.grid > .row > .three.wide.column, .ui.grid > .column.row > .three.wide.column, .ui.grid > .three.wide.column, .ui.column.grid > .three.wide.column {\n  width: 18.75%; }\n\n.ui.grid > .row > .four.wide.column, .ui.grid > .column.row > .four.wide.column, .ui.grid > .four.wide.column, .ui.column.grid > .four.wide.column {\n  width: 25%; }\n\n.ui.grid > .row > .five.wide.column, .ui.grid > .column.row > .five.wide.column, .ui.grid > .five.wide.column, .ui.column.grid > .five.wide.column {\n  width: 31.25%; }\n\n.ui.grid > .row > .six.wide.column, .ui.grid > .column.row > .six.wide.column, .ui.grid > .six.wide.column, .ui.column.grid > .six.wide.column {\n  width: 37.5%; }\n\n.ui.grid > .row > .seven.wide.column, .ui.grid > .column.row > .seven.wide.column, .ui.grid > .seven.wide.column, .ui.column.grid > .seven.wide.column {\n  width: 43.75%; }\n\n.ui.grid > .row > .eight.wide.column, .ui.grid > .column.row > .eight.wide.column, .ui.grid > .eight.wide.column, .ui.column.grid > .eight.wide.column {\n  width: 50%; }\n\n.ui.grid > .row > .nine.wide.column, .ui.grid > .column.row > .nine.wide.column, .ui.grid > .nine.wide.column, .ui.column.grid > .nine.wide.column {\n  width: 56.25%; }\n\n.ui.grid > .row > .ten.wide.column, .ui.grid > .column.row > .ten.wide.column, .ui.grid > .ten.wide.column, .ui.column.grid > .ten.wide.column {\n  width: 62.5%; }\n\n.ui.grid > .row > .eleven.wide.column, .ui.grid > .column.row > .eleven.wide.column, .ui.grid > .eleven.wide.column, .ui.column.grid > .eleven.wide.column {\n  width: 68.75%; }\n\n.ui.grid > .row > .twelve.wide.column, .ui.grid > .column.row > .twelve.wide.column, .ui.grid > .twelve.wide.column, .ui.column.grid > .twelve.wide.column {\n  width: 75%; }\n\n.ui.grid > .row > .thirteen.wide.column, .ui.grid > .column.row > .thirteen.wide.column, .ui.grid > .thirteen.wide.column, .ui.column.grid > .thirteen.wide.column {\n  width: 81.25%; }\n\n.ui.grid > .row > .fourteen.wide.column, .ui.grid > .column.row > .fourteen.wide.column, .ui.grid > .fourteen.wide.column, .ui.column.grid > .fourteen.wide.column {\n  width: 87.5%; }\n\n.ui.grid > .row > .fifteen.wide.column, .ui.grid > .column.row > .fifteen.wide.column, .ui.grid > .fifteen.wide.column, .ui.column.grid > .fifteen.wide.column {\n  width: 93.75%; }\n\n.ui.grid > .row > .sixteen.wide.column, .ui.grid > .column.row > .sixteen.wide.column, .ui.grid > .sixteen.wide.column, .ui.column.grid > .sixteen.wide.column {\n  width: 100%; }\n\n/*-------------------\n     Column Count\n--------------------*/\n/* Assume full width with one column */\n.ui.one.column.grid > .row > .column, .ui.one.column.grid > .column, .ui.grid > .one.column.row > .column {\n  width: 100%; }\n\n.ui.two.column.grid > .row > .column, .ui.two.column.grid > .column, .ui.grid > .two.column.row > .column {\n  width: 50%; }\n\n.ui.three.column.grid > .row > .column, .ui.three.column.grid > .column, .ui.grid > .three.column.row > .column {\n  width: 33.3333%; }\n\n.ui.four.column.grid > .row > .column, .ui.four.column.grid > .column, .ui.grid > .four.column.row > .column {\n  width: 25%; }\n\n.ui.five.column.grid > .row > .column, .ui.five.column.grid > .column, .ui.grid > .five.column.row > .column {\n  width: 20%; }\n\n.ui.six.column.grid > .row > .column, .ui.six.column.grid > .column, .ui.grid > .six.column.row > .column {\n  width: 16.66667%; }\n\n.ui.seven.column.grid > .row > .column, .ui.seven.column.grid > .column, .ui.grid > .seven.column.row > .column {\n  width: 14.2857%; }\n\n.ui.eight.column.grid > .row > .column, .ui.eight.column.grid > .column, .ui.grid > .eight.column.row > .column {\n  width: 12.5%; }\n\n.ui.nine.column.grid > .row > .column, .ui.nine.column.grid > .column, .ui.grid > .nine.column.row > .column {\n  width: 11.1111%; }\n\n.ui.ten.column.grid > .row > .column, .ui.ten.column.grid > .column, .ui.grid > .ten.column.row > .column {\n  width: 10%; }\n\n.ui.eleven.column.grid > .row > .column, .ui.eleven.column.grid > .column, .ui.grid > .eleven.column.row > .column {\n  width: 9.0909%; }\n\n.ui.twelve.column.grid > .row > .column, .ui.twelve.column.grid > .column, .ui.grid > .twelve.column.row > .column {\n  width: 8.3333%; }\n\n.ui.thirteen.column.grid > .row > .column, .ui.thirteen.column.grid > .column, .ui.grid > .thirteen.column.row > .column {\n  width: 7.6923%; }\n\n.ui.fourteen.column.grid > .row > .column, .ui.fourteen.column.grid > .column, .ui.grid > .fourteen.column.row > .column {\n  width: 7.1428%; }\n\n.ui.fifteen.column.grid > .row > .column, .ui.fifteen.column.grid > .column, .ui.grid > .fifteen.column.row > .column {\n  width: 6.6666%; }\n\n.ui.sixteen.column.grid > .row > .column, .ui.sixteen.column.grid > .column, .ui.grid > .sixteen.column.row > .column {\n  width: 6.25%; }\n\n/* Assume full width with one column */\n.ui.grid > .column:only-child, .ui.grid > .row > .column:only-child {\n  width: 100%; }\n\n/*----------------------\n        Relaxed\n-----------------------*/\n.ui.relaxed.grid {\n  margin: 0% -2.5%; }\n\n.ui.relaxed.grid > .column, .ui.relaxed.grid > .row > .column {\n  padding-left: 2.5%;\n  padding-right: 2.5%; }\n\n/*----------------------\n       \"Floated\"\n-----------------------*/\n.ui.grid .left.floated.column {\n  float: left; }\n\n.ui.grid .right.floated.column {\n  float: right; }\n\n/*----------------------\n        Divided\n-----------------------*/\n.ui.divided.grid, .ui.divided.grid > .row {\n  display: table;\n  width: 100%;\n  margin-left: 0% !important;\n  margin-right: 0% !important; }\n\n.ui.divided.grid > .column:not(.row), .ui.divided.grid > .row > .column {\n  display: table-cell;\n  -webkit-box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.1), -2px 0px 0px 0px rgba(255, 255, 255, 0.8);\n  box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.1), -2px 0px 0px 0px rgba(255, 255, 255, 0.8); }\n\n.ui.divided.grid > .column.row {\n  display: table; }\n\n.ui.divided.grid > .column:first-child, .ui.divided.grid > .row > .column:first-child {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/* Vertically Divided */\n.ui.vertically.divided.grid > .row {\n  -webkit-box-shadow: 0px -1px 0px 0px rgba(0, 0, 0, 0.1), 0px -2px 0px 0px rgba(255, 255, 255, 0.8) !important;\n  box-shadow: 0px -1px 0px 0px rgba(0, 0, 0, 0.1), 0px -2px 0px 0px rgba(255, 255, 255, 0.8) !important; }\n\n.ui.vertically.divided.grid > .row > .column, .ui.vertically.divided.grid > .column:not(.row), .ui.vertically.divided.grid > .row:first-child {\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n/*----------------------\n         Celled\n-----------------------*/\n.ui.celled.grid {\n  display: table;\n  width: 100%;\n  margin-left: 0% !important;\n  margin-right: 0% !important;\n  -webkit-box-shadow: 0px 0px 0px 1px #DFDFDF;\n  box-shadow: 0px 0px 0px 1px #DFDFDF; }\n\n.ui.celled.grid > .row, .ui.celled.grid > .column.row, .ui.celled.grid > .column.row:first-child {\n  display: table;\n  width: 100%;\n  margin-top: 0em;\n  padding-top: 0em;\n  -webkit-box-shadow: 0px -1px 0px 0px #dfdfdf;\n  box-shadow: 0px -1px 0px 0px #dfdfdf; }\n\n.ui.celled.grid > .column:not(.row), .ui.celled.grid > .row > .column {\n  display: table-cell;\n  padding: 0.75em;\n  -webkit-box-shadow: -1px 0px 0px 0px #dfdfdf;\n  box-shadow: -1px 0px 0px 0px #dfdfdf; }\n\n.ui.celled.grid > .column:first-child, .ui.celled.grid > .row > .column:first-child {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.celled.page.grid {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*----------------------\n  Horizontally Centered\n-----------------------*/\n/* Vertical Centered */\n.ui.left.aligned.grid, .ui.left.aligned.grid > .row > .column, .ui.left.aligned.grid > .column, .ui.grid .left.aligned.column, .ui.grid > .left.aligned.row > .column {\n  text-align: left; }\n\n.ui.center.aligned.grid, .ui.center.aligned.grid > .row > .column, .ui.center.aligned.grid > .column, .ui.grid .center.aligned.column, .ui.grid > .center.aligned.row > .column {\n  text-align: center; }\n\n.ui.right.aligned.grid, .ui.right.aligned.grid > .row > .column, .ui.right.aligned.grid > .column, .ui.grid .right.aligned.column, .ui.grid > .right.aligned.row > .column {\n  text-align: right; }\n\n.ui.justified.grid, .ui.justified.grid > .row > .column, .ui.justified.grid > .column, .ui.grid .justified.column, .ui.grid > .justified.row > .column {\n  text-align: justify;\n  -webkit-hyphens: auto;\n  -moz-hyphens: auto;\n  -ms-hyphens: auto;\n  hyphens: auto; }\n\n/*----------------------\n  Vertically Centered\n-----------------------*/\n/* Vertical Centered */\n.ui.top.aligned.grid, .ui.top.aligned.grid > .row > .column, .ui.top.aligned.grid > .column, .ui.grid .top.aligned.column, .ui.grid > .top.aligned.row > .column {\n  vertical-align: top; }\n\n.ui.middle.aligned.grid, .ui.middle.aligned.grid > .row > .column, .ui.middle.aligned.grid > .column, .ui.grid .middle.aligned.column, .ui.grid > .middle.aligned.row > .column {\n  vertical-align: middle; }\n\n.ui.bottom.aligned.grid, .ui.bottom.aligned.grid > .row > .column, .ui.bottom.aligned.grid > .column, .ui.grid .bottom.aligned.column, .ui.grid > .bottom.aligned.row > .column {\n  vertical-align: bottom; }\n\n/*----------------------\n  Equal Height Columns\n-----------------------*/\n.ui.grid > .equal.height.row {\n  display: table;\n  width: 100%; }\n\n.ui.grid > .equal.height.row > .column {\n  display: table-cell; }\n\n/*----------------------\n     Only (Device)\n-----------------------*/\n/* Mobile Only Hide */\n@media only screen and (max-width: 767px) {\n  .ui.tablet:not(.mobile).only.grid, .ui.grid > .tablet:not(.mobile).only.row, .ui.grid > .tablet:not(.mobile).only.column, .ui.grid > .row > .tablet:not(.mobile).only.column {\n    display: none !important; }\n  .ui.computer:not(.mobile).only.grid, .ui.grid > .computer:not(.mobile).only.row, .ui.grid > .computer:not(.mobile).only.column, .ui.grid > .row > .computer:not(.mobile).only.column {\n    display: none !important; } }\n\n/* Tablet Only Hide */\n@media only screen and (min-width: 768px) and (max-width: 991px) {\n  .ui.mobile:not(.tablet).only.grid, .ui.grid > .mobile:not(.tablet).only.row, .ui.grid > .mobile:not(.tablet).only.column, .ui.grid > .row > .mobile:not(.tablet).only.column {\n    display: none !important; }\n  .ui.computer:not(.tablet).only.grid, .ui.grid > .computer:not(.tablet).only.row, .ui.grid > .computer:not(.tablet).only.column, .ui.grid > .row > .computer:not(.tablet).only.column {\n    display: none !important; } }\n\n/* Computer Only Hide */\n@media only screen and (min-width: 992px) {\n  .ui.mobile:not(.computer).only.grid, .ui.grid > .mobile:not(.computer).only.row, .ui.grid > .mobile:not(.computer).only.column, .ui.grid > .row > .mobile:not(.computer).only.column {\n    display: none !important; }\n  .ui.tablet:not(.computer).only.grid, .ui.grid > .tablet:not(.computer).only.row, .ui.grid > .tablet:not(.computer).only.column, .ui.grid > .row > .tablet:not(.computer).only.column {\n    display: none !important; } }\n\n/*-------------------\n      Doubling\n--------------------*/\n/* Mobily Only */\n@media only screen and (max-width: 767px) {\n  .ui.two.column.doubling.grid > .row > .column, .ui.two.column.doubling.grid > .column, .ui.grid > .two.column.doubling.row > .column {\n    width: 100%; }\n  .ui.three.column.doubling.grid > .row > .column, .ui.three.column.doubling.grid > .column, .ui.grid > .three.column.doubling.row > .column {\n    width: 100%; }\n  .ui.four.column.doubling.grid > .row > .column, .ui.four.column.doubling.grid > .column, .ui.grid > .four.column.doubling.row > .column {\n    width: 100%; }\n  .ui.five.column.doubling.grid > .row > .column, .ui.five.column.doubling.grid > .column, .ui.grid > .five.column.doubling.row > .column {\n    width: 100%; }\n  .ui.six.column.doubling.grid > .row > .column, .ui.six.column.doubling.grid > .column, .ui.grid > .six.column.doubling.row > .column {\n    width: 50%; }\n  .ui.seven.column.doubling.grid > .row > .column, .ui.seven.column.doubling.grid > .column, .ui.grid > .seven.column.doubling.row > .column {\n    width: 50%; }\n  .ui.eight.column.doubling.grid > .row > .column, .ui.eight.column.doubling.grid > .column, .ui.grid > .eight.column.doubling.row > .column {\n    width: 50%; }\n  .ui.nine.column.doubling.grid > .row > .column, .ui.nine.column.doubling.grid > .column, .ui.grid > .nine.column.doubling.row > .column {\n    width: 50%; }\n  .ui.ten.column.doubling.grid > .row > .column, .ui.ten.column.doubling.grid > .column, .ui.grid > .ten.column.doubling.row > .column {\n    width: 50%; }\n  .ui.twelve.column.doubling.grid > .row > .column, .ui.twelve.column.doubling.grid > .column, .ui.grid > .twelve.column.doubling.row > .column {\n    width: 33.33333%; }\n  .ui.fourteen.column.doubling.grid > .row > .column, .ui.fourteen.column.doubling.grid > .column, .ui.grid > .fourteen.column.doubling.row > .column {\n    width: 33.33333%; }\n  .ui.sixteen.column.doubling.grid > .row > .column, .ui.sixteen.column.doubling.grid > .column, .ui.grid > .sixteen.column.doubling.row > .column {\n    width: 25%; } }\n\n/* Tablet Only */\n@media only screen and (min-width: 768px) and (max-width: 991px) {\n  .ui.two.column.doubling.grid > .row > .column, .ui.two.column.doubling.grid > .column, .ui.grid > .two.column.doubling.row > .column {\n    width: 100%; }\n  .ui.three.column.doubling.grid > .row > .column, .ui.three.column.doubling.grid > .column, .ui.grid > .three.column.doubling.row > .column {\n    width: 50%; }\n  .ui.four.column.doubling.grid > .row > .column, .ui.four.column.doubling.grid > .column, .ui.grid > .four.column.doubling.row > .column {\n    width: 50%; }\n  .ui.five.column.doubling.grid > .row > .column, .ui.five.column.doubling.grid > .column, .ui.grid > .five.column.doubling.row > .column {\n    width: 33.33333%; }\n  .ui.six.column.doubling.grid > .row > .column, .ui.six.column.doubling.grid > .column, .ui.grid > .six.column.doubling.row > .column {\n    width: 33.33333%; }\n  .ui.eight.column.doubling.grid > .row > .column, .ui.eight.column.doubling.grid > .column, .ui.grid > .eight.column.doubling.row > .column {\n    width: 33.33333%; }\n  .ui.eight.column.doubling.grid > .row > .column, .ui.eight.column.doubling.grid > .column, .ui.grid > .eight.column.doubling.row > .column {\n    width: 25%; }\n  .ui.nine.column.doubling.grid > .row > .column, .ui.nine.column.doubling.grid > .column, .ui.grid > .nine.column.doubling.row > .column {\n    width: 25%; }\n  .ui.ten.column.doubling.grid > .row > .column, .ui.ten.column.doubling.grid > .column, .ui.grid > .ten.column.doubling.row > .column {\n    width: 20%; }\n  .ui.twelve.column.doubling.grid > .row > .column, .ui.twelve.column.doubling.grid > .column, .ui.grid > .twelve.column.doubling.row > .column {\n    width: 16.66667%; }\n  .ui.fourteen.column.doubling.grid > .row > .column, .ui.fourteen.column.doubling.grid > .column, .ui.grid > .fourteen.column.doubling.row > .column {\n    width: 14.28571%; }\n  .ui.sixteen.column.doubling.grid > .row > .column, .ui.sixteen.column.doubling.grid > .column, .ui.grid > .sixteen.column.doubling.row > .column {\n    width: 12.5%; } }\n\n/*-------------------\n      Stackable\n--------------------*/\n@media only screen and (max-width: 767px) {\n  /* Remove pointers from vertical menus */\n  .ui.stackable.grid {\n    display: block !important;\n    padding: 0em;\n    margin: 0em; }\n  .ui.stackable.grid > .row > .column, .ui.stackable.grid > .column {\n    display: block !important;\n    width: auto !important;\n    margin: 1em 0em 0em !important;\n    padding: 1em 0em 0em !important;\n    -webkit-box-shadow: none !important;\n    box-shadow: none !important; }\n  .ui.stackable.divided.grid .column, .ui.stackable.celled.grid .column {\n    border-top: 1px dotted rgba(0, 0, 0, 0.1); }\n  .ui.stackable.grid > .row:first-child > .column:first-child, .ui.stackable.grid > .column:first-child {\n    margin-top: 0em !important;\n    padding-top: 0em !important; }\n  .ui.stackable.divided.grid > .row:first-child > .column:first-child, .ui.stackable.celled.grid > .row:first-child > .column:first-child, .ui.stackable.divided.grid > .column:first-child, .ui.stackable.celled.grid > .column:first-child {\n    border-top: none !important; }\n  .ui.stackable.page.grid > .row > .column, .ui.stackable.page.grid > .column {\n    padding-left: 1em !important;\n    padding-right: 1em !important; }\n  .ui.stackable.grid .vertical.pointing.menu .item:after {\n    display: none; } }\n\n/*\n * # Semantic - Menu\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Standard\n*******************************/\n/*--------------\n      Menu\n---------------*/\n.ui.menu {\n  margin: 1rem 0rem;\n  background-color: #FFFFFF;\n  font-size: 0px;\n  font-weight: normal;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  border-radius: 0.1875rem; }\n\n.ui.menu:first-child {\n  margin-top: 0rem; }\n\n.ui.menu:last-child {\n  margin-bottom: 0rem; }\n\n.ui.menu:after {\n  content: \".\";\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden; }\n\n.ui.menu > .item:first-child {\n  border-radius: 0.1875em 0px 0px 0.1875em; }\n\n.ui.menu > .item:last-child {\n  border-radius: 0px 0.1875em 0.1875em 0px; }\n\n.ui.menu .item {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  vertical-align: middle;\n  line-height: 1;\n  text-decoration: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-transition: opacity 0.2s ease, background 0.2s ease, -webkit-box-shadow 0.2s ease;\n  -moz-transition: opacity 0.2s ease, background 0.2s ease, box-shadow 0.2s ease;\n  transition: opacity 0.2s ease, background 0.2s ease, box-shadow 0.2s ease; }\n\n/*--------------\n    Colors\n---------------*/\n/* Text Color */\n.ui.menu .item, .ui.menu .item > a:not(.button) {\n  color: rgba(0, 0, 0, 0.75); }\n\n.ui.menu .item .item, .ui.menu .item .item > a:not(.button) {\n  color: rgba(30, 30, 30, 0.7); }\n\n.ui.menu .item .item .item, .ui.menu .item .item .item > a:not(.button) {\n  color: rgba(30, 30, 30, 0.6); }\n\n.ui.menu .dropdown .menu .item, .ui.menu .dropdown .menu .item a:not(.button) {\n  color: rgba(0, 0, 0, 0.75); }\n\n/* Hover */\n.ui.menu .item .menu a.item:hover, .ui.menu .item .menu .link.item:hover {\n  color: rgba(0, 0, 0, 0.85); }\n\n.ui.menu .dropdown .menu .item a:not(.button):hover {\n  color: rgba(0, 0, 0, 0.85); }\n\n/* Active */\n.ui.menu .active.item, .ui.menu .active.item a:not(.button) {\n  color: rgba(0, 0, 0, 0.85);\n  border-radius: 0px; }\n\n/*--------------\n      Items\n---------------*/\n.ui.menu .item {\n  position: relative;\n  display: inline-block;\n  padding: 0.83em 0.95em;\n  border-top: 0em solid rgba(0, 0, 0, 0);\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -moz-user-select: -moz-none;\n  -khtml-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.ui.menu .menu {\n  margin: 0em; }\n\n.ui.menu .item.left, .ui.menu .menu.left {\n  float: left; }\n\n.ui.menu .item.right, .ui.menu .menu.right {\n  float: right; }\n\n/*--------------\n    Borders\n---------------*/\n.ui.menu .item:before {\n  position: absolute;\n  content: '';\n  top: 0%;\n  left: 0px;\n  width: 1px;\n  height: 100%;\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.05)), color-stop(50%, rgba(0, 0, 0, 0.1)), to(rgba(0, 0, 0, 0.05)));\n  background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.05) 100%);\n  background-image: -moz-linear-gradient(rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.05) 100%);\n  background-image: linear-gradient(rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.05) 100%); }\n\n/*rtl:ignore*/\n.ui.menu > .menu:not(.right):first-child > .item:first-child:before, .ui.menu .item:first-child:before {\n  display: none; }\n\n.ui.menu .menu.right .item:before, .ui.menu .item.right:before {\n  right: auto;\n  left: 0px; }\n\n/*--------------\n  Text Content\n---------------*/\n.ui.menu .text.item > *, .ui.menu .item > p:only-child {\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text;\n  line-height: 1.3;\n  color: rgba(0, 0, 0, 0.6); }\n\n.ui.menu .item > p:first-child {\n  margin-top: 0px; }\n\n.ui.menu .item > p:last-child {\n  margin-bottom: 0px; }\n\n/*--------------\n     Button\n---------------*/\n.ui.menu:not(.vertical) .item > .button {\n  position: relative;\n  top: -0.05em;\n  margin: -0.55em 0;\n  padding-bottom: 0.55em;\n  padding-top: 0.55em;\n  font-size: 0.875em; }\n\n/*--------------\n     Inputs\n---------------*/\n.ui.menu:not(.vertical) .item > .input {\n  margin-top: -0.85em;\n  margin-bottom: -0.85em;\n  padding-top: 0.3em;\n  padding-bottom: 0.3em;\n  width: 100%;\n  vertical-align: top; }\n\n.ui.menu .item > .input input {\n  padding-top: 0.35em;\n  padding-bottom: 0.35em; }\n\n.ui.vertical.menu .item > .input input {\n  margin: 0em;\n  padding-top: 0.63em;\n  padding-bottom: 0.63em; }\n\n/* Action Input */\n.ui.menu:not(.vertical) .item > .button.labeled > .icon {\n  padding-top: 0.6em; }\n\n.ui.menu:not(.vertical) .item .action.input > .button {\n  font-size: 0.8em;\n  padding: 0.55em 0.8em; }\n\n/* Resizes */\n.ui.small.menu:not(.vertical) .item > .input input {\n  padding-top: 0.4em;\n  padding-bottom: 0.4em; }\n\n.ui.large.menu:not(.vertical) .item > .input input {\n  top: -0.125em;\n  padding-bottom: 0.6em;\n  padding-top: 0.6em; }\n\n.ui.large.menu:not(.vertical) .item .action.input > .button {\n  font-size: 0.8em;\n  padding: 0.9em; }\n\n.ui.large.menu:not(.vertical) .item .action.input > .button > .icon {\n  padding-top: 0.8em; }\n\n/*--------------\n     Header\n---------------*/\n.ui.menu .header.item {\n  background-color: rgba(0, 0, 0, 0.04);\n  margin: 0em; }\n\n.ui.vertical.menu .header.item {\n  font-weight: bold; }\n\n/*--------------\n    Dropdowns\n---------------*/\n.ui.menu .dropdown .menu .item .icon {\n  float: none;\n  margin: 0em 0.75em 0em 0em; }\n\n.ui.menu .dropdown.item .menu {\n  left: 1px;\n  margin: 0px;\n  min-width: -webkit-calc(99%);\n  min-width: -moz-calc(99%);\n  min-width: calc(99%);\n  -webkit-box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.secondary.menu .dropdown.item .menu {\n  left: 0px;\n  min-width: 100%; }\n\n.ui.menu .pointing.dropdown.item .menu {\n  margin-top: 0.75em; }\n\n.ui.menu .simple.dropdown.item .menu {\n  margin: 0px !important; }\n\n.ui.menu .dropdown.item .menu .item {\n  width: 100%;\n  color: rgba(0, 0, 0, 0.75); }\n\n.ui.menu .dropdown.item .menu .active.item {\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n.ui.menu .ui.dropdown .menu .item:before {\n  display: none; }\n\n/*--------------\n     Labels\n---------------*/\n.ui.menu .item > .label {\n  background-color: rgba(0, 0, 0, 0.35);\n  color: #FFFFFF;\n  margin: -0.15em 0em -0.15em 0.5em;\n  padding: 0.3em 0.8em;\n  vertical-align: baseline; }\n\n.ui.menu .item > .floating.label {\n  padding: 0.3em 0.8em; }\n\n/*--------------\n      Images\n---------------*/\n.ui.menu .item > img:only-child {\n  display: block;\n  max-width: 100%;\n  margin: 0em auto; }\n\n/*******************************\n             States\n*******************************/\n/*--------------\n      Hover\n---------------*/\n.ui.link.menu .item:hover, .ui.menu .link.item:hover, .ui.menu a.item:hover, .ui.menu .ui.dropdown .menu .item:hover {\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.02); }\n\n.ui.menu .ui.dropdown.item.active {\n  background-color: rgba(0, 0, 0, 0.02);\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -moz-border-bottom-right-radius: 0em;\n  border-bottom-right-radius: 0em;\n  -moz-border-bottom-left-radius: 0em;\n  border-bottom-left-radius: 0em; }\n\n/*--------------\n      Down\n---------------*/\n.ui.link.menu .item:active, .ui.menu .link.item:active, .ui.menu a.item:active, .ui.menu .ui.dropdown .menu .item:active {\n  background-color: rgba(0, 0, 0, 0.05); }\n\n/*--------------\n     Active\n---------------*/\n.ui.menu .active.item {\n  background-color: rgba(0, 0, 0, 0.01);\n  color: rgba(0, 0, 0, 0.95);\n  -webkit-box-shadow: 0em 0.2em 0em inset;\n  box-shadow: 0em 0.2em 0em inset; }\n\n.ui.vertical.menu .active.item {\n  border-radius: 0em;\n  -webkit-box-shadow: 0.2em 0em 0em inset;\n  box-shadow: 0.2em 0em 0em inset; }\n\n.ui.vertical.menu > .active.item:first-child {\n  border-radius: 0em 0.1875em 0em 0em; }\n\n.ui.vertical.menu > .active.item:last-child {\n  border-radius: 0em 0em 0.1875em 0em; }\n\n.ui.vertical.menu > .active.item:only-child {\n  border-radius: 0em 0.1875em 0.1875em 0em; }\n\n.ui.vertical.menu .active.item .menu .active.item {\n  border-left: none; }\n\n.ui.vertical.menu .active.item .menu .active.item {\n  padding-left: 1.5rem; }\n\n.ui.vertical.menu .item .menu .active.item {\n  background-color: rgba(0, 0, 0, 0.03);\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*--------------\n     Disabled\n---------------*/\n.ui.menu .item.disabled, .ui.menu .item.disabled:hover {\n  cursor: default;\n  color: rgba(0, 0, 0, 0.2);\n  background-color: transparent !important; }\n\n/*--------------------\n     Loading\n---------------------*/\n/* On Form */\n.ui.menu.loading {\n  position: relative; }\n\n.ui.menu.loading:after {\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  content: '';\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8) url("+__webpack_require__(168)+") no-repeat 50% 50%;\n  visibility: visible; }\n\n/*******************************\n             Types\n*******************************/\n/*--------------\n    Vertical\n---------------*/\n.ui.vertical.menu .item {\n  display: block;\n  height: auto !important;\n  border-top: none;\n  border-left: 0em solid rgba(0, 0, 0, 0);\n  border-right: none; }\n\n.ui.vertical.menu > .item:first-child {\n  border-radius: 0.1875em 0.1875em 0px 0px; }\n\n.ui.vertical.menu > .item:last-child {\n  border-radius: 0px 0px 0.1875em 0.1875em; }\n\n.ui.vertical.menu .item > .label {\n  float: right;\n  text-align: center; }\n\n.ui.vertical.menu .item > i.icon {\n  float: right;\n  width: 1.22em;\n  margin: 0em 0em 0em 0.5em; }\n\n.ui.vertical.menu .item > .label + i.icon {\n  float: none;\n  margin: 0em 0.25em 0em 0em; }\n\n/*--- Border ---*/\n.ui.vertical.menu .item:before {\n  position: absolute;\n  content: '';\n  top: 0%;\n  left: 0px;\n  width: 100%;\n  height: 1px;\n  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.03) 0%, rgba(0, 0, 0, 0.1) 1.5em, rgba(0, 0, 0, 0.03) 100%);\n  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0.03) 0%, rgba(0, 0, 0, 0.1) 1.5em, rgba(0, 0, 0, 0.03) 100%);\n  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.03)), color-stop(1.5em, rgba(0, 0, 0, 0.1)), to(rgba(0, 0, 0, 0.03)));\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.03) 0%, rgba(0, 0, 0, 0.1) 1.5em, rgba(0, 0, 0, 0.03) 100%); }\n\n.ui.vertical.menu .item:first-child:before {\n  background-image: none !important; }\n\n/*--- Dropdown ---*/\n.ui.vertical.menu .dropdown.item > i {\n  float: right;\n  content: \"\\f0da\"; }\n\n.ui.vertical.menu .dropdown.item .menu {\n  top: 0% !important;\n  left: 100%;\n  margin: 0px 0px 0px 1px;\n  -webkit-box-shadow: 0 0px 1px 1px #DDDDDD;\n  box-shadow: 0 0px 1px 1px #DDDDDD; }\n\n.ui.vertical.menu .dropdown.item.active {\n  border-top-right-radius: 0em;\n  border-bottom-right-radius: 0em; }\n\n.ui.vertical.menu .dropdown.item .menu .item {\n  font-size: 1rem; }\n\n.ui.vertical.menu .dropdown.item .menu .item i.icon {\n  margin-right: 0em; }\n\n.ui.vertical.menu .dropdown.item.active {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*--- Sub Menu ---*/\n.ui.vertical.menu .item > .menu {\n  margin: 0.5em -0.95em 0em; }\n\n.ui.vertical.menu .item > .menu > .item {\n  padding: 0.5rem 1.5rem;\n  font-size: 0.875em; }\n\n.ui.vertical.menu .item > .menu > .item:before {\n  display: none; }\n\n/*--------------\n     Tiered\n---------------*/\n.ui.tiered.menu > .sub.menu > .item {\n  color: rgba(0, 0, 0, 0.4); }\n\n.ui.tiered.menu > .menu > .item:hover {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.tiered.menu .item.active {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.tiered.menu > .menu .item.active:after {\n  position: absolute;\n  content: '';\n  margin-top: -1px;\n  top: 100%;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: #FBFBFB; }\n\n.ui.tiered.menu .sub.menu {\n  background-color: rgba(0, 0, 0, 0.01);\n  border-radius: 0em;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  color: #FFFFFF; }\n\n.ui.tiered.menu .sub.menu .item {\n  font-size: 0.875rem; }\n\n.ui.tiered.menu .sub.menu .item:before {\n  background-image: none; }\n\n.ui.tiered.menu .sub.menu .active.item {\n  padding-top: 0.83em;\n  background-color: transparent;\n  border-radius: 0 0 0 0;\n  border-top: medium none;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  color: rgba(0, 0, 0, 0.7) !important; }\n\n.ui.tiered.menu .sub.menu .active.item:after {\n  display: none; }\n\n/* Inverted */\n.ui.inverted.tiered.menu > .menu > .item {\n  color: rgba(255, 255, 255, 0.5); }\n\n.ui.inverted.tiered.menu .sub.menu {\n  background-color: rgba(0, 0, 0, 0.2); }\n\n.ui.inverted.tiered.menu .sub.menu .item {\n  color: rgba(255, 255, 255, 0.6); }\n\n.ui.inverted.tiered.menu > .menu > .item:hover {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.inverted.tiered.menu .active.item:after {\n  display: none; }\n\n.ui.inverted.tiered.menu > .sub.menu > .active.item, .ui.inverted.tiered.menu > .menu > .active.item {\n  color: #ffffff !important;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/* Tiered pointing */\n.ui.pointing.tiered.menu > .menu > .item:after {\n  display: none; }\n\n.ui.pointing.tiered.menu > .sub.menu > .item:after {\n  display: block; }\n\n/*--------------\n     Tabular\n---------------*/\n.ui.tabular.menu {\n  background-color: transparent;\n  border-bottom: 1px solid #DCDDDE;\n  border-radius: 0em;\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n.ui.tabular.menu .item {\n  background-color: transparent;\n  border-left: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-top: 1px solid transparent;\n  padding-left: 1.4em;\n  padding-right: 1.4em;\n  color: rgba(0, 0, 0, 0.6); }\n\n.ui.tabular.menu .item:before {\n  display: none; }\n\n/* Hover */\n.ui.tabular.menu .item:hover {\n  background-color: transparent;\n  color: rgba(0, 0, 0, 0.8); }\n\n/* Active */\n.ui.tabular.menu .active.item {\n  position: relative;\n  background-color: #FFFFFF;\n  color: rgba(0, 0, 0, 0.8);\n  border-color: #DCDDDE;\n  font-weight: bold;\n  margin-bottom: -1px;\n  border-bottom: 1px solid #FFFFFF;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  border-radius: 5px 5px 0 0; }\n\n/* Coupling with segment for attachment */\n.ui.attached.tabular.menu {\n  position: relative;\n  z-index: 2; }\n\n.ui.tabular.menu ~ .bottom.attached.segment {\n  margin: 1px 0px 0px 1px; }\n\n/*--------------\n   Pagination\n---------------*/\n.ui.pagination.menu {\n  margin: 0em;\n  display: inline-block;\n  vertical-align: middle; }\n\n.ui.pagination.menu .item {\n  min-width: 3em;\n  text-align: center; }\n\n.ui.pagination.menu .icon.item i.icon {\n  vertical-align: top; }\n\n.ui.pagination.menu.floated {\n  display: block; }\n\n/* active */\n.ui.pagination.menu .active.item {\n  border-top: none;\n  padding-top: 0.83em;\n  background-color: rgba(0, 0, 0, 0.05);\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*--------------\n   Secondary\n---------------*/\n.ui.secondary.menu {\n  background-color: transparent;\n  border-radius: 0px;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.secondary.menu > .menu > .item, .ui.secondary.menu > .item {\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  border: none;\n  height: auto !important;\n  margin: 0em 0.25em;\n  padding: 0.5em 1em;\n  border-radius: 0.3125em; }\n\n.ui.secondary.menu > .menu > .item:before, .ui.secondary.menu > .item:before {\n  display: none !important; }\n\n.ui.secondary.menu .item > .input input {\n  background-color: transparent;\n  border: none; }\n\n.ui.secondary.menu .link.item, .ui.secondary.menu a.item {\n  opacity: 0.8;\n  -webkit-transition: none;\n  -moz-transition: none;\n  transition: none; }\n\n.ui.secondary.menu .header.item {\n  border-right: 0.1em solid rgba(0, 0, 0, 0.1);\n  background-color: transparent;\n  border-radius: 0em; }\n\n/* hover */\n.ui.secondary.menu .link.item:hover, .ui.secondary.menu a.item:hover {\n  opacity: 1; }\n\n/* active */\n.ui.secondary.menu > .menu > .active.item, .ui.secondary.menu > .active.item {\n  background-color: rgba(0, 0, 0, 0.08);\n  opacity: 1;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.secondary.vertical.menu > .active.item {\n  border-radius: 0.3125em; }\n\n/* inverted */\n.ui.secondary.inverted.menu .link.item, .ui.secondary.inverted.menu a.item {\n  color: rgba(255, 255, 255, 0.5); }\n\n.ui.secondary.inverted.menu .link.item:hover, .ui.secondary.inverted.menu a.item:hover {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.secondary.inverted.menu .active.item {\n  background-color: rgba(255, 255, 255, 0.1); }\n\n/* disable variations */\n.ui.secondary.item.menu > .item {\n  margin: 0em; }\n\n.ui.secondary.attached.menu {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*---------------------\n   Secondary Pointing\n-----------------------*/\n.ui.secondary.pointing.menu {\n  border-bottom: 3px solid rgba(0, 0, 0, 0.1); }\n\n.ui.secondary.pointing.menu > .menu > .item, .ui.secondary.pointing.menu > .item {\n  margin: 0em 0em -3px;\n  padding: 0.6em 0.95em;\n  border-bottom: 3px solid rgba(0, 0, 0, 0);\n  border-radius: 0em;\n  -webkit-transition: color 0.2s;\n  -moz-transition: color 0.2s;\n  transition: color 0.2s; }\n\n/* Item Types */\n.ui.secondary.pointing.menu .header.item {\n  margin-bottom: -3px;\n  background-color: transparent !important;\n  border-right-width: 0px !important;\n  font-weight: bold !important;\n  color: rgba(0, 0, 0, 0.8) !important; }\n\n.ui.secondary.pointing.menu .text.item {\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n.ui.secondary.pointing.menu > .menu > .item:after, .ui.secondary.pointing.menu > .item:after {\n  display: none; }\n\n/* Hover */\n.ui.secondary.pointing.menu > .menu > .link.item:hover, .ui.secondary.pointing.menu > .link.item:hover, .ui.secondary.pointing.menu > .menu > a.item:hover, .ui.secondary.pointing.menu > a.item:hover {\n  background-color: transparent;\n  color: rgba(0, 0, 0, 0.7); }\n\n/* Down */\n.ui.secondary.pointing.menu > .menu > .link.item:active, .ui.secondary.pointing.menu > .link.item:active, .ui.secondary.pointing.menu > .menu > a.item:active, .ui.secondary.pointing.menu > a.item:active {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.2); }\n\n/* Active */\n.ui.secondary.pointing.menu > .menu > .item.active, .ui.secondary.pointing.menu > .item.active {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.4);\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*---------------------\n   Secondary Vertical\n-----------------------*/\n.ui.secondary.vertical.pointing.menu {\n  border: none;\n  border-right: 3px solid rgba(0, 0, 0, 0.1); }\n\n.ui.secondary.vertical.menu > .item {\n  border: none;\n  margin: 0em 0em 0.3em;\n  padding: 0.6em 0.8em;\n  border-radius: 0.1875em; }\n\n.ui.secondary.vertical.menu > .header.item {\n  border-radius: 0em; }\n\n.ui.secondary.vertical.pointing.menu > .item {\n  margin: 0em -3px 0em 0em;\n  border-bottom: none;\n  border-right: 3px solid transparent;\n  border-radius: 0em; }\n\n/* Hover */\n.ui.secondary.vertical.pointing.menu > .item:hover {\n  background-color: transparent;\n  color: rgba(0, 0, 0, 0.7); }\n\n/* Down */\n.ui.secondary.vertical.pointing.menu > .item:active {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.2); }\n\n/* Active */\n.ui.secondary.vertical.pointing.menu > .item.active {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.4);\n  color: rgba(0, 0, 0, 0.85); }\n\n/*--------------\n    Inverted\n---------------*/\n.ui.secondary.inverted.menu {\n  background-color: transparent; }\n\n.ui.secondary.inverted.pointing.menu {\n  border-bottom: 3px solid rgba(255, 255, 255, 0.1); }\n\n.ui.secondary.inverted.pointing.menu > .item {\n  color: rgba(255, 255, 255, 0.7); }\n\n.ui.secondary.inverted.pointing.menu > .header.item {\n  color: #FFFFFF !important; }\n\n/* Hover */\n.ui.secondary.inverted.pointing.menu > .menu > .item:hover, .ui.secondary.inverted.pointing.menu > .item:hover {\n  color: rgba(255, 255, 255, 0.85); }\n\n/* Down */\n.ui.secondary.inverted.pointing.menu > .menu > .item:active, .ui.secondary.inverted.pointing.menu > .item:active {\n  border-color: rgba(255, 255, 255, 0.4); }\n\n/* Active */\n.ui.secondary.inverted.pointing.menu > .menu > .item.active, .ui.secondary.inverted.pointing.menu > .item.active {\n  border-color: rgba(255, 255, 255, 0.8);\n  color: #ffffff; }\n\n/*---------------------\n   Inverted Vertical\n----------------------*/\n.ui.secondary.inverted.vertical.pointing.menu {\n  border-right: 3px solid rgba(255, 255, 255, 0.1);\n  border-bottom: none; }\n\n/*--------------\n    Text Menu\n---------------*/\n.ui.text.menu {\n  background-color: transparent;\n  margin: 1rem -1rem;\n  border-radius: 0px;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.text.menu > .item {\n  opacity: 0.8;\n  margin: 0em 1em;\n  padding: 0em;\n  height: auto !important;\n  border-radius: 0px;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-transition: opacity 0.2s ease;\n  -moz-transition: opacity 0.2s ease;\n  transition: opacity 0.2s ease; }\n\n.ui.text.menu > .item:before {\n  display: none !important; }\n\n.ui.text.menu .header.item {\n  background-color: transparent;\n  opacity: 1;\n  color: rgba(50, 50, 50, 0.8);\n  font-size: 0.875rem;\n  padding: 0em;\n  text-transform: uppercase;\n  font-weight: bold; }\n\n/*--- fluid text ---*/\n.ui.text.item.menu .item {\n  margin: 0em; }\n\n/*--- vertical text ---*/\n.ui.vertical.text.menu {\n  margin: 1rem 0em; }\n\n.ui.vertical.text.menu:first-child {\n  margin-top: 0rem; }\n\n.ui.vertical.text.menu:last-child {\n  margin-bottom: 0rem; }\n\n.ui.vertical.text.menu .item {\n  float: left;\n  clear: left;\n  margin: 0.5em 0em; }\n\n.ui.vertical.text.menu .item > i.icon {\n  float: none;\n  margin: 0em 0.83em 0em 0em; }\n\n.ui.vertical.text.menu .header.item {\n  margin: 0.8em 0em; }\n\n/*--- hover ---*/\n.ui.text.menu .item:hover {\n  opacity: 1;\n  background-color: transparent; }\n\n/*--- active ---*/\n.ui.text.menu .active.item {\n  background-color: transparent;\n  padding: 0em;\n  border: none;\n  opacity: 1;\n  font-weight: bold;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/* disable variations */\n.ui.text.pointing.menu .active.item:after {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.text.attached.menu {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.text.menu, .ui.inverted.text.menu .item, .ui.inverted.text.menu .item:hover, .ui.inverted.text.menu .item.active {\n  background-color: transparent; }\n\n/*--------------\n    Icon Only\n---------------*/\n.ui.icon.menu, .ui.vertical.icon.menu {\n  width: auto;\n  display: inline-block;\n  height: auto; }\n\n.ui.icon.menu > .item {\n  height: auto;\n  text-align: center;\n  color: rgba(60, 60, 60, 0.7); }\n\n.ui.icon.menu > .item > .icon {\n  display: block;\n  float: none !important;\n  opacity: 1;\n  margin: 0em auto !important; }\n\n.ui.icon.menu .icon:before {\n  opacity: 1; }\n\n/* Item Icon Only */\n.ui.menu .icon.item .icon {\n  margin: 0em; }\n\n.ui.vertical.icon.menu {\n  float: none; }\n\n/*--- inverted ---*/\n.ui.inverted.icon.menu .item {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.icon.menu .icon {\n  color: #ffffff; }\n\n/*--------------\n   Labeled Icon\n---------------*/\n.ui.labeled.icon.menu {\n  text-align: center; }\n\n.ui.labeled.icon.menu > .item > .icon {\n  display: block;\n  font-size: 1.5em !important;\n  margin: 0em auto 0.3em !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n    Colors\n---------------*/\n/*--- Light Colors  ---*/\n.ui.menu .green.active.item, .ui.green.menu .active.item {\n  border-color: #A1CF64 !important;\n  color: #A1CF64 !important; }\n\n.ui.menu .red.active.item, .ui.red.menu .active.item {\n  border-color: #D95C5C !important;\n  color: #D95C5C !important; }\n\n.ui.menu .blue.active.item, .ui.blue.menu .active.item {\n  border-color: #6ECFF5 !important;\n  color: #6ECFF5 !important; }\n\n.ui.menu .purple.active.item, .ui.purple.menu .active.item {\n  border-color: #564F8A !important;\n  color: #564F8A !important; }\n\n.ui.menu .orange.active.item, .ui.orange.menu .active.item {\n  border-color: #F05940 !important;\n  color: #F05940 !important; }\n\n.ui.menu .teal.active.item, .ui.teal.menu .active.item {\n  border-color: #00B5AD !important;\n  color: #00B5AD !important; }\n\n/*--------------\n    Inverted\n---------------*/\n.ui.inverted.menu {\n  background-color: #333333;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.menu .header.item {\n  margin: 0em;\n  background-color: rgba(0, 0, 0, 0.3);\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.menu .item, .ui.inverted.menu .item > a {\n  color: #FFFFFF; }\n\n.ui.inverted.menu .item .item, .ui.inverted.menu .item .item > a {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.menu .dropdown .menu .item, .ui.inverted.menu .dropdown .menu .item a {\n  color: rgba(0, 0, 0, 0.75) !important; }\n\n.ui.inverted.menu .item.disabled, .ui.inverted.menu .item.disabled:hover {\n  color: rgba(255, 255, 255, 0.2); }\n\n/*--- Border ---*/\n.ui.inverted.menu .item:before {\n  background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%);\n  background-image: -moz-linear-gradient(rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%);\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0.03)), color-stop(50%, rgba(255, 255, 255, 0.1)), to(rgba(255, 255, 255, 0.03)));\n  background-image: linear-gradient(rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%); }\n\n.ui.vertical.inverted.menu .item:before {\n  background-image: -webkit-linear-gradient(left, rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%);\n  background-image: -moz-linear-gradient(left, rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%);\n  background-image: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0.03)), color-stop(50%, rgba(255, 255, 255, 0.1)), to(rgba(255, 255, 255, 0.03)));\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.03) 0%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.03) 100%); }\n\n/*--- Hover ---*/\n.ui.link.inverted.menu .item:hover, .ui.inverted.menu .link.item:hover, .ui.inverted.menu a.item:hover, .ui.inverted.menu .dropdown.item:hover {\n  background-color: rgba(255, 255, 255, 0.1); }\n\n.ui.inverted.menu a.item:hover, .ui.inverted.menu .item > a:hover, .ui.inverted.menu .item .menu a.item:hover, .ui.inverted.menu .item .menu .link.item:hover {\n  color: #ffffff; }\n\n/*--- Down ---*/\n.ui.inverted.menu a.item:active, .ui.inverted.menu .dropdown.item:active, .ui.inverted.menu .link.item:active, .ui.inverted.menu a.item:active {\n  background-color: rgba(255, 255, 255, 0.15); }\n\n/*--- Active ---*/\n.ui.inverted.menu .active.item {\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important;\n  background-color: rgba(255, 255, 255, 0.2); }\n\n.ui.inverted.menu .active.item, .ui.inverted.menu .active.item a {\n  color: #ffffff !important; }\n\n.ui.inverted.vertical.menu .item .menu .active.item {\n  background-color: rgba(255, 255, 255, 0.2);\n  color: #ffffff; }\n\n/*--- Pointers ---*/\n.ui.inverted.pointing.menu .active.item:after {\n  background-color: #5B5B5B;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.pointing.menu .active.item:hover:after {\n  background-color: #4A4A4A; }\n\n/*--------------\n    Selection\n---------------*/\n.ui.selection.menu > .item {\n  color: rgba(0, 0, 0, 0.4); }\n\n.ui.selection.menu > .item:hover {\n  color: rgba(0, 0, 0, 0.6); }\n\n.ui.selection.menu > .item.active {\n  color: rgba(0, 0, 0, 0.85); }\n\n.ui.inverted.selection.menu > .item {\n  color: rgba(255, 255, 255, 0.4); }\n\n.ui.inverted.selection.menu > .item:hover {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.inverted.selection.menu > .item.active {\n  color: #FFFFFF; }\n\n/*--------------\n     Floated\n---------------*/\n.ui.floated.menu {\n  float: left;\n  margin: 0rem 0.5rem 0rem 0rem; }\n\n.ui.right.floated.menu {\n  float: right;\n  margin: 0rem 0rem 0rem 0.5rem; }\n\n/*--------------\n Inverted Colors\n---------------*/\n/*--- Light Colors  ---*/\n.ui.grey.menu {\n  background-color: #F0F0F0; }\n\n/*--- Inverted Colors  ---*/\n.ui.inverted.green.menu {\n  background-color: #A1CF64; }\n\n.ui.inverted.green.pointing.menu .active.item:after {\n  background-color: #B3D782; }\n\n.ui.inverted.red.menu {\n  background-color: #D95C5C; }\n\n.ui.inverted.red.pointing.menu .active.item:after {\n  background-color: #DF7C7C; }\n\n.ui.inverted.blue.menu {\n  background-color: #6ECFF5; }\n\n.ui.inverted.blue.pointing.menu .active.item:after {\n  background-color: #8AD7F6; }\n\n.ui.inverted.purple.menu {\n  background-color: #564F8A; }\n\n.ui.inverted.purple.pointing.menu .active.item:after {\n  background-color: #7771A0; }\n\n.ui.inverted.orange.menu {\n  background-color: #F05940; }\n\n.ui.inverted.orange.pointing.menu .active.item:after {\n  background-color: #F27966; }\n\n.ui.inverted.teal.menu {\n  background-color: #00B5AD; }\n\n.ui.inverted.teal.pointing.menu .active.item:after {\n  background-color: #33C3BC; }\n\n/*--------------\n     Fitted\n---------------*/\n.ui.fitted.menu .item, .ui.fitted.menu .item .menu .item, .ui.menu .fitted.item {\n  padding: 0em; }\n\n.ui.horizontally.fitted.menu .item, .ui.horizontally.fitted.menu .item .menu .item, .ui.menu .horizontally.fitted.item {\n  padding-top: 0.83em;\n  padding-bottom: 0.83em; }\n\n.ui.vertically.fitted.menu .item, .ui.vertically.fitted.menu .item .menu .item, .ui.menu .vertically.fitted.item {\n  padding-left: 0.95em;\n  padding-right: 0.95em; }\n\n/*--------------\n   Borderless\n---------------*/\n.ui.borderless.menu .item:before, .ui.borderless.menu .item .menu .item:before, .ui.menu .borderless.item:before {\n  background-image: none; }\n\n/*-------------------\n       Compact\n--------------------*/\n.ui.compact.menu {\n  display: inline-block;\n  margin: 0em;\n  vertical-align: middle; }\n\n.ui.compact.vertical.menu {\n  width: auto !important; }\n\n.ui.compact.vertical.menu .item:last-child::before {\n  display: block; }\n\n/*-------------------\n        Fluid\n--------------------*/\n.ui.menu.fluid, .ui.vertical.menu.fluid {\n  display: block;\n  width: 100% !important; }\n\n/*-------------------\n      Evenly Sized\n--------------------*/\n.ui.item.menu, .ui.item.menu .item {\n  width: 100%;\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  text-align: center; }\n\n.ui.menu.two.item .item {\n  width: 50%; }\n\n.ui.menu.three.item .item {\n  width: 33.333%; }\n\n.ui.menu.four.item .item {\n  width: 25%; }\n\n.ui.menu.five.item .item {\n  width: 20%; }\n\n.ui.menu.six.item .item {\n  width: 16.666%; }\n\n.ui.menu.seven.item .item {\n  width: 14.285%; }\n\n.ui.menu.eight.item .item {\n  width: 12.5%; }\n\n.ui.menu.nine.item .item {\n  width: 11.11%; }\n\n.ui.menu.ten.item .item {\n  width: 10%; }\n\n.ui.menu.eleven.item .item {\n  width: 9.09%; }\n\n.ui.menu.twelve.item .item {\n  width: 8.333%; }\n\n/*--------------\n     Fixed\n---------------*/\n.ui.menu.fixed {\n  position: fixed;\n  z-index: 999;\n  margin: 0em;\n  border: none;\n  width: 100%; }\n\n.ui.menu.fixed, .ui.menu.fixed .item:first-child, .ui.menu.fixed .item:last-child {\n  border-radius: 0px !important; }\n\n.ui.menu.fixed.top {\n  top: 0px;\n  left: 0px;\n  right: auto;\n  bottom: auto; }\n\n.ui.menu.fixed.right {\n  top: 0px;\n  right: 0px;\n  left: auto;\n  bottom: auto;\n  width: auto;\n  height: 100%; }\n\n.ui.menu.fixed.bottom {\n  bottom: 0px;\n  left: 0px;\n  top: auto;\n  right: auto; }\n\n.ui.menu.fixed.left {\n  top: 0px;\n  left: 0px;\n  right: auto;\n  bottom: auto;\n  width: auto;\n  height: 100%; }\n\n/* Coupling with Grid */\n.ui.fixed.menu + .ui.grid {\n  padding-top: 2.75rem; }\n\n/*-------------------\n       Pointing\n--------------------*/\n.ui.pointing.menu .active.item:after {\n  position: absolute;\n  bottom: -0.3em;\n  left: 50%;\n  content: \"\";\n  margin-left: -0.3em;\n  width: 0.6em;\n  height: 0.6em;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  background-image: none;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  z-index: 2;\n  -webkit-transition: background 0.2s ease;\n  -moz-transition: background 0.2s ease;\n  transition: background 0.2s ease; }\n\n/* Don't double up pointers */\n.ui.pointing.menu .active.item .menu .active.item:after {\n  display: none; }\n\n.ui.vertical.pointing.menu .active.item:after {\n  position: absolute;\n  top: 50%;\n  margin-top: -0.3em;\n  right: -0.4em;\n  bottom: auto;\n  left: auto;\n  border: none;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1); }\n\n/* Colors */\n.ui.pointing.menu .active.item:after {\n  background-color: #FCFCFC; }\n\n.ui.pointing.menu .active.item:hover:after {\n  background-color: #FAFAFA; }\n\n.ui.vertical.pointing.menu .menu .active.item:after {\n  background-color: #F4F4F4; }\n\n.ui.pointing.menu a.active.item:active:after {\n  background-color: #F0F0F0; }\n\n/*--------------\n    Attached\n---------------*/\n.ui.menu.attached {\n  margin: 0rem;\n  border-radius: 0px;\n  /* avoid rgba multiplying */\n  -webkit-box-shadow: 0px 0px 0px 1px #DDDDDD;\n  box-shadow: 0px 0px 0px 1px #DDDDDD; }\n\n.ui.top.attached.menu {\n  border-radius: 0.1875em 0.1875em 0px 0px; }\n\n.ui.menu.bottom.attached {\n  border-radius: 0px 0px 0.1875em 0.1875em; }\n\n/*--------------\n     Sizes\n---------------*/\n.ui.small.menu .item {\n  font-size: 0.875rem; }\n\n.ui.small.vertical.menu {\n  width: 13rem; }\n\n.ui.menu .item {\n  font-size: 1rem; }\n\n.ui.vertical.menu {\n  width: 15rem; }\n\n.ui.large.menu .item {\n  font-size: 1.125rem; }\n\n.ui.large.menu .item .item {\n  font-size: 0.875rem; }\n\n.ui.large.menu .dropdown .item {\n  font-size: 1rem; }\n\n.ui.large.vertical.menu {\n  width: 18rem; }\n\n/*\n * # Semantic - Message\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Message\n*******************************/\n.ui.message {\n  position: relative;\n  min-height: 18px;\n  margin: 1em 0em;\n  height: auto;\n  background-color: #EFEFEF;\n  padding: 1em;\n  line-height: 1.33;\n  color: rgba(0, 0, 0, 0.6);\n  -webkit-transition: opacity 0.1s ease, color 0.1s ease, background 0.1s ease, -webkit-box-shadow 0.1s ease;\n  -moz-transition: opacity 0.1s ease, color 0.1s ease, background 0.1s ease, box-shadow 0.1s ease;\n  transition: opacity 0.1s ease, color 0.1s ease, background 0.1s ease, box-shadow 0.1s ease;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  border-radius: 0.325em 0.325em 0.325em 0.325em; }\n\n.ui.message:first-child {\n  margin-top: 0em; }\n\n.ui.message:last-child {\n  margin-bottom: 0em; }\n\n/*--------------\n     Content\n---------------*/\n/* block with headers */\n.ui.message .header {\n  margin: 0em;\n  font-size: 1.33em;\n  font-weight: bold; }\n\n/* block with paragraphs */\n.ui.message p {\n  opacity: 0.85;\n  margin: 1em 0em; }\n\n.ui.message p:first-child {\n  margin-top: 0em; }\n\n.ui.message p:last-child {\n  margin-bottom: 0em; }\n\n.ui.message .header + p {\n  margin-top: 0.3em; }\n\n.ui.message > :first-child {\n  margin-top: 0em; }\n\n.ui.message > :last-child {\n  margin-bottom: 0em; }\n\n/* block with child list */\n.ui.message ul.list {\n  opacity: 0.85;\n  list-style-position: inside;\n  margin: 0.2em 0em;\n  padding: 0em; }\n\n.ui.message ul.list li {\n  position: relative;\n  list-style-type: none;\n  margin: 0em 0em 0.3em 1em;\n  padding: 0em; }\n\n.ui.message ul.list li:before {\n  position: absolute;\n  content: '\\2022';\n  top: -0.05em;\n  left: -0.8em;\n  height: 100%;\n  vertical-align: baseline;\n  opacity: 0.5; }\n\n.ui.message ul.list li:first-child {\n  margin-top: 0em; }\n\n/* dismissable block */\n.ui.message > .close.icon {\n  cursor: pointer;\n  position: absolute;\n  right: 0em;\n  top: 0em;\n  width: 2.5em;\n  height: 2.5em;\n  opacity: 0.7;\n  padding: 0.75em 0em 0em 0.75em;\n  z-index: 2;\n  -webkit-transition: opacity 0.1s linear;\n  -moz-transition: opacity 0.1s linear;\n  transition: opacity 0.1s linear;\n  z-index: 10; }\n\n.ui.message > .close.icon:hover {\n  opacity: 1; }\n\n/*******************************\n            States\n*******************************/\n.ui.message.visible {\n  display: block !important; }\n\n.ui.icon.message.animating, .ui.icon.message.visible {\n  display: table !important; }\n\n.ui.message.hidden {\n  display: none !important; }\n\n/*******************************\n            Variations\n*******************************/\n/*--------------\n    Compact\n---------------*/\n.ui.compact.message {\n  display: inline-block; }\n\n/*--------------\n    Attached\n---------------*/\n.ui.attached.message {\n  margin-left: -1px;\n  margin-right: -1px;\n  margin-bottom: -1px;\n  border-radius: 0.325em 0.325em 0em 0em;\n  -webkit-box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.attached + .ui.attached.message:not(.top):not(.bottom) {\n  margin-top: -1px;\n  border-radius: 0em; }\n\n.ui.bottom.attached.message {\n  margin-top: -1px;\n  border-radius: 0em 0em 0.325em 0.325em; }\n\n.ui.bottom.attached.message:not(:last-child) {\n  margin-bottom: 1em; }\n\n.ui.attached.icon.message {\n  display: block;\n  width: auto; }\n\n/*--------------\n      Icon\n---------------*/\n.ui.icon.message {\n  display: table;\n  width: 100%; }\n\n.ui.icon.message > .icon:not(.close) {\n  display: table-cell;\n  vertical-align: middle;\n  font-size: 3.8em;\n  opacity: 0.5; }\n\n.ui.icon.message > .icon + .content {\n  padding-left: 1em; }\n\n.ui.icon.message > .content {\n  display: table-cell;\n  vertical-align: middle; }\n\n/*--------------\n    Inverted\n---------------*/\n.ui.inverted.message {\n  background-color: rgba(255, 255, 255, 0.05);\n  color: rgba(255, 255, 255, 0.95); }\n\n/*--------------\n    Floating\n---------------*/\n.ui.floating.message {\n  -webkit-box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset; }\n\n/*--------------\n     Colors\n---------------*/\n.ui.black.message {\n  background-color: #333333;\n  color: rgba(255, 255, 255, 0.95); }\n\n/*--------------\n     Types\n---------------*/\n.ui.blue.message, .ui.info.message {\n  background-color: #E6F4F9;\n  color: #4D8796; }\n\n/* Green Text Block */\n.ui.green.message {\n  background-color: #DEFCD5;\n  color: #52A954; }\n\n/* Yellow Text Block */\n.ui.yellow.message, .ui.warning.message {\n  background-color: #F6F3D5;\n  color: #96904D; }\n\n/* Red Text Block */\n.ui.red.message {\n  background-color: #F1D7D7;\n  color: #A95252; }\n\n/* Success Text Block */\n.ui.success.message, .ui.positive.message {\n  background-color: #DEFCD5;\n  color: #52A954; }\n\n/* Error Text Block */\n.ui.error.message, .ui.negative.message {\n  background-color: #F1D7D7;\n  color: #A95252; }\n\n/*--------------\n     Sizes\n---------------*/\n.ui.small.message {\n  font-size: 0.875em; }\n\n.ui.message {\n  font-size: 1em; }\n\n.ui.large.message {\n  font-size: 1.125em; }\n\n.ui.huge.message {\n  font-size: 1.5em; }\n\n.ui.massive.message {\n  font-size: 2em; }\n\n/*\n * # Semantic - Table\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n             Table\n*******************************/\n/* Prototype */\n.ui.table {\n  width: 100%;\n  border-collapse: collapse; }\n\n/* Table Content */\n.ui.table th, .ui.table tr, .ui.table td {\n  border-collapse: collapse;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-transition: all 0.1s ease-out;\n  -moz-transition: all 0.1s ease-out;\n  transition: all 0.1s ease-out; }\n\n/* Headers */\n.ui.table thead {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.03); }\n\n.ui.table tfoot th {\n  background-color: rgba(0, 0, 0, 0.03); }\n\n.ui.table th {\n  cursor: auto;\n  background-color: rgba(0, 0, 0, 0.05);\n  text-align: left;\n  color: rgba(0, 0, 0, 0.8);\n  padding: 0.5em 0.7em;\n  vertical-align: middle; }\n\n.ui.table thead th:first-child {\n  border-radius: 5px 0px 0px 0px; }\n\n.ui.table thead th:last-child {\n  border-radius: 0px 5px 0px 0px; }\n\n.ui.table tfoot th:first-child {\n  border-radius: 0px 0px 0px 5px; }\n\n.ui.table tfoot th:last-child {\n  border-radius: 0px 0px 5px 0px; }\n\n.ui.table tfoot th:only-child {\n  border-radius: 0px 0px 5px 5px; }\n\n/* Table Cells */\n.ui.table td {\n  padding: 0.4em 0.7em;\n  vertical-align: middle; }\n\n/* Footer */\n.ui.table tfoot {\n  border-top: 1px solid rgba(0, 0, 0, 0.03); }\n\n.ui.table tfoot th {\n  font-weight: normal;\n  font-style: italic; }\n\n/* Table Striping */\n.ui.table tbody tr:nth-child(2n) {\n  background-color: rgba(0, 0, 50, 0.02); }\n\n/* Icons */\n.ui.table > .icon {\n  vertical-align: baseline; }\n\n.ui.table > .icon:only-child {\n  margin: 0em; }\n\n/* Table Segment */\n.ui.table.segment:after {\n  display: none; }\n\n.ui.table.segment.stacked:after {\n  display: block; }\n\n/* Responsive */\n@media only screen and (max-width: 768px) {\n  /* Clear BG Colors */\n  .ui.table {\n    display: block;\n    padding: 0em; }\n  .ui.table thead, .ui.table tfoot {\n    display: none; }\n  .ui.table tbody {\n    display: block; }\n  .ui.table tr {\n    display: block; }\n  .ui.table tr > td {\n    width: 100% !important;\n    display: block;\n    border: none !important;\n    padding: 0.25em 0.75em;\n    -webkit-box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05) !important;\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05) !important; }\n  .ui.table td:first-child {\n    font-weight: bold;\n    padding-top: 1em; }\n  .ui.table td:last-child {\n    -webkit-box-shadow: 0px -1px 0px 0px rgba(0, 0, 0, 0.1) inset !important;\n    box-shadow: 0px -1px 0px 0px rgba(0, 0, 0, 0.1) inset !important;\n    padding-bottom: 1em; }\n  .ui.table tr > td.warning, .ui.table tr > td.error, .ui.table tr > td.active, .ui.table tr > td.positive, .ui.table tr > td.negative {\n    background-color: transparent !important; } }\n\n/*******************************\n             States\n*******************************/\n/*--------------\n      Hover\n---------------*/\n/* Sortable */\n.ui.sortable.table th.disabled:hover {\n  cursor: auto;\n  text-align: left;\n  font-weight: bold;\n  color: #333333;\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.sortable.table thead th:hover {\n  background-color: rgba(0, 0, 0, 0.13);\n  color: rgba(0, 0, 0, 0.8); }\n\n/* Inverted Sortable */\n.ui.inverted.sortable.table thead th:hover {\n  background-color: rgba(255, 255, 255, 0.13);\n  color: #ffffff; }\n\n/*--------------\n    Positive\n---------------*/\n.ui.table tr.positive, .ui.table td.positive {\n  -webkit-box-shadow: 2px 0px 0px #119000 inset;\n  box-shadow: 2px 0px 0px #119000 inset; }\n\n.ui.table tr.positive td, .ui.table td.positive {\n  background-color: #F2F8F0 !important;\n  color: #119000 !important; }\n\n.ui.celled.table tr.positive:hover td, .ui.celled.table tr:hover td.positive, .ui.table tr.positive:hover td, .ui.table td:hover.positive, .ui.table th:hover.positive {\n  background-color: #ECF5E9 !important;\n  color: #119000 !important; }\n\n/*--------------\n     Negative\n---------------*/\n.ui.table tr.negative, .ui.table td.negative {\n  -webkit-box-shadow: 2px 0px 0px #CD2929 inset;\n  box-shadow: 2px 0px 0px #CD2929 inset; }\n\n.ui.table tr.negative td, .ui.table td.negative {\n  background-color: #F9F4F4;\n  color: #CD2929 !important; }\n\n.ui.celled.table tr.negative:hover td, .ui.celled.table tr:hover td.negative, .ui.table tr.negative:hover td, .ui.table td:hover.negative, .ui.table th:hover.negative {\n  background-color: #F2E8E8;\n  color: #CD2929; }\n\n/*--------------\n      Error\n---------------*/\n.ui.table tr.error, .ui.table td.error {\n  -webkit-box-shadow: 2px 0px 0px #CD2929 inset;\n  box-shadow: 2px 0px 0px #CD2929 inset; }\n\n.ui.table tr.error td, .ui.table td.error, .ui.table th.error {\n  background-color: #F9F4F4;\n  color: #CD2929; }\n\n.ui.celled.table tr.error:hover td, .ui.celled.table tr:hover td.error, .ui.table tr.error:hover td, .ui.table td:hover.error, .ui.table th:hover.error {\n  background-color: #F2E8E8;\n  color: #CD2929; }\n\n/*--------------\n     Warning\n---------------*/\n.ui.table tr.warning, .ui.table td.warning {\n  -webkit-box-shadow: 2px 0px 0px #7D6C00 inset;\n  box-shadow: 2px 0px 0px #7D6C00 inset; }\n\n.ui.table tr.warning td, .ui.table td.warning, .ui.table th.warning {\n  background-color: #FBF6E9;\n  color: #7D6C00; }\n\n.ui.celled.table tr.warning:hover td, .ui.celled.table tr:hover td.warning, .ui.table tr.warning:hover td, .ui.table td:hover.warning, .ui.table th:hover.warning {\n  background-color: #F3EDDC;\n  color: #7D6C00; }\n\n/*--------------\n     Active\n---------------*/\n.ui.table tr.active, .ui.table td.active {\n  -webkit-box-shadow: 2px 0px 0px rgba(50, 50, 50, 0.9) inset;\n  box-shadow: 2px 0px 0px rgba(50, 50, 50, 0.9) inset; }\n\n.ui.table tr.active td, .ui.table tr td.active {\n  background-color: #E0E0E0;\n  color: rgba(50, 50, 50, 0.9);\n  /* border-color: rgba(0, 0, 0, 0.15) !important; */ }\n\n/*--------------\n     Disabled\n---------------*/\n.ui.table tr.disabled td, .ui.table tr td.disabled, .ui.table tr.disabled:hover td, .ui.table tr:hover td.disabled {\n  color: rgba(150, 150, 150, 0.3); }\n\n/*******************************\n          Variations\n*******************************/\n/*--------------\n  Column Count\n---------------*/\n.ui.column.table {\n  table-layout: fixed; }\n\n.ui.two.column.table td {\n  width: 50%; }\n\n.ui.three.column.table td {\n  width: 33.3333%; }\n\n.ui.four.column.table td {\n  width: 25%; }\n\n.ui.five.column.table td {\n  width: 20%; }\n\n.ui.six.column.table td {\n  width: 16.66667%; }\n\n.ui.seven.column.table td {\n  width: 14.2857%; }\n\n.ui.eight.column.table td {\n  width: 12.5%; }\n\n.ui.nine.column.table td {\n  width: 11.1111%; }\n\n.ui.ten.column.table td {\n  width: 10%; }\n\n.ui.eleven.column.table td {\n  width: 9.0909%; }\n\n.ui.twelve.column.table td {\n  width: 8.3333%; }\n\n.ui.thirteen.column.table td {\n  width: 7.6923%; }\n\n.ui.fourteen.column.table td {\n  width: 7.1428%; }\n\n.ui.fifteen.column.table td {\n  width: 6.6666%; }\n\n.ui.sixteen.column.table td {\n  width: 6.25%; }\n\n/* Column Width */\n.ui.table th.one.wide, .ui.table td.one.wide {\n  width: 6.25%; }\n\n.ui.table th.two.wide, .ui.table td.two.wide {\n  width: 12.5%; }\n\n.ui.table th.three.wide, .ui.table td.three.wide {\n  width: 18.75%; }\n\n.ui.table th.four.wide, .ui.table td.four.wide {\n  width: 25%; }\n\n.ui.table th.five.wide, .ui.table td.five.wide {\n  width: 31.25%; }\n\n.ui.table th.six.wide, .ui.table td.six.wide {\n  width: 37.5%; }\n\n.ui.table th.seven.wide, .ui.table td.seven.wide {\n  width: 43.75%; }\n\n.ui.table th.eight.wide, .ui.table td.eight.wide {\n  width: 50%; }\n\n.ui.table th.nine.wide, .ui.table td.nine.wide {\n  width: 56.25%; }\n\n.ui.table th.ten.wide, .ui.table td.ten.wide {\n  width: 62.5%; }\n\n.ui.table th.eleven.wide, .ui.table td.eleven.wide {\n  width: 68.75%; }\n\n.ui.table th.twelve.wide, .ui.table td.twelve.wide {\n  width: 75%; }\n\n.ui.table th.thirteen.wide, .ui.table td.thirteen.wide {\n  width: 81.25%; }\n\n.ui.table th.fourteen.wide, .ui.table td.fourteen.wide {\n  width: 87.5%; }\n\n.ui.table th.fifteen.wide, .ui.table td.fifteen.wide {\n  width: 93.75%; }\n\n.ui.table th.sixteen.wide, .ui.table td.sixteen.wide {\n  width: 100%; }\n\n/*--------------\n     Celled\n---------------*/\n.ui.celled.table {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.celled.table tbody tr, .ui.celled.table tfoot tr {\n  border: none; }\n\n.ui.celled.table th, .ui.celled.table td {\n  border: 1px solid rgba(0, 0, 0, 0.1); }\n\n/* Coupling with segment */\n.ui.celled.table.segment th:first-child, .ui.celled.table.segment td:first-child {\n  border-left: none; }\n\n.ui.celled.table.segment th:last-child, .ui.celled.table.segment td:last-child {\n  border-right: none; }\n\n/*--------------\n    Sortable\n---------------*/\n.ui.sortable.table thead th {\n  cursor: pointer;\n  white-space: nowrap; }\n\n.ui.sortable.table thead th.sorted, .ui.sortable.table thead th.sorted:hover {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.ui.sortable.table thead th:after {\n  display: inline-block;\n  content: '';\n  width: 1em;\n  opacity: 0.8;\n  margin: 0em 0em 0em 0.5em;\n  font-family: 'Icons';\n  font-style: normal;\n  font-weight: normal;\n  text-decoration: inherit; }\n\n.ui.sortable.table thead th.ascending:after {\n  content: '\\25b4'; }\n\n.ui.sortable.table thead th.descending:after {\n  content: '\\25be'; }\n\n/*--------------\n    Inverted\n---------------*/\n/* Text Color */\n.ui.inverted.table td {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.inverted.table th {\n  background-color: rgba(0, 0, 0, 0.15);\n  color: rgba(255, 255, 255, 0.9); }\n\n/* Stripes */\n.ui.inverted.table tbody tr:nth-child(2n) {\n  background-color: rgba(255, 255, 255, 0.06); }\n\n/*--------------\n   Definition\n---------------*/\n.ui.definition.table td:first-child {\n  font-weight: bold; }\n\n/*--------------\n   Collapsing\n---------------*/\n.ui.collapsing.table {\n  width: auto; }\n\n/*--------------\n      Basic\n---------------*/\n.ui.basic.table th {\n  background-color: transparent;\n  padding: 0.5em; }\n\n.ui.basic.table tbody tr {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.03); }\n\n.ui.basic.table td {\n  padding: 0.8em 0.5em; }\n\n.ui.basic.table tbody tr:nth-child(2n) {\n  background-color: transparent !important; }\n\n/*--------------\n     Padded\n---------------*/\n.ui.padded.table th, .ui.padded.table td {\n  padding: 0.8em 1em; }\n\n.ui.compact.table th {\n  padding: 0.3em 0.5em; }\n\n.ui.compact.table td {\n  padding: 0.2em 0.5em; }\n\n/*--------------\n      Sizes\n---------------*/\n/* Small */\n.ui.small.table {\n  font-size: 0.875em; }\n\n/* Standard */\n.ui.table {\n  font-size: 1em; }\n\n/* Large */\n.ui.large.table {\n  font-size: 1.1em; }\n\n/*\n * # Semantic - basic.Icon (Basic)\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n          Basic Icon\n*******************************/\n@font-face {\n  font-family: 'Basic Icons';\n  src: url("+__webpack_require__(176)+");\n  src: url("+__webpack_require__(176)+"?#iefix) format('embedded-opentype'), url("+__webpack_require__(177)+"#basic.icons) format('svg'), url("+__webpack_require__(178)+") format('woff'), url("+__webpack_require__(179)+") format('truetype');\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-decoration: inherit;\n  text-transform: none; }\n\ni.basic.icon {\n  display: inline-block;\n  opacity: 0.75;\n  margin: 0em 0.25em 0em 0em;\n  width: 1.23em;\n  height: 1em;\n  font-family: 'Basic Icons';\n  font-style: normal;\n  line-height: 1;\n  font-weight: normal;\n  text-decoration: inherit;\n  text-align: center;\n  speak: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-font-smoothing: antialiased;\n  font-smoothing: antialiased; }\n\n/* basic.icons available */\ni.basic.icon.circle.attention:before {\n  content: '\\2757'; }\n\n/* '❗' */\ni.basic.icon.circle.help:before {\n  content: '\\e704'; }\n\n/* '' */\ni.basic.icon.circle.info:before {\n  content: '\\e705'; }\n\n/* '' */\ni.basic.icon.add:before {\n  content: '\\2795'; }\n\n/* '➕' */\ni.basic.icon.chart:before {\n  content: '📈'; }\n\n/* '\\1f4c8' */\ni.basic.icon.chart.bar:before {\n  content: '📊'; }\n\n/* '\\1f4ca' */\ni.basic.icon.chart.pie:before {\n  content: '\\e7a2'; }\n\n/* '' */\ni.basic.icon.resize.full:before {\n  content: '\\e744'; }\n\n/* '' */\ni.basic.icon.resize.horizontal:before {\n  content: '\\2b0d'; }\n\n/* '⬍' */\ni.basic.icon.resize.small:before {\n  content: '\\e746'; }\n\n/* '' */\ni.basic.icon.resize.vertical:before {\n  content: '\\2b0c'; }\n\n/* '⬌' */\ni.basic.icon.down:before {\n  content: '\\2193'; }\n\n/* '↓' */\ni.basic.icon.down.triangle:before {\n  content: '\\25be'; }\n\n/* '▾' */\ni.basic.icon.down.arrow:before {\n  content: '\\e75c'; }\n\n/* '' */\ni.basic.icon.left:before {\n  content: '\\2190'; }\n\n/* '←' */\ni.basic.icon.left.triangle:before {\n  content: '\\25c2'; }\n\n/* '◂' */\ni.basic.icon.left.arrow:before {\n  content: '\\e75d'; }\n\n/* '' */\ni.basic.icon.right:before {\n  content: '\\2192'; }\n\n/* '→' */\ni.basic.icon.right.triangle:before {\n  content: '\\25b8'; }\n\n/* '▸' */\ni.basic.icon.right.arrow:before {\n  content: '\\e75e'; }\n\n/* '' */\ni.basic.icon.up:before {\n  content: '\\2191'; }\n\n/* '↑' */\ni.basic.icon.up.triangle:before {\n  content: '\\25b4'; }\n\n/* '▴' */\ni.basic.icon.up.arrow:before {\n  content: '\\e75f'; }\n\n/* '' */\ni.basic.icon.folder:before {\n  content: '\\e810'; }\n\n/* '' */\ni.basic.icon.open.folder:before {\n  content: '📂'; }\n\n/* '\\1f4c2' */\ni.basic.icon.globe:before {\n  content: '𝌍'; }\n\n/* '\\1d30d' */\ni.basic.icon.desk.globe:before {\n  content: '🌐'; }\n\n/* '\\1f310' */\ni.basic.icon.star:before {\n  content: '\\e801'; }\n\n/* '' */\ni.basic.icon.star.empty:before {\n  content: '\\e800'; }\n\n/* '' */\ni.basic.icon.star.half:before {\n  content: '\\e701'; }\n\n/* '' */\ni.basic.icon.lock:before {\n  content: '🔒'; }\n\n/* '\\1f512' */\ni.basic.icon.unlock:before {\n  content: '🔓'; }\n\n/* '\\1f513' */\ni.basic.icon.layout.grid:before {\n  content: '\\e80c'; }\n\n/* '' */\ni.basic.icon.layout.block:before {\n  content: '\\e708'; }\n\n/* '' */\ni.basic.icon.layout.list:before {\n  content: '\\e80b'; }\n\n/* '' */\ni.basic.icon.heart.empty:before {\n  content: '\\2661'; }\n\n/* '♡' */\ni.basic.icon.heart:before {\n  content: '\\2665'; }\n\n/* '♥' */\ni.basic.icon.asterisk:before {\n  content: '\\2731'; }\n\n/* '✱' */\ni.basic.icon.attachment:before {\n  content: '📎'; }\n\n/* '\\1f4ce' */\ni.basic.icon.attention:before {\n  content: '\\26a0'; }\n\n/* '⚠' */\ni.basic.icon.trophy:before {\n  content: '🏉'; }\n\n/* '\\1f3c9' */\ni.basic.icon.barcode:before {\n  content: '\\e792'; }\n\n/* '' */\ni.basic.icon.cart:before {\n  content: '\\e813'; }\n\n/* '' */\ni.basic.icon.block:before {\n  content: '🚫'; }\n\n/* '\\1f6ab' */\ni.basic.icon.book:before {\n  content: '📖'; }\n\ni.basic.icon.bookmark:before {\n  content: '🔖'; }\n\n/* '\\1f516' */\ni.basic.icon.calendar:before {\n  content: '📅'; }\n\n/* '\\1f4c5' */\ni.basic.icon.cancel:before {\n  content: '\\2716'; }\n\n/* '✖' */\ni.basic.icon.close:before {\n  content: '\\e80d'; }\n\n/* '' */\ni.basic.icon.color:before {\n  content: '\\e794'; }\n\n/* '' */\ni.basic.icon.chat:before {\n  content: '\\e720'; }\n\n/* '' */\ni.basic.icon.check:before {\n  content: '\\2611'; }\n\n/* '☑' */\ni.basic.icon.time:before {\n  content: '🕔'; }\n\n/* '\\1f554' */\ni.basic.icon.cloud:before {\n  content: '\\2601'; }\n\n/* '☁' */\ni.basic.icon.code:before {\n  content: '\\e714'; }\n\n/* '' */\ni.basic.icon.email:before {\n  content: '\\40'; }\n\n/* '@' */\ni.basic.icon.settings:before {\n  content: '\\26ef'; }\n\n/* '⛯' */\ni.basic.icon.setting:before {\n  content: '\\2699'; }\n\n/* '⚙' */\ni.basic.icon.comment:before {\n  content: '\\e802'; }\n\n/* '' */\ni.basic.icon.clockwise.counter:before {\n  content: '\\27f2'; }\n\n/* '⟲' */\ni.basic.icon.clockwise:before {\n  content: '\\27f3'; }\n\n/* '⟳' */\ni.basic.icon.cube:before {\n  content: '\\e807'; }\n\n/* '' */\ni.basic.icon.direction:before {\n  content: '\\27a2'; }\n\n/* '➢' */\ni.basic.icon.doc:before {\n  content: '📄'; }\n\n/* '\\1f4c4' */\ni.basic.icon.docs:before {\n  content: '\\e736'; }\n\n/* '' */\ni.basic.icon.dollar:before {\n  content: '💵'; }\n\n/* '\\1f4b5' */\ni.basic.icon.paint:before {\n  content: '\\e7b5'; }\n\n/* '' */\ni.basic.icon.edit:before {\n  content: '\\270d'; }\n\n/* '✍' */\ni.basic.icon.eject:before {\n  content: '\\2ecf'; }\n\n/* '⻏' */\ni.basic.icon.export:before {\n  content: '\\e715'; }\n\n/* '' */\ni.basic.icon.hide:before {\n  content: '\\e70b'; }\n\n/* '' */\ni.basic.icon.unhide:before {\n  content: '\\e80f'; }\n\n/* '' */\ni.basic.icon.facebook:before {\n  content: '\\f301'; }\n\n/* '' */\ni.basic.icon.fast-forward:before {\n  content: '\\e804'; }\n\n/* '' */\ni.basic.icon.fire:before {\n  content: '🔥'; }\n\n/* '\\1f525' */\ni.basic.icon.flag:before {\n  content: '\\2691'; }\n\n/* '⚑' */\ni.basic.icon.lightning:before {\n  content: '\\26a1'; }\n\n/* '⚡' */\ni.basic.icon.lab:before {\n  content: '\\68'; }\n\n/* 'h' */\ni.basic.icon.flight:before {\n  content: '\\2708'; }\n\n/* '✈' */\ni.basic.icon.forward:before {\n  content: '\\27a6'; }\n\n/* '➦' */\ni.basic.icon.gift:before {\n  content: '🎁'; }\n\n/* '\\1f381' */\ni.basic.icon.github:before {\n  content: '\\f308'; }\n\n/* '' */\ni.basic.icon.globe:before {\n  content: '\\e817'; }\n\n/* '' */\ni.basic.icon.headphones:before {\n  content: '🎧'; }\n\n/* '\\1f3a7' */\ni.basic.icon.question:before {\n  content: '\\2753'; }\n\n/* '❓' */\ni.basic.icon.home:before {\n  content: '\\2302'; }\n\n/* '⌂' */\ni.basic.icon.i:before {\n  content: '\\2139'; }\n\n/* 'ℹ' */\ni.basic.icon.idea:before {\n  content: '💡'; }\n\n/* '\\1f4a1' */\ni.basic.icon.open:before {\n  content: '🔗'; }\n\n/* '\\1f517' */\ni.basic.icon.content:before {\n  content: '\\e782'; }\n\n/* '' */\ni.basic.icon.location:before {\n  content: '\\e724'; }\n\n/* '' */\ni.basic.icon.mail:before {\n  content: '\\2709'; }\n\n/* '✉' */\ni.basic.icon.mic:before {\n  content: '🎤'; }\n\n/* '\\1f3a4' */\ni.basic.icon.minus:before {\n  content: '\\2d'; }\n\n/* '-' */\ni.basic.icon.money:before {\n  content: '💰'; }\n\n/* '\\1f4b0' */\ni.basic.icon.off:before {\n  content: '\\e78e'; }\n\n/* '' */\ni.basic.icon.pause:before {\n  content: '\\e808'; }\n\n/* '' */\ni.basic.icon.photos:before {\n  content: '\\e812'; }\n\n/* '' */\ni.basic.icon.photo:before {\n  content: '🌄'; }\n\n/* '\\1f304' */\ni.basic.icon.pin:before {\n  content: '📌'; }\n\n/* '\\1f4cc' */\ni.basic.icon.play:before {\n  content: '\\e809'; }\n\n/* '' */\ni.basic.icon.plus:before {\n  content: '\\2b'; }\n\n/* '+' */\ni.basic.icon.print:before {\n  content: '\\e716'; }\n\n/* '' */\ni.basic.icon.rss:before {\n  content: '\\e73a'; }\n\n/* '' */\ni.basic.icon.search:before {\n  content: '🔍'; }\n\n/* '\\1f50d' */\ni.basic.icon.shuffle:before {\n  content: '\\e803'; }\n\n/* '' */\ni.basic.icon.tag:before {\n  content: '\\e80a'; }\n\n/* '' */\ni.basic.icon.tags:before {\n  content: '\\e70d'; }\n\n/* '' */\ni.basic.icon.terminal:before {\n  content: '\\e7ac'; }\n\n/* '' */\ni.basic.icon.thumbs.down:before {\n  content: '👎'; }\n\n/* '\\1f44e' */\ni.basic.icon.thumbs.up:before {\n  content: '👍'; }\n\n/* '\\1f44d' */\ni.basic.icon.to-end:before {\n  content: '\\e806'; }\n\n/* '' */\ni.basic.icon.to-start:before {\n  content: '\\e805'; }\n\n/* '' */\ni.basic.icon.top.list:before {\n  content: '🏆'; }\n\n/* '\\1f3c6' */\ni.basic.icon.trash:before {\n  content: '\\e729'; }\n\n/* '' */\ni.basic.icon.twitter:before {\n  content: '\\f303'; }\n\n/* '' */\ni.basic.icon.upload:before {\n  content: '\\e711'; }\n\n/* '' */\ni.basic.icon.user.add:before {\n  content: '\\e700'; }\n\n/* '' */\ni.basic.icon.user:before {\n  content: '👤'; }\n\n/* '\\1f464' */\ni.basic.icon.community:before {\n  content: '\\e814'; }\n\n/* '' */\ni.basic.icon.users:before {\n  content: '👥'; }\n\n/* '\\1f465' */\ni.basic.icon.id:before {\n  content: '\\e722'; }\n\n/* '' */\ni.basic.icon.url:before {\n  content: '🔗'; }\n\n/* '\\1f517' */\ni.basic.icon.zoom.in:before {\n  content: '\\e750'; }\n\n/* '' */\ni.basic.icon.zoom.out:before {\n  content: '\\e751'; }\n\n/* '' */\n/*--------------\n   Spacing Fix\n---------------*/\n/* dropdown arrows are to the right */\ni.dropdown.basic.icon {\n  margin: 0em 0em 0em 0.5em; }\n\n/* stars are usually consecutive */\ni.basic.icon.star {\n  width: auto;\n  margin: 0em; }\n\n/* left side basic.icons */\ni.basic.icon.left, i.basic.icon.left, i.basic.icon.left {\n  width: auto;\n  margin: 0em 0.5em 0em 0em; }\n\n/* right side basic.icons */\ni.basic.icon.search, i.basic.icon.up, i.basic.icon.down, i.basic.icon.right {\n  width: auto;\n  margin: 0em 0em 0em 0.5em; }\n\n/*--------------\n     Aliases\n---------------*/\n/* aliases for convenience */\ni.basic.icon.delete:before {\n  content: '\\e80d'; }\n\n/* '' */\ni.basic.icon.dropdown:before {\n  content: '\\25be'; }\n\n/* '▾' */\ni.basic.icon.help:before {\n  content: '\\e704'; }\n\n/* '' */\ni.basic.icon.info:before {\n  content: '\\e705'; }\n\n/* '' */\ni.basic.icon.error:before {\n  content: '\\e80d'; }\n\n/* '' */\ni.basic.icon.dislike:before {\n  content: '\\2661'; }\n\n/* '♡' */\ni.basic.icon.like:before {\n  content: '\\2665'; }\n\n/* '♥' */\ni.basic.icon.eye:before {\n  content: '\\e80f'; }\n\n/* '' */\ni.basic.icon.eye.hidden:before {\n  content: '\\e70b'; }\n\n/* '' */\ni.basic.icon.date:before {\n  content: '📅'; }\n\n/* '\\1f4c5' */\n/*******************************\n             States\n*******************************/\ni.basic.icon.hover {\n  opacity: 1; }\n\ni.basic.icon.active {\n  opacity: 1; }\n\ni.emphasized.basic.icon {\n  opacity: 1; }\n\ni.basic.icon.disabled {\n  opacity: 0.3; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n         Link\n--------------------*/\ni.link.basic.icon {\n  cursor: pointer;\n  opacity: 0.7;\n  -webkit-transition: opacity 0.3s ease-out;\n  -moz-transition: opacity 0.3s ease-out;\n  transition: opacity 0.3s ease-out; }\n\n.link.basic.icon:hover {\n  opacity: 1 !important; }\n\n/*-------------------\n      Circular\n--------------------*/\ni.circular.basic.icon {\n  border-radius: 500px !important;\n  padding: 0.5em 0em !important;\n  -webkit-box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  line-height: 1 !important;\n  width: 2em !important;\n  height: 2em !important; }\n\ni.circular.inverted.basic.icon {\n  border: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*-------------------\n      Flipped\n--------------------*/\ni.vertically.flipped.basic.icon {\n  -webkit-transform: scale(1, -1);\n  -moz-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1); }\n\ni.horizontally.flipped.basic.icon {\n  -webkit-transform: scale(-1, 1);\n  -moz-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1); }\n\n/*-------------------\n        Rotated\n--------------------*/\ni.left.rotated.basic.icon {\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  transform: rotate(-90deg); }\n\ni.right.rotated.basic.icon {\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg); }\n\n/*-------------------\n        Square\n--------------------*/\ni.square.basic.icon {\n  width: 2em;\n  height: 2em;\n  padding: 0.5em 0.35em !important;\n  -webkit-box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  vertical-align: baseline; }\n\ni.square.basic.icon:before {\n  vertical-align: middle; }\n\ni.square.inverted.basic.icon {\n  border: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*-------------------\n      Inverted\n--------------------*/\ni.inverted.basic.icon {\n  background-color: #222222;\n  color: #FFFFFF; }\n\n/*-------------------\n       Colors\n--------------------*/\ni.blue.basic.icon {\n  color: #6ECFF5 !important; }\n\ni.black.basic.icon {\n  color: #5C6166 !important; }\n\ni.green.basic.icon {\n  color: #A1CF64 !important; }\n\ni.red.basic.icon {\n  color: #D95C5C !important; }\n\ni.purple.basic.icon {\n  color: #564F8A !important; }\n\ni.teal.basic.icon {\n  color: #00B5AD !important; }\n\n/*-------------------\n   Inverted Colors\n--------------------*/\ni.inverted.black.basic.icon {\n  background-color: #5C6166 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.blue.basic.icon {\n  background-color: #6ECFF5 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.green.basic.icon {\n  background-color: #A1CF64 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.red.basic.icon {\n  background-color: #D95C5C !important;\n  color: #FFFFFF !important; }\n\ni.inverted.purple.basic.icon {\n  background-color: #564F8A !important;\n  color: #FFFFFF !important; }\n\ni.inverted.teal.basic.icon {\n  background-color: #00B5AD !important;\n  color: #FFFFFF !important; }\n\n/*-------------------\n        Sizes\n--------------------*/\ni.small.basic.icon {\n  font-size: 0.875em; }\n\ni.basic.icon {\n  font-size: 1em; }\n\ni.large.basic.icon {\n  font-size: 1.5em;\n  margin-right: 0.2em;\n  vertical-align: middle; }\n\ni.big.basic.icon {\n  font-size: 2em;\n  margin-right: 0.5em;\n  vertical-align: middle; }\n\ni.huge.basic.icon {\n  font-size: 4em;\n  margin-right: 0.75em;\n  vertical-align: middle; }\n\ni.massive.basic.icon {\n  font-size: 8em;\n  margin-right: 1em;\n  vertical-align: middle; }\n\n/*\n * # Semantic - Button\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Button\n*******************************/\n/* Prototype */\n.ui.button {\n  cursor: pointer;\n  display: inline-block;\n  vertical-align: middle;\n  min-height: 1em;\n  outline: none;\n  border: none;\n  background-color: #FAFAFA;\n  color: #808080;\n  margin: 0em;\n  padding: 0.8em 1.5em;\n  font-size: 1rem;\n  text-transform: uppercase;\n  line-height: 1;\n  font-weight: bold;\n  font-style: normal;\n  text-align: center;\n  text-decoration: none;\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.05)));\n  background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.05));\n  background-image: -moz-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.05));\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.05));\n  border-radius: 0.25em;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.08) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.08) inset;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-transition: opacity 0.25s ease, background-color 0.25s ease, color 0.25s ease, background 0.25s ease, -webkit-box-shadow 0.25s ease;\n  -moz-transition: opacity 0.25s ease, background-color 0.25s ease, color 0.25s ease, background 0.25s ease, box-shadow 0.25s ease;\n  transition: opacity 0.25s ease, background-color 0.25s ease, color 0.25s ease, background 0.25s ease, box-shadow 0.25s ease; }\n\n/*******************************\n            States\n*******************************/\n/*--------------\n     Active\n---------------*/\n.ui.buttons .active.button, .ui.active.button {\n  background-color: #EAEAEA;\n  background-image: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset !important;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset !important;\n  color: rgba(0, 0, 0, 0.7); }\n\n/*--------------\n      Hover\n---------------*/\n.ui.button:hover {\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.08)));\n  background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.08));\n  background-image: -moz-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.08));\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.08));\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.button.active:hover {\n  background-image: none; }\n\n.ui.button:hover .icon, .ui.button.hover .icon {\n  opacity: 0.85; }\n\n/*--------------\n      Down\n---------------*/\n.ui.button:active, .ui.active.button:active {\n  background-color: #F1F1F1;\n  color: rgba(0, 0, 0, 0.7);\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset !important;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05) inset !important; }\n\n/*--------------\n    Loading\n---------------*/\n.ui.loading.button {\n  position: relative;\n  cursor: default;\n  background-color: #FFFFFF !important;\n  color: transparent !important;\n  -webkit-transition: all 0s linear;\n  -moz-transition: all 0s linear;\n  transition: all 0s linear; }\n\n.ui.loading.button:after {\n  position: absolute;\n  top: 0em;\n  left: 0em;\n  width: 100%;\n  height: 100%;\n  content: '';\n  background: transparent url("+__webpack_require__(169)+") no-repeat 50% 50%; }\n\n.ui.labeled.icon.loading.button .icon {\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*-------------------\n      Disabled\n--------------------*/\n.ui.disabled.button, .ui.disabled.button:hover, .ui.disabled.button.active {\n  background-color: #DDDDDD !important;\n  cursor: default;\n  color: rgba(0, 0, 0, 0.5) !important;\n  opacity: 0.3 !important;\n  background-image: none !important;\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n/*******************************\n             Types\n*******************************/\n/*-------------------\n       Animated\n--------------------*/\n.ui.animated.button {\n  position: relative;\n  overflow: hidden; }\n\n.ui.animated.button .visible.content {\n  position: relative; }\n\n.ui.animated.button .hidden.content {\n  position: absolute;\n  width: 100%; }\n\n/* Horizontal */\n.ui.animated.button .visible.content, .ui.animated.button .hidden.content {\n  -webkit-transition: right 0.3s ease 0s;\n  -moz-transition: right 0.3s ease 0s;\n  transition: right 0.3s ease 0s; }\n\n.ui.animated.button .visible.content {\n  left: auto;\n  right: 0%; }\n\n.ui.animated.button .hidden.content {\n  top: 50%;\n  left: auto;\n  right: -100%;\n  margin-top: -0.55em; }\n\n.ui.animated.button:hover .visible.content {\n  left: auto;\n  right: 200%; }\n\n.ui.animated.button:hover .hidden.content {\n  left: auto;\n  right: 0%; }\n\n/* Vertical */\n.ui.vertical.animated.button .visible.content, .ui.vertical.animated.button .hidden.content {\n  -webkit-transition: top 0.3s ease 0s, -webkit-transform 0.3s ease 0s;\n  -moz-transition: top 0.3s ease 0s, -moz-transform 0.3s ease 0s;\n  transition: top 0.3s ease 0s, transform 0.3s ease 0s; }\n\n.ui.vertical.animated.button .visible.content {\n  -webkit-transform: translateY(0%);\n  -moz-transform: translateY(0%);\n  -ms-transform: translateY(0%);\n  transform: translateY(0%);\n  right: auto; }\n\n.ui.vertical.animated.button .hidden.content {\n  top: -100%;\n  left: 0%;\n  right: auto; }\n\n.ui.vertical.animated.button:hover .visible.content {\n  -webkit-transform: translateY(200%);\n  -moz-transform: translateY(200%);\n  -ms-transform: translateY(200%);\n  transform: translateY(200%);\n  right: auto; }\n\n.ui.vertical.animated.button:hover .hidden.content {\n  top: 50%;\n  right: auto; }\n\n/* Fade */\n.ui.fade.animated.button .visible.content, .ui.fade.animated.button .hidden.content {\n  -webkit-transition: opacity 0.3s ease 0s, -webkit-transform 0.3s ease 0s;\n  -moz-transition: opacity 0.3s ease 0s, -moz-transform 0.3s ease 0s;\n  transition: opacity 0.3s ease 0s, transform 0.3s ease 0s; }\n\n.ui.fade.animated.button .visible.content {\n  left: auto;\n  right: auto;\n  opacity: 1;\n  -webkit-transform: scale(1);\n  -moz-transform: scale(1);\n  -ms-transform: scale(1);\n  transform: scale(1); }\n\n.ui.fade.animated.button .hidden.content {\n  opacity: 0;\n  left: 0%;\n  right: auto;\n  -webkit-transform: scale(1.2);\n  -moz-transform: scale(1.2);\n  -ms-transform: scale(1.2);\n  transform: scale(1.2); }\n\n.ui.fade.animated.button:hover .visible.content {\n  left: auto;\n  right: auto;\n  opacity: 0;\n  -webkit-transform: scale(0.7);\n  -moz-transform: scale(0.7);\n  -ms-transform: scale(0.7);\n  transform: scale(0.7); }\n\n.ui.fade.animated.button:hover .hidden.content {\n  left: 0%;\n  right: auto;\n  opacity: 1;\n  -webkit-transform: scale(1);\n  -moz-transform: scale(1);\n  -ms-transform: scale(1);\n  transform: scale(1); }\n\n/*-------------------\n       Primary\n--------------------*/\n.ui.primary.buttons .button, .ui.primary.button {\n  background-color: #D95C5C;\n  color: #FFFFFF; }\n\n.ui.primary.buttons .button:hover, .ui.primary.button:hover, .ui.primary.buttons .active.button, .ui.primary.button.active {\n  background-color: #E75859;\n  color: #FFFFFF; }\n\n.ui.primary.buttons .button:active, .ui.primary.button:active {\n  background-color: #D24B4C;\n  color: #FFFFFF; }\n\n/*-------------------\n      Secondary\n--------------------*/\n.ui.secondary.buttons .button, .ui.secondary.button {\n  background-color: #00B5AD;\n  color: #FFFFFF; }\n\n.ui.secondary.buttons .button:hover, .ui.secondary.button:hover, .ui.secondary.buttons .active.button, .ui.secondary.button.active {\n  background-color: #009A93;\n  color: #FFFFFF; }\n\n.ui.secondary.buttons .button:active, .ui.secondary.button:active {\n  background-color: #00847E;\n  color: #FFFFFF; }\n\n/*-------------------\n       Social\n--------------------*/\n/* Facebook */\n.ui.facebook.button {\n  background-color: #3B579D;\n  color: #FFFFFF; }\n\n.ui.facebook.button:hover {\n  background-color: #3A59A9;\n  color: #FFFFFF; }\n\n.ui.facebook.button:active {\n  background-color: #334F95;\n  color: #FFFFFF; }\n\n/* Twitter */\n.ui.twitter.button {\n  background-color: #4092CC;\n  color: #FFFFFF; }\n\n.ui.twitter.button:hover {\n  background-color: #399ADE;\n  color: #FFFFFF; }\n\n.ui.twitter.button:active {\n  background-color: #3283BC;\n  color: #FFFFFF; }\n\n/* Google Plus */\n.ui.google.plus.button {\n  background-color: #D34836;\n  color: #FFFFFF; }\n\n.ui.google.plus.button:hover {\n  background-color: #E3432E;\n  color: #FFFFFF; }\n\n.ui.google.plus.button:active {\n  background-color: #CA3A27;\n  color: #FFFFFF; }\n\n/* Linked In */\n.ui.linkedin.button {\n  background-color: #1F88BE;\n  color: #FFFFFF; }\n\n.ui.linkedin.button:hover {\n  background-color: #1394D6;\n  color: #FFFFFF; }\n\n.ui.linkedin.button:active {\n  background-color: #1179AE;\n  color: #FFFFFF; }\n\n/* YouTube */\n.ui.youtube.button {\n  background-color: #CC181E;\n  color: #FFFFFF; }\n\n.ui.youtube.button:hover {\n  background-color: #DF0209;\n  color: #FFFFFF; }\n\n.ui.youtube.button:active {\n  background-color: #A50006;\n  color: #FFFFFF; }\n\n/* Instagram */\n.ui.instagram.button {\n  background-color: #49769C;\n  color: #FFFFFF; }\n\n.ui.instagram.button:hover {\n  background-color: #4781B1;\n  color: #FFFFFF; }\n\n.ui.instagram.button:active {\n  background-color: #38658A;\n  color: #FFFFFF; }\n\n/* Pinterest */\n.ui.pinterest.button {\n  background-color: #00ACED;\n  color: #FFFFFF; }\n\n.ui.pinterest.button:hover {\n  background-color: #00B9FF;\n  color: #FFFFFF; }\n\n.ui.pinterest.button:active {\n  background-color: #009EDA;\n  color: #FFFFFF; }\n\n/* vk.com */\n.ui.vk.button {\n  background-color: #4D7198;\n  color: #FFFFFF; }\n\n.ui.vk.button:hover {\n  background-color: #537AA5;\n  color: #FFFFFF; }\n\n.ui.vk.button:active {\n  background-color: #405E7E;\n  color: #FFFFFF; }\n\n/*--------------\n     Icon\n---------------*/\n.ui.button > .icon {\n  margin-right: 0.6em;\n  line-height: 1;\n  -webkit-transition: opacity 0.1s ease;\n  -moz-transition: opacity 0.1s ease;\n  transition: opacity 0.1s ease; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n       Floated\n--------------------*/\n.ui.left.floated.buttons, .ui.left.floated.button {\n  float: left;\n  margin-right: 0.25em; }\n\n.ui.right.floated.buttons, .ui.right.floated.button {\n  float: right;\n  margin-left: 0.25em; }\n\n/*-------------------\n        Sizes\n--------------------*/\n.ui.buttons .button, .ui.button {\n  font-size: 1rem; }\n\n.ui.mini.buttons .button, .ui.mini.buttons .or, .ui.mini.button {\n  font-size: 0.8rem; }\n\n.ui.mini.buttons .button, .ui.mini.button {\n  padding: 0.6em 0.8em; }\n\n.ui.mini.icon.buttons .button, .ui.mini.buttons .icon.button {\n  padding: 0.6em 0.6em; }\n\n.ui.tiny.buttons .button, .ui.tiny.buttons .or, .ui.tiny.button {\n  font-size: 0.875em; }\n\n.ui.tiny.buttons .button, .ui.tiny.buttons .button, .ui.tiny.button {\n  padding: 0.6em 0.8em; }\n\n.ui.tiny.icon.buttons .button, .ui.tiny.buttons .icon.button {\n  padding: 0.6em 0.6em; }\n\n.ui.small.buttons .button, .ui.small.buttons .or, .ui.small.button {\n  font-size: 0.875rem; }\n\n.ui.large.buttons .button, .ui.large.buttons .or, .ui.large.button {\n  font-size: 1.125rem; }\n\n.ui.big.buttons .button, .ui.big.buttons .or, .ui.big.button {\n  font-size: 1.25rem; }\n\n.ui.huge.buttons .button, .ui.huge.buttons .or, .ui.huge.button {\n  font-size: 1.375rem; }\n\n.ui.massive.buttons .button, .ui.massive.buttons .or, .ui.massive.button {\n  font-size: 1.5rem;\n  font-weight: bold; }\n\n/* Or resize */\n.ui.tiny.buttons .or:before, .ui.mini.buttons .or:before {\n  width: 1.45em;\n  height: 1.55em;\n  line-height: 1.4;\n  margin-left: -0.725em;\n  margin-top: -0.25em; }\n\n.ui.tiny.buttons .or:after, .ui.mini.buttons .or:after {\n  height: 1.45em; }\n\n/* loading */\n.ui.huge.loading.button:after {\n  background-image: url("+__webpack_require__(170)+"); }\n\n.ui.massive.buttons .loading.button:after, .ui.gigantic.buttons .loading.button:after, .ui.massive.loading.button:after, .ui.gigantic.loading.button:after {\n  background-image: url("+__webpack_require__(171)+"); }\n\n.ui.huge.loading.button:after, .ui.huge.loading.button.active:after {\n  background-image: url("+__webpack_require__(170)+"); }\n\n.ui.massive.buttons .loading.button:after, .ui.gigantic.buttons .loading.button:after, .ui.massive.loading.button:after, .ui.gigantic.loading.button:after, .ui.massive.buttons .loading.button.active:after, .ui.gigantic.buttons .loading.button.active:after, .ui.massive.loading.button.active:after, .ui.gigantic.loading.button.active:after {\n  background-image: url("+__webpack_require__(171)+"); }\n\n/*--------------\n    Icon Only\n---------------*/\n.ui.icon.buttons .button, .ui.icon.button {\n  padding: 0.8em; }\n\n.ui.icon.buttons .button > .icon, .ui.icon.button > .icon {\n  opacity: 0.9;\n  margin: 0em;\n  vertical-align: top; }\n\n/*-------------------\n        Basic\n--------------------*/\n.ui.basic.buttons .button, .ui.basic.button {\n  background-color: transparent !important;\n  background-image: none;\n  color: #808080 !important;\n  font-weight: normal;\n  text-transform: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.basic.buttons {\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  border-radius: 0.25em; }\n\n.ui.basic.buttons .button:hover, .ui.basic.button:hover {\n  background-image: none;\n  color: #7F7F7F !important;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.18) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.18) inset; }\n\n.ui.basic.buttons .button:active, .ui.basic.button:active {\n  background-color: rgba(0, 0, 0, 0.02) !important;\n  color: #7F7F7F !important;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.basic.buttons .button.active, .ui.basic.button.active {\n  background-color: rgba(0, 0, 0, 0.05);\n  color: #7F7F7F;\n  -webkit-box-shadow: 0px 0px 0px 1px #BDBDBD inset;\n  box-shadow: 0px 0px 0px 1px #BDBDBD inset; }\n\n.ui.basic.buttons .button.active:hover, .ui.basic.button.active:hover {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n/* Inverted */\n.ui.basic.inverted.buttons .button, .ui.basic.inverted.button {\n  color: #FAFAFA !important;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.3) inset;\n  box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.3) inset; }\n\n.ui.basic.inverted.buttons .button:hover, .ui.basic.inverted.button:hover {\n  background-image: none;\n  color: #FFFFFF !important;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.5) inset;\n  box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.5) inset; }\n\n.ui.basic.inverted.buttons .button:active, .ui.basic.inverted.button:active {\n  background-color: rgba(255, 255, 255, 0.05) !important;\n  color: #FFFFFF !important;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.8) inset !important;\n  box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.8) inset !important; }\n\n.ui.basic.inverted.buttons .button.active, .ui.basic.inverted.button.active {\n  background-color: rgba(255, 255, 255, 0.5);\n  color: #FFFFFF;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.basic.inverted.buttons .button.active:hover, .ui.basic.inverted.button.active:hover {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n/* Basic Group */\n.ui.basic.buttons .button {\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.basic.buttons .button:hover, .ui.basic.buttons .button:active {\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.basic.buttons .button.active, .ui.basic.buttons .button.active:hover {\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2) inset; }\n\n/*--------------\n   Labeled Icon\n---------------*/\n.ui.labeled.icon.buttons .button, .ui.labeled.icon.button {\n  position: relative;\n  padding-left: 4em !important;\n  padding-right: 1.4em !important; }\n\n.ui.labeled.icon.buttons > .button > .icon, .ui.labeled.icon.button > .icon {\n  position: absolute;\n  top: 0em;\n  left: 0em;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 2.75em;\n  height: 100%;\n  padding-top: 0.8em;\n  background-color: rgba(0, 0, 0, 0.05);\n  text-align: center;\n  border-radius: 0.25em 0px 0px 0.25em;\n  line-height: 1;\n  -webkit-box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.05) inset;\n  box-shadow: -1px 0px 0px 0px rgba(0, 0, 0, 0.05) inset; }\n\n.ui.labeled.icon.buttons .button > .icon {\n  border-radius: 0em; }\n\n.ui.labeled.icon.buttons .button:first-child > .icon {\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em; }\n\n.ui.labeled.icon.buttons .button:last-child > .icon {\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em; }\n\n.ui.vertical.labeled.icon.buttons .button:first-child > .icon {\n  border-radius: 0em;\n  border-top-left-radius: 0.25em; }\n\n.ui.vertical.labeled.icon.buttons .button:last-child > .icon {\n  border-radius: 0em;\n  border-bottom-left-radius: 0.25em; }\n\n.ui.right.labeled.icon.button {\n  padding-left: 1.4em !important;\n  padding-right: 4em !important; }\n\n.ui.left.fluid.labeled.icon.button, .ui.right.fluid.labeled.icon.button {\n  padding-left: 1.4em !important;\n  padding-right: 1.4em !important; }\n\n.ui.right.labeled.icon.button .icon {\n  left: auto;\n  right: 0em;\n  border-radius: 0em 0.25em 0.25em 0em;\n  -webkit-box-shadow: 1px 0px 0px 0px rgba(0, 0, 0, 0.05) inset;\n  box-shadow: 1px 0px 0px 0px rgba(0, 0, 0, 0.05) inset; }\n\n/*--------------\n     Toggle\n---------------*/\n/* Toggle (Modifies active state to give affordances) */\n.ui.toggle.buttons .active.button, .ui.buttons .button.toggle.active, .ui.button.toggle.active {\n  background-color: #5BBD72 !important;\n  color: #FFFFFF !important;\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n.ui.button.toggle.active:hover {\n  background-color: #58CB73 !important;\n  color: #FFFFFF !important;\n  -webkit-box-shadow: none !important;\n  box-shadow: none !important; }\n\n/*--------------\n    Circular\n---------------*/\n.ui.circular.button {\n  border-radius: 10em; }\n\n/*--------------\n     Attached\n---------------*/\n.ui.attached.button {\n  display: block;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) !important;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) !important; }\n\n.ui.attached.top.button {\n  border-radius: 0.25em 0.25em 0em 0em; }\n\n.ui.attached.bottom.button {\n  border-radius: 0em 0em 0.25em 0.25em; }\n\n.ui.attached.left.button {\n  display: inline-block;\n  border-left: none;\n  padding-right: 0.75em;\n  text-align: right;\n  border-radius: 0.25em 0em 0em 0.25em; }\n\n.ui.attached.right.button {\n  display: inline-block;\n  padding-left: 0.75em;\n  text-align: left;\n  border-radius: 0em 0.25em 0.25em 0em; }\n\n/*-------------------\n      Or Buttons\n--------------------*/\n.ui.buttons .or {\n  position: relative;\n  float: left;\n  width: 0.3em;\n  height: 1.1em;\n  z-index: 3; }\n\n.ui.buttons .or:before {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  content: 'or';\n  background-color: #FFFFFF;\n  margin-top: -0.1em;\n  margin-left: -0.9em;\n  width: 1.8em;\n  height: 1.8em;\n  line-height: 1.55;\n  color: #AAAAAA;\n  font-style: normal;\n  font-weight: normal;\n  text-align: center;\n  border-radius: 500px;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.buttons .or[data-text]:before {\n  content: attr(data-text); }\n\n.ui.buttons .or:after {\n  position: absolute;\n  top: 0em;\n  left: 0em;\n  content: ' ';\n  width: 0.3em;\n  height: 1.7em;\n  background-color: transparent;\n  border-top: 0.5em solid #FFFFFF;\n  border-bottom: 0.5em solid #FFFFFF; }\n\n/* Fluid Or */\n.ui.fluid.buttons .or {\n  width: 0em !important; }\n\n.ui.fluid.buttons .or:after {\n  display: none; }\n\n/*-------------------\n       Attached\n--------------------*/\n/* Plural Attached */\n.attached.ui.buttons {\n  margin: 0px;\n  border-radius: 4px 4px 0px 0px; }\n\n.attached.ui.buttons .button:first-child {\n  border-radius: 4px 0px 0px 0px; }\n\n.attached.ui.buttons .button:last-child {\n  border-radius: 0px 4px 0px 0px; }\n\n/* Bottom Side */\n.bottom.attached.ui.buttons {\n  margin-top: -1px;\n  border-radius: 0px 0px 4px 4px; }\n\n.bottom.attached.ui.buttons .button:first-child {\n  border-radius: 0px 0px 0px 4px; }\n\n.bottom.attached.ui.buttons .button:last-child {\n  border-radius: 0px 0px 4px 0px; }\n\n/* Left Side */\n.left.attached.ui.buttons {\n  margin-left: -1px;\n  border-radius: 0px 4px 4px 0px; }\n\n.left.attached.ui.buttons .button:first-child {\n  margin-left: -1px;\n  border-radius: 0px 4px 0px 0px; }\n\n.left.attached.ui.buttons .button:last-child {\n  margin-left: -1px;\n  border-radius: 0px 0px 4px 0px; }\n\n/* Right Side */\n.right.attached.ui.buttons, .right.attached.ui.buttons .button {\n  margin-right: -1px;\n  border-radius: 4px 0px 0px 4px; }\n\n.right.attached.ui.buttons .button:first-child {\n  margin-left: -1px;\n  border-radius: 4px 0px 0px 0px; }\n\n.right.attached.ui.buttons .button:last-child {\n  margin-left: -1px;\n  border-radius: 0px 0px 0px 4px; }\n\n/* Fluid */\n.ui.fluid.buttons, .ui.button.fluid, .ui.fluid.buttons > .button {\n  display: block;\n  width: 100%; }\n\n.ui.\\32.buttons > .button, .ui.two.buttons > .button {\n  width: 50%; }\n\n.ui.\\33.buttons > .button, .ui.three.buttons > .button {\n  width: 33.333%; }\n\n.ui.\\34.buttons > .button, .ui.four.buttons > .button {\n  width: 25%; }\n\n.ui.\\35.buttons > .button, .ui.five.buttons > .button {\n  width: 20%; }\n\n.ui.\\36.buttons > .button, .ui.six.buttons > .button {\n  width: 16.666%; }\n\n.ui.\\37.buttons > .button, .ui.seven.buttons > .button {\n  width: 14.285%; }\n\n.ui.\\38.buttons > .button, .ui.eight.buttons > .button {\n  width: 12.5%; }\n\n.ui.\\39.buttons > .button, .ui.nine.buttons > .button {\n  width: 11.11%; }\n\n.ui.\\31\\30.buttons > .button, .ui.ten.buttons > .button {\n  width: 10%; }\n\n.ui.\\31\\31.buttons > .button, .ui.eleven.buttons > .button {\n  width: 9.09%; }\n\n.ui.\\31\\32.buttons > .button, .ui.twelve.buttons > .button {\n  width: 8.3333%; }\n\n/* Fluid Vertical Buttons */\n.ui.fluid.vertical.buttons, .ui.fluid.vertical.buttons > .button {\n  display: block;\n  width: auto;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.\\32.vertical.buttons > .button, .ui.two.vertical.buttons > .button {\n  height: 50%; }\n\n.ui.\\33.vertical.buttons > .button, .ui.three.vertical.buttons > .button {\n  height: 33.333%; }\n\n.ui.\\34.vertical.buttons > .button, .ui.four.vertical.buttons > .button {\n  height: 25%; }\n\n.ui.\\35.vertical.buttons > .button, .ui.five.vertical.buttons > .button {\n  height: 20%; }\n\n.ui.\\36.vertical.buttons > .button, .ui.six.vertical.buttons > .button {\n  height: 16.666%; }\n\n.ui.\\37.vertical.buttons > .button, .ui.seven.vertical.buttons > .button {\n  height: 14.285%; }\n\n.ui.\\38.vertical.buttons > .button, .ui.eight.vertical.buttons > .button {\n  height: 12.5%; }\n\n.ui.\\39.vertical.buttons > .button, .ui.nine.vertical.buttons > .button {\n  height: 11.11%; }\n\n.ui.\\31\\30.vertical.buttons > .button, .ui.ten.vertical.buttons > .button {\n  height: 10%; }\n\n.ui.\\31\\31.vertical.buttons > .button, .ui.eleven.vertical.buttons > .button {\n  height: 9.09%; }\n\n.ui.\\31\\32.vertical.buttons > .button, .ui.twelve.vertical.buttons > .button {\n  height: 8.3333%; }\n\n/*-------------------\n       Colors\n--------------------*/\n/*--- Black ---*/\n.ui.black.buttons .button, .ui.black.button {\n  background-color: #5C6166;\n  color: #FFFFFF; }\n\n.ui.black.buttons .button:hover, .ui.black.button:hover {\n  background-color: #4C4C4C;\n  color: #FFFFFF; }\n\n.ui.black.buttons .button:active, .ui.black.button:active {\n  background-color: #333333;\n  color: #FFFFFF; }\n\n/*--- Green ---*/\n.ui.green.buttons .button, .ui.green.button {\n  background-color: #5BBD72;\n  color: #FFFFFF; }\n\n.ui.green.buttons .button:hover, .ui.green.button:hover, .ui.green.buttons .active.button, .ui.green.button.active {\n  background-color: #58cb73;\n  color: #FFFFFF; }\n\n.ui.green.buttons .button:active, .ui.green.button:active {\n  background-color: #4CB164;\n  color: #FFFFFF; }\n\n/*--- Red ---*/\n.ui.red.buttons .button, .ui.red.button {\n  background-color: #D95C5C;\n  color: #FFFFFF; }\n\n.ui.red.buttons .button:hover, .ui.red.button:hover, .ui.red.buttons .active.button, .ui.red.button.active {\n  background-color: #E75859;\n  color: #FFFFFF; }\n\n.ui.red.buttons .button:active, .ui.red.button:active {\n  background-color: #D24B4C;\n  color: #FFFFFF; }\n\n/*--- Orange ---*/\n.ui.orange.buttons .button, .ui.orange.button {\n  background-color: #E96633;\n  color: #FFFFFF; }\n\n.ui.orange.buttons .button:hover, .ui.orange.button:hover, .ui.orange.buttons .active.button, .ui.orange.button.active {\n  background-color: #FF7038;\n  color: #FFFFFF; }\n\n.ui.orange.buttons .button:active, .ui.orange.button:active {\n  background-color: #DA683B;\n  color: #FFFFFF; }\n\n/*--- Blue ---*/\n.ui.blue.buttons .button, .ui.blue.button {\n  background-color: #6ECFF5;\n  color: #FFFFFF; }\n\n.ui.blue.buttons .button:hover, .ui.blue.button:hover, .ui.blue.buttons .active.button, .ui.blue.button.active {\n  background-color: #1AB8F3;\n  color: #FFFFFF; }\n\n.ui.blue.buttons .button:active, .ui.blue.button:active {\n  background-color: #0AA5DF;\n  color: #FFFFFF; }\n\n/*--- Purple ---*/\n.ui.purple.buttons .button, .ui.purple.button {\n  background-color: #564F8A;\n  color: #FFFFFF; }\n\n.ui.purple.buttons .button:hover, .ui.purple.button:hover, .ui.purple.buttons .active.button, .ui.purple.button.active {\n  background-color: #3E3773;\n  color: #FFFFFF; }\n\n.ui.purple.buttons .button:active, .ui.purple.button:active {\n  background-color: #2E2860;\n  color: #FFFFFF; }\n\n/*--- Teal ---*/\n.ui.teal.buttons .button, .ui.teal.button {\n  background-color: #00B5AD;\n  color: #FFFFFF; }\n\n.ui.teal.buttons .button:hover, .ui.teal.button:hover, .ui.teal.buttons .active.button, .ui.teal.button.active {\n  background-color: #009A93;\n  color: #FFFFFF; }\n\n.ui.teal.buttons .button:active, .ui.teal.button:active {\n  background-color: #00847E;\n  color: #FFFFFF; }\n\n/*---------------\n    Positive\n----------------*/\n.ui.positive.buttons .button, .ui.positive.button {\n  background-color: #5BBD72 !important;\n  color: #FFFFFF; }\n\n.ui.positive.buttons .button:hover, .ui.positive.button:hover, .ui.positive.buttons .active.button, .ui.positive.button.active {\n  background-color: #58CB73 !important;\n  color: #FFFFFF; }\n\n.ui.positive.buttons .button:active, .ui.positive.button:active {\n  background-color: #4CB164 !important;\n  color: #FFFFFF; }\n\n/*---------------\n     Negative\n----------------*/\n.ui.negative.buttons .button, .ui.negative.button {\n  background-color: #D95C5C !important;\n  color: #FFFFFF; }\n\n.ui.negative.buttons .button:hover, .ui.negative.button:hover, .ui.negative.buttons .active.button, .ui.negative.button.active {\n  background-color: #E75859 !important;\n  color: #FFFFFF; }\n\n.ui.negative.buttons .button:active, .ui.negative.button:active {\n  background-color: #D24B4C !important;\n  color: #FFFFFF; }\n\n/*******************************\n            Groups\n*******************************/\n.ui.buttons {\n  display: inline-block;\n  vertical-align: middle; }\n\n.ui.buttons:after {\n  content: \".\";\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden; }\n\n.ui.buttons .button:first-child {\n  border-left: none; }\n\n.ui.buttons .button {\n  float: left;\n  border-radius: 0em; }\n\n.ui.buttons .button:first-child {\n  margin-left: 0em;\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em; }\n\n.ui.buttons .button:last-child {\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em; }\n\n/* Vertical  Style */\n.ui.vertical.buttons {\n  display: inline-block; }\n\n.ui.vertical.buttons .button {\n  display: block;\n  float: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.vertical.buttons .button:first-child, .ui.vertical.buttons .mini.button:first-child, .ui.vertical.buttons .tiny.button:first-child, .ui.vertical.buttons .small.button:first-child, .ui.vertical.buttons .massive.button:first-child, .ui.vertical.buttons .huge.button:first-child {\n  margin-top: 0px;\n  border-radius: 0.25em 0.25em 0px 0px; }\n\n.ui.vertical.buttons .button:last-child, .ui.vertical.buttons .mini.button:last-child, .ui.vertical.buttons .tiny.button:last-child, .ui.vertical.buttons .small.button:last-child, .ui.vertical.buttons .massive.button:last-child, .ui.vertical.buttons .huge.button:last-child, .ui.vertical.buttons .gigantic.button:last-child {\n  border-radius: 0px 0px 0.25em 0.25em; }\n\n/*\n * # Semantic - Divider\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Divider\n*******************************/\n.ui.divider {\n  margin: 1rem 0rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.8);\n  line-height: 1;\n  height: 0em;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\n\n.ui.vertical.divider, .ui.horizontal.divider {\n  position: absolute;\n  border: none;\n  height: 0em;\n  margin: 0em;\n  background-color: transparent;\n  font-size: 0.875rem;\n  font-weight: bold;\n  text-align: center;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.8); }\n\n/*--------------\n    Vertical\n---------------*/\n.ui.vertical.divider {\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  left: 50%;\n  margin: 0% 0% 0% -3%;\n  width: 6%;\n  height: 50%;\n  line-height: 0;\n  padding: 0em; }\n\n.ui.vertical.divider:before, .ui.vertical.divider:after {\n  position: absolute;\n  left: 50%;\n  content: \" \";\n  z-index: 3;\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(255, 255, 255, 0.8);\n  width: 0%;\n  height: 80%; }\n\n.ui.vertical.divider:before {\n  top: -100%; }\n\n.ui.vertical.divider:after {\n  top: auto;\n  bottom: 0px; }\n\n/*--------------\n    Horizontal\n---------------*/\n.ui.horizontal.divider {\n  position: relative;\n  top: 0%;\n  left: 0%;\n  margin: 1rem 1.5rem;\n  height: auto;\n  padding: 0em;\n  line-height: 1; }\n\n.ui.horizontal.divider:before, .ui.horizontal.divider:after {\n  position: absolute;\n  content: \" \";\n  z-index: 3;\n  width: 50%;\n  top: 50%;\n  height: 0%;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.8); }\n\n.ui.horizontal.divider:before {\n  left: 0%;\n  margin-left: -1.5rem; }\n\n.ui.horizontal.divider:after {\n  left: auto;\n  right: 0%;\n  margin-right: -1.5rem; }\n\n/*--------------\n      Icon\n---------------*/\n.ui.divider > .icon {\n  margin: 0em;\n  font-size: 1rem;\n  vertical-align: middle; }\n\n/*******************************\n            Variations\n*******************************/\n/*--------------\n    Inverted\n---------------*/\n.ui.divider.inverted {\n  color: #ffffff; }\n\n.ui.vertical.inverted.divider, .ui.horizontal.inverted.divider {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.divider.inverted, .ui.divider.inverted:after, .ui.divider.inverted:before {\n  border-top-color: rgba(0, 0, 0, 0.15);\n  border-bottom-color: rgba(255, 255, 255, 0.15);\n  border-left-color: rgba(0, 0, 0, 0.15);\n  border-right-color: rgba(255, 255, 255, 0.15); }\n\n/*--------------\n    Fitted\n---------------*/\n.ui.fitted.divider {\n  margin: 0em; }\n\n/*--------------\n    Clearing\n---------------*/\n.ui.clearing.divider {\n  clear: both; }\n\n/*--------------\n    Section\n---------------*/\n.ui.section.divider {\n  margin-top: 2rem;\n  margin-bottom: 2rem; }\n\n/*\n * # Semantic - Header\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Header\n*******************************/\n/* Standard */\n.ui.header {\n  border: none;\n  margin: 1em 0em 1rem;\n  padding: 0em;\n  font-size: 1.33em;\n  font-weight: bold;\n  line-height: 1.33; }\n\n.ui.header .sub.header {\n  font-size: 1rem;\n  font-weight: normal;\n  margin: 0em;\n  padding: 0em;\n  line-height: 1.2;\n  color: rgba(0, 0, 0, 0.5); }\n\n.ui.header .icon {\n  display: table-cell;\n  vertical-align: middle;\n  padding-right: 0.5em; }\n\n.ui.header .icon:only-child {\n  display: inline-block;\n  vertical-align: baseline; }\n\n.ui.header .content {\n  display: inline-block;\n  vertical-align: top; }\n\n.ui.header .icon + .content {\n  padding-left: 0.5em;\n  display: table-cell; }\n\n/* Positioning */\n.ui.header:first-child {\n  margin-top: 0em; }\n\n.ui.header:last-child {\n  margin-bottom: 0em; }\n\n.ui.header + p {\n  margin-top: 0em; }\n\n/*--------------\n  Page Heading\n---------------*/\nh1.ui.header {\n  min-height: 1rem;\n  line-height: 1.33;\n  font-size: 2rem; }\n\nh2.ui.header {\n  line-height: 1.33;\n  font-size: 1.75rem; }\n\nh3.ui.header {\n  line-height: 1.33;\n  font-size: 1.33rem; }\n\nh4.ui.header {\n  line-height: 1.33;\n  font-size: 1.1rem; }\n\nh5.ui.header {\n  line-height: 1.2;\n  font-size: 1rem; }\n\n/*--------------\n Content Heading\n---------------*/\n.ui.huge.header {\n  min-height: 1em;\n  font-size: 2em; }\n\n.ui.large.header {\n  font-size: 1.75em; }\n\n.ui.medium.header {\n  font-size: 1.33em; }\n\n.ui.small.header {\n  font-size: 1.1em; }\n\n.ui.tiny.header {\n  font-size: 1em; }\n\n/*******************************\n            Types\n*******************************/\n/*-------------------\n        Icon\n--------------------*/\n.ui.icon.header {\n  display: inline-block;\n  text-align: center; }\n\n.ui.icon.header .icon {\n  float: none;\n  display: block;\n  font-size: 3em;\n  margin: 0em auto 0.2em;\n  padding: 0em; }\n\n.ui.icon.header .content {\n  display: block; }\n\n.ui.icon.header .circular.icon, .ui.icon.header .square.icon {\n  font-size: 2em; }\n\n.ui.block.icon.header .icon {\n  margin-bottom: 0em; }\n\n.ui.icon.header.aligned {\n  margin-left: auto;\n  margin-right: auto;\n  display: block; }\n\n/*******************************\n            States\n*******************************/\n.ui.disabled.header {\n  opacity: 0.5; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n       Colors\n--------------------*/\n.ui.blue.header {\n  color: #6ECFF5 !important; }\n\n.ui.black.header {\n  color: #5C6166 !important; }\n\n.ui.green.header {\n  color: #A1CF64 !important; }\n\n.ui.red.header {\n  color: #D95C5C !important; }\n\n.ui.purple.header {\n  color: #564F8A !important; }\n\n.ui.teal.header {\n  color: #00B5AD !important; }\n\n.ui.blue.dividing.header {\n  border-bottom: 3px solid #6ECFF5; }\n\n.ui.black.dividing.header {\n  border-bottom: 3px solid #5C6166; }\n\n.ui.green.dividing.header {\n  border-bottom: 3px solid #A1CF64; }\n\n.ui.red.dividing.header {\n  border-bottom: 3px solid #D95C5C; }\n\n.ui.purple.dividing.header {\n  border-bottom: 3px solid #564F8A; }\n\n.ui.teal.dividing.header {\n  border-bottom: 3px solid #00B5AD; }\n\n/*-------------------\n      Inverted\n--------------------*/\n.ui.inverted.header {\n  color: #FFFFFF; }\n\n.ui.inverted.header .sub.header {\n  color: rgba(255, 255, 255, 0.85); }\n\n/*-------------------\n   Inverted Colors\n--------------------*/\n.ui.inverted.black.header {\n  background-color: #5C6166 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.blue.header {\n  background-color: #6ECFF5 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.green.header {\n  background-color: #A1CF64 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.red.header {\n  background-color: #D95C5C !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.purple.header {\n  background-color: #564F8A !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.teal.header {\n  background-color: #00B5AD !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.block.header {\n  border-bottom: none; }\n\n/*-------------------\n       Aligned\n--------------------*/\n.ui.left.aligned.header {\n  text-align: left; }\n\n.ui.right.aligned.header {\n  text-align: right; }\n\n.ui.center.aligned.header {\n  text-align: center; }\n\n.ui.justified.header {\n  text-align: justify; }\n\n.ui.justified.header:after {\n  display: inline-block;\n  content: '';\n  width: 100%; }\n\n/*-------------------\n       Floated\n--------------------*/\n.ui.floated.header, .ui.left.floated.header {\n  float: left;\n  margin-top: 0em;\n  margin-right: 0.5em; }\n\n.ui.right.floated.header {\n  float: right;\n  margin-top: 0em;\n  margin-left: 0.5em; }\n\n/*-------------------\n       Fittted\n--------------------*/\n.ui.fitted.header {\n  padding: 0em; }\n\n/*-------------------\n      Dividing\n--------------------*/\n.ui.dividing.header {\n  padding-bottom: 0.2rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\n\n.ui.dividing.header .sub.header {\n  padding-bottom: 0.5em; }\n\n.ui.dividing.header .icon {\n  margin-bottom: 0.2em; }\n\n/*-------------------\n        Block\n--------------------*/\n.ui.block.header {\n  background-color: rgba(0, 0, 0, 0.05);\n  padding: 0.5em 1em; }\n\n/*-------------------\n       Attached\n--------------------*/\n.ui.attached.header {\n  background-color: #E0E0E0;\n  padding: 0.5em 1rem;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.top.attached.header {\n  margin-bottom: 0em;\n  border-radius: 0.3125em 0.3125em 0em 0em; }\n\n.ui.bottom.attached.header {\n  margin-top: 0em;\n  border-radius: 0em 0em 0.3125em 0.3125em; }\n\n/*\n * # Semantic - Icon\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\n *  Font Awesome 3.2.1\n *  the iconic font designed for Bootstrap\n *  ------------------------------------------------------------------------------\n *  The full suite of pictographic icons, examples, and documentation can be\n *  found at http://fon.io.  Stay up to date on Twitter at\n *  http://twitter.com/fon.\n *\n *  License\n *  ------------------------------------------------------------------------------\n *  - The Font Awesome font is licensed under SIL OFL 1.1 -\n *    http://scripts.sil.org/OFL\n\n/*******************************\n             Icon\n*******************************/\n@font-face {\n  font-family: 'Icons';\n  src: url("+__webpack_require__(180)+");\n  src: url("+__webpack_require__(180)+"?#iefix) format('embedded-opentype'), url("+__webpack_require__(181)+"#icons) format('svg'), url("+__webpack_require__(182)+") format('woff'), url("+__webpack_require__(183)+") format('truetype');\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-decoration: inherit;\n  text-transform: none; }\n\ni.icon {\n  display: inline-block;\n  opacity: 0.75;\n  margin: 0em 0.25em 0em 0em;\n  width: 1.23em;\n  height: 1em;\n  font-family: 'Icons';\n  font-style: normal;\n  line-height: 1;\n  font-weight: normal;\n  text-decoration: inherit;\n  text-align: center;\n  speak: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\ni.icon.left:before {\n  content: \"\\f060\"; }\n\ni.icon.right:before {\n  content: \"\\f061\"; }\n\ni.icon.add.sign.box:before {\n  content: \"\\f0fe\"; }\n\ni.icon.add.sign:before {\n  content: \"\\f055\"; }\n\ni.icon.add:before {\n  content: \"\\f067\"; }\n\ni.icon.adjust:before {\n  content: \"\\f042\"; }\n\ni.icon.adn:before {\n  content: \"\\f170\"; }\n\ni.icon.align.center:before {\n  content: \"\\f037\"; }\n\ni.icon.align.justify:before {\n  content: \"\\f039\"; }\n\ni.icon.align.left:before {\n  content: \"\\f036\"; }\n\ni.icon.align.right:before {\n  content: \"\\f038\"; }\n\ni.icon.ambulance:before {\n  content: \"\\f0f9\"; }\n\ni.icon.anchor:before {\n  content: \"\\f13d\"; }\n\ni.icon.android:before {\n  content: \"\\f17b\"; }\n\ni.icon.angle.down:before {\n  content: \"\\f107\"; }\n\ni.icon.angle.left:before {\n  content: \"\\f104\"; }\n\ni.icon.angle.right:before {\n  content: \"\\f105\"; }\n\ni.icon.angle.up:before {\n  content: \"\\f106\"; }\n\ni.icon.apple:before {\n  content: \"\\f179\"; }\n\ni.icon.archive:before {\n  content: \"\\f187\"; }\n\ni.icon.arrow.down:before {\n  content: \"\\f078\"; }\n\ni.icon.arrow.left:before {\n  content: \"\\f053\"; }\n\ni.icon.arrow.right:before {\n  content: \"\\f054\"; }\n\ni.icon.arrow.sign.down:before {\n  content: \"\\f13a\"; }\n\ni.icon.arrow.sign.left:before {\n  content: \"\\f137\"; }\n\ni.icon.arrow.sign.right:before {\n  content: \"\\f138\"; }\n\ni.icon.arrow.sign.up:before {\n  content: \"\\f139\"; }\n\ni.icon.arrow.up:before {\n  content: \"\\f077\"; }\n\ni.icon.asterisk:before {\n  content: \"\\f069\"; }\n\ni.icon.attachment:before {\n  content: \"\\f0c6\"; }\n\ni.icon.attention:before {\n  content: \"\\f06a\"; }\n\ni.icon.backward:before {\n  content: \"\\f04a\"; }\n\ni.icon.ban.circle:before {\n  content: \"\\f05e\"; }\n\ni.icon.bar.chart:before {\n  content: \"\\f080\"; }\n\ni.icon.barcode:before {\n  content: \"\\f02a\"; }\n\ni.icon.beer:before {\n  content: \"\\f0fc\"; }\n\ni.icon.bell.outline:before {\n  content: \"\\f0a2\"; }\n\ni.icon.bell:before {\n  content: \"\\f0f3\"; }\n\ni.icon.bitbucket.sign:before {\n  content: \"\\f172\"; }\n\ni.icon.bitbucket:before {\n  content: \"\\f171\"; }\n\ni.icon.bitcoin:before {\n  content: \"\\f15a\"; }\n\ni.icon.bold:before {\n  content: \"\\f032\"; }\n\ni.icon.bolt:before {\n  content: \"\\f0e7\"; }\n\ni.icon.book:before {\n  content: \"\\f02d\"; }\n\ni.icon.bookmark.empty:before {\n  content: \"\\f097\"; }\n\ni.icon.bookmark:before {\n  content: \"\\f02e\"; }\n\ni.icon.box.arrow.down:before {\n  content: \"\\f150\"; }\n\n/*rtl:ignore*/\ni.icon.box.arrow.right:before {\n  content: \"\\f152\"; }\n\ni.icon.box.arrow.up:before {\n  content: \"\\f151\"; }\n\ni.icon.briefcase:before {\n  content: \"\\f0b1\"; }\n\ni.icon.browser:before {\n  content: \"\\f022\"; }\n\ni.icon.bug:before {\n  content: \"\\f188\"; }\n\ni.icon.building:before {\n  content: \"\\f0f7\"; }\n\ni.icon.bullhorn:before {\n  content: \"\\f0a1\"; }\n\ni.icon.bullseye:before {\n  content: \"\\f140\"; }\n\ni.icon.calendar.empty:before {\n  content: \"\\f133\"; }\n\ni.icon.calendar:before {\n  content: \"\\f073\"; }\n\ni.icon.camera.retro:before {\n  content: \"\\f083\"; }\n\ni.icon.camera:before {\n  content: \"\\f030\"; }\n\ni.icon.triangle.down:before {\n  content: \"\\f0d7\"; }\n\ni.icon.triangle.left:before {\n  content: \"\\f0d9\"; }\n\ni.icon.triangle.right:before {\n  content: \"\\f0da\"; }\n\ni.icon.triangle.up:before {\n  content: \"\\f0d8\"; }\n\ni.icon.cart:before {\n  content: \"\\f07a\"; }\n\ni.icon.certificate:before {\n  content: \"\\f0a3\"; }\n\ni.icon.chat.outline:before {\n  content: \"\\f0e6\"; }\n\ni.icon.chat:before {\n  content: \"\\f086\"; }\n\ni.icon.checkbox.empty:before {\n  content: \"\\f096\"; }\n\ni.icon.checkbox.minus:before {\n  content: \"\\f147\"; }\n\ni.icon.checked.checkbox:before {\n  content: \"\\f046\"; }\n\ni.icon.checkmark.sign:before {\n  content: \"\\f14a\"; }\n\ni.icon.checkmark:before {\n  content: \"\\f00c\"; }\n\ni.icon.circle.blank:before {\n  content: \"\\f10c\"; }\n\ni.icon.circle.down:before {\n  content: \"\\f0ab\"; }\n\ni.icon.circle.left:before {\n  content: \"\\f0a8\"; }\n\ni.icon.circle.right:before {\n  content: \"\\f0a9\"; }\n\ni.icon.circle.up:before {\n  content: \"\\f0aa\"; }\n\ni.icon.circle:before {\n  content: \"\\f111\"; }\n\ni.icon.cloud.download:before {\n  content: \"\\f0ed\"; }\n\ni.icon.cloud.upload:before {\n  content: \"\\f0ee\"; }\n\ni.icon.cloud:before {\n  content: \"\\f0c2\"; }\n\ni.icon.code.fork:before {\n  content: \"\\f126\"; }\n\ni.icon.code:before {\n  content: \"\\f121\"; }\n\ni.icon.coffee:before {\n  content: \"\\f0f4\"; }\n\ni.icon.collapse:before {\n  content: \"\\f117\"; }\n\ni.icon.comment.outline:before {\n  content: \"\\f0e5\"; }\n\ni.icon.comment:before {\n  content: \"\\f075\"; }\n\ni.icon.copy:before {\n  content: \"\\f0c5\"; }\n\ni.icon.crop:before {\n  content: \"\\f125\"; }\n\ni.icon.css3:before {\n  content: \"\\f13c\"; }\n\ni.icon.cut:before {\n  content: \"\\f0c4\"; }\n\ni.icon.dashboard:before {\n  content: \"\\f0e4\"; }\n\ni.icon.desktop:before {\n  content: \"\\f108\"; }\n\ni.icon.doctor:before {\n  content: \"\\f0f0\"; }\n\ni.icon.dollar:before {\n  content: \"\\f155\"; }\n\ni.icon.double.angle.down:before {\n  content: \"\\f103\"; }\n\ni.icon.double.angle.left:before {\n  content: \"\\f100\"; }\n\ni.icon.double.angle.right:before {\n  content: \"\\f101\"; }\n\ni.icon.double.angle.up:before {\n  content: \"\\f102\"; }\n\ni.icon.down:before {\n  content: \"\\f063\"; }\n\ni.icon.download.disk:before {\n  content: \"\\f019\"; }\n\ni.icon.download:before {\n  content: \"\\f01a\"; }\n\ni.icon.dribbble:before {\n  content: \"\\f17d\"; }\n\ni.icon.dropbox:before {\n  content: \"\\f16b\"; }\n\ni.icon.edit.sign:before {\n  content: \"\\f14b\"; }\n\ni.icon.edit:before {\n  content: \"\\f044\"; }\n\ni.icon.eject:before {\n  content: \"\\f052\"; }\n\ni.icon.ellipsis.horizontal:before {\n  content: \"\\f141\"; }\n\ni.icon.ellipsis.vertical:before {\n  content: \"\\f142\"; }\n\ni.icon.eraser:before {\n  content: \"\\f12d\"; }\n\ni.icon.euro:before {\n  content: \"\\f153\"; }\n\ni.icon.exchange:before {\n  content: \"\\f0ec\"; }\n\ni.icon.exclamation:before {\n  content: \"\\f12a\"; }\n\ni.icon.expand:before {\n  content: \"\\f116\"; }\n\ni.icon.external.url.sign:before {\n  content: \"\\f14c\"; }\n\ni.icon.external.url:before {\n  content: \"\\f08e\"; }\n\ni.icon.facebook.sign:before {\n  content: \"\\f082\"; }\n\ni.icon.facebook:before {\n  content: \"\\f09a\"; }\n\ni.icon.facetime.video:before {\n  content: \"\\f03d\"; }\n\ni.icon.fast.backward:before {\n  content: \"\\f049\"; }\n\ni.icon.fast.forward:before {\n  content: \"\\f050\"; }\n\ni.icon.female:before {\n  content: \"\\f182\"; }\n\ni.icon.fighter.jet:before {\n  content: \"\\f0fb\"; }\n\ni.icon.file.outline:before {\n  content: \"\\f016\"; }\n\ni.icon.file.text.outline:before {\n  content: \"\\f0f6\"; }\n\ni.icon.file.text:before {\n  content: \"\\f15c\"; }\n\ni.icon.file:before {\n  content: \"\\f15b\"; }\n\ni.icon.filter:before {\n  content: \"\\f0b0\"; }\n\ni.icon.fire.extinguisher:before {\n  content: \"\\f134\"; }\n\ni.icon.fire:before {\n  content: \"\\f06d\"; }\n\ni.icon.flag.checkered:before {\n  content: \"\\f11e\"; }\n\ni.icon.flag.empty:before {\n  content: \"\\f11d\"; }\n\ni.icon.flag:before {\n  content: \"\\f024\"; }\n\ni.icon.flickr:before {\n  content: \"\\f16e\"; }\n\ni.icon.folder.open.outline:before {\n  content: \"\\f115\"; }\n\ni.icon.folder.open:before {\n  content: \"\\f07c\"; }\n\ni.icon.folder.outline:before {\n  content: \"\\f114\"; }\n\ni.icon.folder:before {\n  content: \"\\f07b\"; }\n\ni.icon.font:before {\n  content: \"\\f031\"; }\n\ni.icon.food:before {\n  content: \"\\f0f5\"; }\n\ni.icon.forward.mail:before {\n  content: \"\\f064\"; }\n\ni.icon.forward:before {\n  content: \"\\f04e\"; }\n\ni.icon.foursquare:before {\n  content: \"\\f180\"; }\n\ni.icon.frown:before {\n  content: \"\\f119\"; }\n\ni.icon.fullscreen:before {\n  content: \"\\f0b2\"; }\n\ni.icon.gamepad:before {\n  content: \"\\f11b\"; }\n\ni.icon.gift:before {\n  content: \"\\f06b\"; }\n\ni.icon.github.alternate:before {\n  content: \"\\f09b\"; }\n\ni.icon.github.sign:before {\n  content: \"\\f092\"; }\n\ni.icon.github:before {\n  content: \"\\f113\"; }\n\ni.icon.gittip:before {\n  content: \"\\f184\"; }\n\ni.icon.glass:before {\n  content: \"\\f000\"; }\n\ni.icon.globe:before {\n  content: \"\\f0ac\"; }\n\ni.icon.google.plus.sign:before {\n  content: \"\\f0d4\"; }\n\ni.icon.google.plus:before {\n  content: \"\\f0d5\"; }\n\ni.icon.h.sign:before {\n  content: \"\\f0fd\"; }\n\ni.icon.hand.down:before {\n  content: \"\\f0a7\"; }\n\ni.icon.hand.left:before {\n  content: \"\\f0a5\"; }\n\ni.icon.hand.right:before {\n  content: \"\\f0a4\"; }\n\ni.icon.hand.up:before {\n  content: \"\\f0a6\"; }\n\ni.icon.hdd:before {\n  content: \"\\f0a0\"; }\n\ni.icon.headphones:before {\n  content: \"\\f025\"; }\n\ni.icon.heart.empty:before {\n  content: \"\\f08a\"; }\n\ni.icon.heart:before {\n  content: \"\\f004\"; }\n\ni.icon.help:before {\n  content: \"\\f059\"; }\n\ni.icon.hide:before {\n  content: \"\\f070\"; }\n\ni.icon.home:before {\n  content: \"\\f015\"; }\n\ni.icon.hospital:before {\n  content: \"\\f0f8\"; }\n\ni.icon.html5:before {\n  content: \"\\f13b\"; }\n\ni.icon.inbox:before {\n  content: \"\\f01c\"; }\n\ni.icon.indent.left:before {\n  content: \"\\f03b\"; }\n\ni.icon.indent.right:before {\n  content: \"\\f03c\"; }\n\ni.icon.info.letter:before {\n  content: \"\\f129\"; }\n\ni.icon.info:before {\n  content: \"\\f05a\"; }\n\ni.icon.instagram:before {\n  content: \"\\f16d\"; }\n\ni.icon.italic:before {\n  content: \"\\f033\"; }\n\ni.icon.key:before {\n  content: \"\\f084\"; }\n\ni.icon.keyboard:before {\n  content: \"\\f11c\"; }\n\ni.icon.lab:before {\n  content: \"\\f0c3\"; }\n\ni.icon.laptop:before {\n  content: \"\\f109\"; }\n\ni.icon.layout.block:before {\n  content: \"\\f009\"; }\n\ni.icon.layout.column:before {\n  content: \"\\f0db\"; }\n\ni.icon.layout.grid:before {\n  content: \"\\f00a\"; }\n\ni.icon.layout.list:before {\n  content: \"\\f00b\"; }\n\ni.icon.leaf:before {\n  content: \"\\f06c\"; }\n\ni.icon.legal:before {\n  content: \"\\f0e3\"; }\n\ni.icon.lemon:before {\n  content: \"\\f094\"; }\n\ni.icon.level.down:before {\n  content: \"\\f149\"; }\n\ni.icon.level.up:before {\n  content: \"\\f148\"; }\n\ni.icon.lightbulb:before {\n  content: \"\\f0eb\"; }\n\ni.icon.linkedin.sign:before {\n  content: \"\\f08c\"; }\n\ni.icon.linkedin:before {\n  content: \"\\f0e1\"; }\n\ni.icon.linux:before {\n  content: \"\\f17c\"; }\n\ni.icon.list.ordered:before {\n  content: \"\\f0cb\"; }\n\ni.icon.list.unordered:before {\n  content: \"\\f0ca\"; }\n\ni.icon.list:before {\n  content: \"\\f03a\"; }\n\ni.icon.loading:before {\n  content: \"\\f110\"; }\n\ni.icon.location:before {\n  content: \"\\f124\"; }\n\ni.icon.lock:before {\n  content: \"\\f023\"; }\n\ni.icon.long.arrow.down:before {\n  content: \"\\f175\"; }\n\ni.icon.long.arrow.left:before {\n  content: \"\\f177\"; }\n\ni.icon.long.arrow.right:before {\n  content: \"\\f178\"; }\n\ni.icon.long.arrow.up:before {\n  content: \"\\f176\"; }\n\ni.icon.magic:before {\n  content: \"\\f0d0\"; }\n\ni.icon.magnet:before {\n  content: \"\\f076\"; }\n\ni.icon.mail.outline:before {\n  content: \"\\f003\"; }\n\ni.icon.mail.reply:before {\n  content: \"\\f112\"; }\n\ni.icon.mail:before {\n  content: \"\\f0e0\"; }\n\ni.icon.male:before {\n  content: \"\\f183\"; }\n\ni.icon.map.marker:before {\n  content: \"\\f041\"; }\n\ni.icon.map:before {\n  content: \"\\f14e\"; }\n\ni.icon.maxcdn:before {\n  content: \"\\f136\"; }\n\ni.icon.medkit:before {\n  content: \"\\f0fa\"; }\n\ni.icon.meh:before {\n  content: \"\\f11a\"; }\n\ni.icon.minus.sign.alternate:before {\n  content: \"\\f146\"; }\n\ni.icon.minus.sign:before {\n  content: \"\\f056\"; }\n\ni.icon.minus:before {\n  content: \"\\f068\"; }\n\ni.icon.mobile:before {\n  content: \"\\f10b\"; }\n\ni.icon.money:before {\n  content: \"\\f0d6\"; }\n\ni.icon.moon:before {\n  content: \"\\f186\"; }\n\ni.icon.move:before {\n  content: \"\\f047\"; }\n\ni.icon.music:before {\n  content: \"\\f001\"; }\n\ni.icon.mute:before {\n  content: \"\\f131\"; }\n\ni.icon.off:before {\n  content: \"\\f011\"; }\n\ni.icon.ok.circle:before {\n  content: \"\\f05d\"; }\n\ni.icon.ok.sign:before {\n  content: \"\\f058\"; }\n\ni.icon.paste:before {\n  content: \"\\f0ea\"; }\n\ni.icon.pause:before {\n  content: \"\\f04c\"; }\n\ni.icon.payment:before {\n  content: \"\\f09d\"; }\n\ni.icon.pencil:before {\n  content: \"\\f040\"; }\n\ni.icon.phone.sign:before {\n  content: \"\\f098\"; }\n\ni.icon.phone:before {\n  content: \"\\f095\"; }\n\ni.icon.photo:before {\n  content: \"\\f03e\"; }\n\ni.icon.pin:before {\n  content: \"\\f08d\"; }\n\ni.icon.pinterest.sign:before {\n  content: \"\\f0d3\"; }\n\ni.icon.pinterest:before {\n  content: \"\\f0d2\"; }\n\ni.icon.plane:before {\n  content: \"\\f072\"; }\n\ni.icon.play.circle:before {\n  content: \"\\f01d\"; }\n\ni.icon.play.sign:before {\n  content: \"\\f144\"; }\n\ni.icon.play:before {\n  content: \"\\f04b\"; }\n\ni.icon.pound:before {\n  content: \"\\f154\"; }\n\ni.icon.print:before {\n  content: \"\\f02f\"; }\n\ni.icon.puzzle.piece:before {\n  content: \"\\f12e\"; }\n\ni.icon.qr.code:before {\n  content: \"\\f029\"; }\n\ni.icon.question:before {\n  content: \"\\f128\"; }\n\ni.icon.quote.left:before {\n  content: \"\\f10d\"; }\n\ni.icon.quote.right:before {\n  content: \"\\f10e\"; }\n\ni.icon.refresh:before {\n  content: \"\\f021\"; }\n\ni.icon.remove.circle:before {\n  content: \"\\f05c\"; }\n\ni.icon.remove.sign:before {\n  content: \"\\f057\"; }\n\ni.icon.remove:before {\n  content: \"\\f00d\"; }\n\ni.icon.renren:before {\n  content: \"\\f18b\"; }\n\ni.icon.reorder:before {\n  content: \"\\f0c9\"; }\n\ni.icon.repeat:before {\n  content: \"\\f01e\"; }\n\ni.icon.reply.all.mail:before {\n  content: \"\\f122\"; }\n\ni.icon.resize.full:before {\n  content: \"\\f065\"; }\n\ni.icon.resize.horizontal:before {\n  content: \"\\f07e\"; }\n\ni.icon.resize.small:before {\n  content: \"\\f066\"; }\n\ni.icon.resize.vertical:before {\n  content: \"\\f07d\"; }\n\ni.icon.retweet:before {\n  content: \"\\f079\"; }\n\ni.icon.road:before {\n  content: \"\\f018\"; }\n\ni.icon.rocket:before {\n  content: \"\\f135\"; }\n\ni.icon.rss.sign:before {\n  content: \"\\f143\"; }\n\ni.icon.rss:before {\n  content: \"\\f09e\"; }\n\ni.icon.rupee:before {\n  content: \"\\f156\"; }\n\ni.icon.save:before {\n  content: \"\\f0c7\"; }\n\ni.icon.screenshot:before {\n  content: \"\\f05b\"; }\n\ni.icon.search:before {\n  content: \"\\f002\"; }\n\ni.icon.setting:before {\n  content: \"\\f013\"; }\n\ni.icon.settings:before {\n  content: \"\\f085\"; }\n\ni.icon.share.sign:before {\n  content: \"\\f14d\"; }\n\ni.icon.share:before {\n  content: \"\\f045\"; }\n\ni.icon.shield:before {\n  content: \"\\f132\"; }\n\ni.icon.shuffle:before {\n  content: \"\\f074\"; }\n\ni.icon.sign.in:before {\n  content: \"\\f090\"; }\n\ni.icon.sign.out:before {\n  content: \"\\f08b\"; }\n\ni.icon.sign:before {\n  content: \"\\f0c8\"; }\n\ni.icon.signal:before {\n  content: \"\\f012\"; }\n\ni.icon.sitemap:before {\n  content: \"\\f0e8\"; }\n\ni.icon.skype:before {\n  content: \"\\f17e\"; }\n\ni.icon.smile:before {\n  content: \"\\f118\"; }\n\ni.icon.sort.ascending:before {\n  content: \"\\f0de\"; }\n\ni.icon.sort.descending:before {\n  content: \"\\f0dd\"; }\n\ni.icon.sort.alphabet.descending:before {\n  content: \"\\f15e\"; }\n\ni.icon.sort.alphabet:before {\n  content: \"\\f15d\"; }\n\ni.icon.sort.attributes.descending:before {\n  content: \"\\f161\"; }\n\ni.icon.sort.attributes:before {\n  content: \"\\f160\"; }\n\ni.icon.sort.order.descending:before {\n  content: \"\\f163\"; }\n\ni.icon.sort.order:before {\n  content: \"\\f162\"; }\n\ni.icon.sort:before {\n  content: \"\\f0dc\"; }\n\ni.icon.stackexchange:before {\n  content: \"\\f16c\"; }\n\ni.icon.star.empty:before {\n  content: \"\\f006\"; }\n\ni.icon.star.half.empty:before {\n  content: \"\\f123\"; }\n\ni.icon.star.half.full:before, i.icon.star.half:before {\n  content: \"\\f089\"; }\n\ni.icon.star:before {\n  content: \"\\f005\"; }\n\ni.icon.step.backward:before {\n  content: \"\\f048\"; }\n\ni.icon.step.forward:before {\n  content: \"\\f051\"; }\n\ni.icon.stethoscope:before {\n  content: \"\\f0f1\"; }\n\ni.icon.stop:before {\n  content: \"\\f04d\"; }\n\ni.icon.strikethrough:before {\n  content: \"\\f0cc\"; }\n\ni.icon.subscript:before {\n  content: \"\\f12c\"; }\n\ni.icon.suitcase:before {\n  content: \"\\f0f2\"; }\n\ni.icon.sun:before {\n  content: \"\\f185\"; }\n\ni.icon.superscript:before {\n  content: \"\\f12b\"; }\n\ni.icon.table:before {\n  content: \"\\f0ce\"; }\n\ni.icon.tablet:before {\n  content: \"\\f10a\"; }\n\ni.icon.tag:before {\n  content: \"\\f02b\"; }\n\ni.icon.tags:before {\n  content: \"\\f02c\"; }\n\ni.icon.tasks:before {\n  content: \"\\f0ae\"; }\n\ni.icon.terminal:before {\n  content: \"\\f120\"; }\n\ni.icon.text.height:before {\n  content: \"\\f034\"; }\n\ni.icon.text.width:before {\n  content: \"\\f035\"; }\n\ni.icon.thumbs.down.outline:before {\n  content: \"\\f088\"; }\n\ni.icon.thumbs.down:before {\n  content: \"\\f165\"; }\n\ni.icon.thumbs.up.outline:before {\n  content: \"\\f087\"; }\n\ni.icon.thumbs.up:before {\n  content: \"\\f164\"; }\n\ni.icon.ticket:before {\n  content: \"\\f145\"; }\n\ni.icon.time:before {\n  content: \"\\f017\"; }\n\ni.icon.tint:before {\n  content: \"\\f043\"; }\n\ni.icon.trash:before {\n  content: \"\\f014\"; }\n\ni.icon.trello:before {\n  content: \"\\f181\"; }\n\ni.icon.trophy:before {\n  content: \"\\f091\"; }\n\ni.icon.truck:before {\n  content: \"\\f0d1\"; }\n\ni.icon.tumblr.sign:before {\n  content: \"\\f174\"; }\n\ni.icon.tumblr:before {\n  content: \"\\f173\"; }\n\ni.icon.twitter.sign:before {\n  content: \"\\f081\"; }\n\ni.icon.twitter:before {\n  content: \"\\f099\"; }\n\ni.icon.umbrella:before {\n  content: \"\\f0e9\"; }\n\ni.icon.underline:before {\n  content: \"\\f0cd\"; }\n\ni.icon.undo:before {\n  content: \"\\f0e2\"; }\n\ni.icon.unhide:before {\n  content: \"\\f06e\"; }\n\ni.icon.unlink:before {\n  content: \"\\f127\"; }\n\ni.icon.unlock.alternate:before {\n  content: \"\\f13e\"; }\n\ni.icon.unlock:before {\n  content: \"\\f09c\"; }\n\ni.icon.unmute:before {\n  content: \"\\f130\"; }\n\ni.icon.up:before {\n  content: \"\\f062\"; }\n\ni.icon.upload.disk:before {\n  content: \"\\f093\"; }\n\ni.icon.upload:before {\n  content: \"\\f01b\"; }\n\ni.icon.url:before {\n  content: \"\\f0c1\"; }\n\ni.icon.user:before {\n  content: \"\\f007\"; }\n\ni.icon.users:before {\n  content: \"\\f0c0\"; }\n\ni.icon.video:before {\n  content: \"\\f008\"; }\n\ni.icon.vk:before {\n  content: \"\\f189\"; }\n\ni.icon.volume.down:before {\n  content: \"\\f027\"; }\n\ni.icon.volume.off:before {\n  content: \"\\f026\"; }\n\ni.icon.volume.up:before {\n  content: \"\\f028\"; }\n\ni.icon.warning:before {\n  content: \"\\f071\"; }\n\ni.icon.weibo:before {\n  content: \"\\f18a\"; }\n\ni.icon.windows:before {\n  content: \"\\f17a\"; }\n\ni.icon.won:before {\n  content: \"\\f159\"; }\n\ni.icon.wrench:before {\n  content: \"\\f0ad\"; }\n\ni.icon.xing.sign:before {\n  content: \"\\f169\"; }\n\ni.icon.xing:before {\n  content: \"\\f168\"; }\n\ni.icon.yen:before {\n  content: \"\\f157\"; }\n\ni.icon.youtube.play:before {\n  content: \"\\f16a\"; }\n\ni.icon.youtube.sign:before {\n  content: \"\\f166\"; }\n\ni.icon.youtube:before {\n  content: \"\\f167\"; }\n\ni.icon.yuan:before {\n  content: \"\\f158\"; }\n\ni.icon.zoom.in:before {\n  content: \"\\f00e\"; }\n\ni.icon.zoom.out:before {\n  content: \"\\f010\"; }\n\n/*--------------\n    Aliases\n---------------*/\ni.icon.check:before {\n  content: \"\\f00c\"; }\n\ni.icon.close:before {\n  content: \"\\f00d\"; }\n\ni.icon.delete:before {\n  content: \"\\f00d\"; }\n\ni.icon.like:before {\n  content: \"\\f004\"; }\n\ni.icon.plus:before {\n  content: \"\\f067\"; }\n\ni.icon.signup:before {\n  content: \"\\f044\"; }\n\n/*--------------\n   Spacing Fix\n---------------*/\n/* stars are usually consecutive */\ni.icon.star {\n  width: auto;\n  margin: 0em; }\n\n/* left side icons */\ni.icon.left {\n  width: auto;\n  margin: 0em 0.5em 0em 0em; }\n\n/* right side icons */\ni.icon.search, i.icon.right {\n  width: auto;\n  margin: 0em 0em 0em 0.5em; }\n\n/*******************************\n             Types\n*******************************/\n/*--------------\n    Loading\n---------------*/\ni.icon.loading {\n  -webkit-animation: icon-loading 2s linear infinite;\n  -moz-animation: icon-loading 2s linear infinite;\n  -ms-animation: icon-loading 2s linear infinite;\n  animation: icon-loading 2s linear infinite; }\n\n@keyframes icon-loading {\n  from {\n    -webkit-transform: rotate(0deg);\n    -moz-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg); }\n\n  to {\n    -webkit-transform: rotate(360deg);\n    -moz-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n    transform: rotate(360deg); } }\n\n@-moz-keyframes icon-loading {\n  from {\n    -moz-transform: rotate(0deg);\n    transform: rotate(0deg); }\n\n  to {\n    -moz-transform: rotate(360deg);\n    transform: rotate(360deg); } }\n\n@-webkit-keyframes icon-loading {\n  from {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg); }\n\n  to {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg); } }\n\n@-ms-keyframes icon-loading {\n  from {\n    -ms-transform: rotate(0deg);\n    transform: rotate(0deg); }\n\n  to {\n    -ms-transform: rotate(360deg);\n    transform: rotate(360deg); } }\n\n/*******************************\n             States\n*******************************/\ni.icon.hover {\n  opacity: 1; }\n\ni.icon.active {\n  opacity: 1; }\n\ni.emphasized.icon {\n  opacity: 1; }\n\ni.icon.disabled {\n  opacity: 0.3; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n         Link\n--------------------*/\ni.link.icon {\n  cursor: pointer;\n  opacity: 0.7;\n  -webkit-transition: opacity 0.3s ease-out;\n  -moz-transition: opacity 0.3s ease-out;\n  transition: opacity 0.3s ease-out; }\n\ni.link.icon:hover {\n  opacity: 1 !important; }\n\n/*-------------------\n      Circular\n--------------------*/\ni.circular.icon {\n  border-radius: 500em !important;\n  padding: 0.5em 0.35em !important;\n  -webkit-box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  line-height: 1 !important;\n  width: 2em !important;\n  height: 2em !important; }\n\ni.circular.inverted.icon {\n  border: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*-------------------\n      Flipped\n--------------------*/\ni.flipped.icon, i.horizontally.flipped.icon {\n  -webkit-transform: scale(-1, 1);\n  -moz-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1); }\n\ni.vertically.flipped.icon {\n  -webkit-transform: scale(1, -1);\n  -moz-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1); }\n\n/*-------------------\n      Rotated\n--------------------*/\ni.rotated.icon, i.right.rotated.icon, i.clockwise.rotated.icon {\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg); }\n\ni.left.rotated.icon, i.counterclockwise.rotated.icon {\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  transform: rotate(-90deg); }\n\n/*-------------------\n        Square\n--------------------*/\ni.square.icon {\n  width: 2em;\n  height: 2em;\n  padding: 0.5em 0.35em !important;\n  -webkit-box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0em 0em 0em 0.1em rgba(0, 0, 0, 0.1) inset;\n  vertical-align: baseline; }\n\ni.square.inverted.icon {\n  border: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*-------------------\n      Inverted\n--------------------*/\ni.inverted.icon {\n  background-color: #222222;\n  color: #FFFFFF;\n  -moz-osx-font-smoothing: grayscale; }\n\n/*-------------------\n       Colors\n--------------------*/\ni.blue.icon {\n  color: #6ECFF5 !important; }\n\ni.black.icon {\n  color: #5C6166 !important; }\n\ni.green.icon {\n  color: #A1CF64 !important; }\n\ni.red.icon {\n  color: #D95C5C !important; }\n\ni.purple.icon {\n  color: #564F8A !important; }\n\ni.orange.icon {\n  color: #F05940 !important; }\n\ni.teal.icon {\n  color: #00B5AD !important; }\n\n/*-------------------\n   Inverted Colors\n--------------------*/\ni.inverted.black.icon {\n  background-color: #5C6166 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.blue.icon {\n  background-color: #6ECFF5 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.green.icon {\n  background-color: #A1CF64 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.red.icon {\n  background-color: #D95C5C !important;\n  color: #FFFFFF !important; }\n\ni.inverted.purple.icon {\n  background-color: #564F8A !important;\n  color: #FFFFFF !important; }\n\ni.inverted.orange.icon {\n  background-color: #F05940 !important;\n  color: #FFFFFF !important; }\n\ni.inverted.teal.icon {\n  background-color: #00B5AD !important;\n  color: #FFFFFF !important; }\n\n/*-------------------\n        Sizes\n--------------------*/\ni.small.icon {\n  font-size: 0.875em; }\n\ni.icon {\n  font-size: 1em; }\n\ni.large.icon {\n  font-size: 1.5em;\n  vertical-align: middle; }\n\ni.big.icon {\n  font-size: 2em;\n  vertical-align: middle; }\n\ni.huge.icon {\n  font-size: 4em;\n  vertical-align: middle; }\n\ni.massive.icon {\n  font-size: 8em;\n  vertical-align: middle; }\n\n/*\n * # Semantic - Image\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n             Image\n*******************************/\n.ui.image {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 100%;\n  background-color: rgba(0, 0, 0, 0.05); }\n\nimg.ui.image {\n  display: block;\n  background: none; }\n\n.ui.image img {\n  display: block;\n  max-width: 100%;\n  height: auto; }\n\n/*******************************\n            States\n*******************************/\n.ui.disabled.image {\n  cursor: default;\n  opacity: 0.3; }\n\n/*******************************\n          Variations\n*******************************/\n/*--------------\n     Rounded\n---------------*/\n.ui.rounded.images .image, .ui.rounded.images img, .ui.rounded.image img, .ui.rounded.image {\n  border-radius: 0.3125em; }\n\n/*--------------\n     Circular\n---------------*/\n.ui.circular.images .image, .ui.circular.images img, .ui.circular.image img, .ui.circular.image {\n  border-radius: 500rem; }\n\n/*--------------\n     Fluid\n---------------*/\n.ui.fluid.images, .ui.fluid.image, .ui.fluid.images img, .ui.fluid.image img {\n  display: block;\n  width: 100%; }\n\n/*--------------\n     Avatar\n---------------*/\n.ui.avatar.images .image, .ui.avatar.images img, .ui.avatar.image img, .ui.avatar.image {\n  margin-right: 0.5em;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  border-radius: 500rem; }\n\n/*-------------------\n       Floated\n--------------------*/\n.ui.floated.image, .ui.floated.images {\n  float: left;\n  margin-right: 1em;\n  margin-bottom: 1em; }\n\n.ui.right.floated.images, .ui.right.floated.image {\n  float: right;\n  margin-bottom: 1em;\n  margin-left: 1em; }\n\n/*--------------\n     Sizes\n---------------*/\n.ui.tiny.images .image, .ui.tiny.images img, .ui.tiny.image {\n  width: 20px;\n  font-size: 0.7rem; }\n\n.ui.mini.images .image, .ui.mini.images img, .ui.mini.image {\n  width: 35px;\n  font-size: 0.8rem; }\n\n.ui.small.images .image, .ui.small.images img, .ui.small.image {\n  width: 80px;\n  font-size: 0.9rem; }\n\n.ui.medium.images .image, .ui.medium.images img, .ui.medium.image {\n  width: 300px;\n  font-size: 1rem; }\n\n.ui.large.images .image, .ui.large.images img, .ui.large.image {\n  width: 450px;\n  font-size: 1.1rem; }\n\n.ui.huge.images .image, .ui.huge.images img, .ui.huge.image {\n  width: 600px;\n  font-size: 1.2rem; }\n\n/*******************************\n              Groups\n*******************************/\n.ui.images {\n  font-size: 0em;\n  margin: 0em -0.25rem 0rem; }\n\n.ui.images .image, .ui.images img {\n  display: inline-block;\n  margin: 0em 0.25em 0.5em; }\n\n/*\n * # Semantic - Input\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Standard\n*******************************/\n/*--------------------\n        Inputs\n---------------------*/\n.ui.input {\n  display: inline-block;\n  position: relative;\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.input input {\n  width: 100%;\n  font-family: \"Helvetica Neue\", \"Helvetica\", Arial;\n  margin: 0em;\n  padding: 0.65em 1em;\n  font-size: 1em;\n  background-color: #FFFFFF;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  outline: none;\n  color: rgba(0, 0, 0, 0.7);\n  border-radius: 0.3125em;\n  -webkit-transition: background-color 0.3s ease-out, -webkit-box-shadow 0.2s ease, border-color 0.2s ease;\n  -moz-transition: background-color 0.3s ease-out, box-shadow 0.2s ease, border-color 0.2s ease;\n  transition: background-color 0.3s ease-out, box-shadow 0.2s ease, border-color 0.2s ease;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*--------------------\n      Placeholder\n---------------------*/\n/* browsers require these rules separate */\n.ui.input::-webkit-input-placeholder {\n  color: #BBBBBB; }\n\n.ui.input::-moz-placeholder {\n  color: #BBBBBB; }\n\n/*******************************\n            States\n*******************************/\n/*--------------------\n        Active\n---------------------*/\n.ui.input input:active, .ui.input.down input {\n  border-color: rgba(0, 0, 0, 0.3);\n  background-color: #FAFAFA; }\n\n/*--------------------\n        Loading\n---------------------*/\n.ui.loading.input > .icon {\n  background: url("+__webpack_require__(169)+") no-repeat 50% 50%; }\n\n.ui.loading.input > .icon:before, .ui.loading.input > .icon:after {\n  display: none; }\n\n/*--------------------\n        Focus\n---------------------*/\n.ui.input.focus input, .ui.input input:focus {\n  border-color: rgba(0, 0, 0, 0.2);\n  color: rgba(0, 0, 0, 0.85); }\n\n.ui.input.focus input input::-webkit-input-placeholder, .ui.input input:focus input::-webkit-input-placeholder {\n  color: #AAAAAA; }\n\n.ui.input.focus input input::-moz-placeholder, .ui.input input:focus input::-moz-placeholder {\n  color: #AAAAAA; }\n\n/*--------------------\n        Error\n---------------------*/\n.ui.input.error input {\n  background-color: #FFFAFA;\n  border-color: #E7BEBE;\n  color: #D95C5C; }\n\n/* Error Placeholder */\n.ui.input.error input ::-webkit-input-placeholder {\n  color: rgba(255, 80, 80, 0.4); }\n\n.ui.input.error input ::-moz-placeholder {\n  color: rgba(255, 80, 80, 0.4); }\n\n.ui.input.error input :focus::-webkit-input-placeholder {\n  color: rgba(255, 80, 80, 0.7); }\n\n.ui.input.error input :focus::-moz-placeholder {\n  color: rgba(255, 80, 80, 0.7); }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------------\n      Transparent\n---------------------*/\n.ui.transparent.input input {\n  border: none;\n  background-color: transparent; }\n\n/*--------------------\n         Icon\n---------------------*/\n.ui.icon.input > .icon {\n  cursor: default;\n  position: absolute;\n  opacity: 0.5;\n  top: 0px;\n  right: 0px;\n  margin: 0em;\n  width: 2.6em;\n  height: 100%;\n  padding-top: 0.82em;\n  text-align: center;\n  border-radius: 0em 0.3125em 0.3125em 0em;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-transition: opacity 0.3s ease-out;\n  -moz-transition: opacity 0.3s ease-out;\n  transition: opacity 0.3s ease-out; }\n\n.ui.icon.input > .link.icon {\n  cursor: pointer; }\n\n.ui.icon.input input {\n  padding-right: 3em !important; }\n\n.ui.icon.input > .circular.icon {\n  top: 0.35em;\n  right: 0.5em; }\n\n/* Left Side */\n.ui.left.icon.input > .icon {\n  right: auto;\n  left: 1px;\n  border-radius: 0.3125em 0em 0em 0.3125em; }\n\n.ui.left.icon.input > .circular.icon {\n  right: auto;\n  left: 0.5em; }\n\n.ui.left.icon.input > input {\n  padding-left: 3em !important;\n  padding-right: 1.2em !important; }\n\n/* Focus */\n.ui.icon.input > input:focus ~ .icon {\n  opacity: 1; }\n\n/*--------------------\n        Labeled\n---------------------*/\n.ui.labeled.input .corner.label {\n  font-size: 0.7em;\n  border-radius: 0 0.3125em; }\n\n.ui.labeled.input .left.corner.label {\n  border-radius: 0.3125em 0; }\n\n.ui.labeled.input input {\n  padding-right: 2.5em !important; }\n\n/* Spacing with corner label */\n.ui.labeled.icon.input:not(.left) > input {\n  padding-right: 3.25em !important; }\n\n.ui.labeled.icon.input:not(.left) > .icon {\n  margin-right: 1.25em; }\n\n/*--------------------\n        Action\n---------------------*/\n.ui.action.input {\n  display: table; }\n\n.ui.action.input > input {\n  display: table-cell;\n  border-top-right-radius: 0px !important;\n  border-bottom-right-radius: 0px !important;\n  border-right: none; }\n\n.ui.action.input > .button, .ui.action.input > .buttons {\n  display: table-cell;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  white-space: nowrap; }\n\n.ui.action.input > .button > .icon, .ui.action.input > .buttons > .button > .icon {\n  display: inline;\n  vertical-align: top; }\n\n.ui.fluid.action.input {\n  display: table;\n  width: 100%; }\n\n.ui.fluid.action.input > .button {\n  width: 0.01%; }\n\n/*--------------------\n        Fluid\n---------------------*/\n.ui.fluid.input {\n  display: block; }\n\n/*--------------------\n        Size\n---------------------*/\n.ui.mini.input {\n  font-size: 0.8125em; }\n\n.ui.small.input {\n  font-size: 0.875em; }\n\n.ui.input {\n  font-size: 1em; }\n\n.ui.large.input {\n  font-size: 1.125em; }\n\n.ui.big.input {\n  font-size: 1.25em; }\n\n.ui.huge.input {\n  font-size: 1.375em; }\n\n.ui.massive.input {\n  font-size: 1.5em; }\n\n/*\n * # Semantic - Label\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Label\n*******************************/\n.ui.label {\n  display: inline-block;\n  vertical-align: middle;\n  margin: -0.25em 0.25em 0em;\n  background-color: #E8E8E8;\n  border-color: #E8E8E8;\n  padding: 0.5em 0.8em;\n  color: rgba(0, 0, 0, 0.65);\n  text-transform: uppercase;\n  font-weight: normal;\n  border-radius: 0.325em;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-transition: background 0.1s linear;\n  -moz-transition: background 0.1s linear;\n  transition: background 0.1s linear; }\n\n.ui.label:first-child {\n  margin-left: 0em; }\n\n.ui.label:last-child {\n  margin-right: 0em; }\n\n/* Link */\na.ui.label {\n  cursor: pointer; }\n\n/* Inside Link */\n.ui.label a {\n  cursor: pointer;\n  color: inherit;\n  opacity: 0.8;\n  -webkit-transition: 0.2s opacity ease;\n  -moz-transition: 0.2s opacity ease;\n  transition: 0.2s opacity ease; }\n\n.ui.label a:hover {\n  opacity: 1; }\n\n/* Detail */\n.ui.label .detail {\n  display: inline-block;\n  margin-left: 0.5em;\n  font-weight: bold;\n  opacity: 0.8; }\n\n/* Icon */\n.ui.label .icon {\n  width: auto; }\n\n/* Removable label */\n.ui.label .delete.icon {\n  cursor: pointer;\n  margin: 0em 0em 0em 0.5em;\n  opacity: 0.7;\n  -webkit-transition: background 0.1s linear;\n  -moz-transition: background 0.1s linear;\n  transition: background 0.1s linear; }\n\n.ui.label .delete.icon:hover {\n  opacity: 0.99; }\n\n/*-------------------\n       Coupling\n--------------------*/\n/* Padding on next content after a label */\n.ui.segment > .attached.label:first-child + * {\n  margin-top: 2.5em; }\n\n.ui.segment > .bottom.attached.label:first-child ~ :last-child {\n  margin-top: 0em;\n  margin-bottom: 2.5em; }\n\n/*******************************\n             Types\n*******************************/\n.ui.image.label {\n  width: auto !important;\n  margin-top: 0em;\n  margin-bottom: 0em;\n  padding-top: 0.4em;\n  padding-bottom: 0.4em;\n  line-height: 1.5em;\n  vertical-align: baseline;\n  text-transform: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.image.label img {\n  display: inline-block;\n  height: 2.25em;\n  margin: -0.4em 0.8em -0.4em -0.8em;\n  vertical-align: top;\n  border-radius: 0.325em 0em 0em 0.325em; }\n\n/*******************************\n             States\n*******************************/\n/*-------------------\n      Disabled\n--------------------*/\n.ui.label.disabled {\n  opacity: 0.5; }\n\n/*-------------------\n        Hover\n--------------------*/\na.ui.labels .label:hover, a.ui.label:hover {\n  background-color: #E0E0E0;\n  border-color: #E0E0E0;\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.labels a.label:hover:before, a.ui.label:hover:before {\n  background-color: #E0E0E0;\n  color: rgba(0, 0, 0, 0.7); }\n\n/*-------------------\n      Visible\n--------------------*/\n.ui.labels.visible .label, .ui.label.visible {\n  display: inline-block !important; }\n\n/*-------------------\n      Hidden\n--------------------*/\n.ui.labels.hidden .label, .ui.label.hidden {\n  display: none !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n         Tag\n--------------------*/\n.ui.tag.labels .label, .ui.tag.label {\n  margin-left: 1em;\n  position: relative;\n  padding: 0.33em 1.3em 0.33em 1.4em;\n  border-radius: 0px 3px 3px 0px; }\n\n.ui.tag.labels .label:before, .ui.tag.label:before {\n  position: absolute;\n  top: 0.3em;\n  left: 0.3em;\n  content: '';\n  margin-left: -1em;\n  background-image: none;\n  width: 1.5em;\n  height: 1.5em;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  -webkit-transition: background 0.1s linear;\n  -moz-transition: background 0.1s linear;\n  transition: background 0.1s linear; }\n\n.ui.tag.labels .label:after, .ui.tag.label:after {\n  position: absolute;\n  content: '';\n  top: 50%;\n  left: -0.25em;\n  margin-top: -0.3em;\n  background-color: #FFFFFF;\n  width: 0.55em;\n  height: 0.55em;\n  -webkit-box-shadow: 0 -1px 1px 0 rgba(0, 0, 0, 0.3);\n  box-shadow: 0 -1px 1px 0 rgba(0, 0, 0, 0.3);\n  border-radius: 100px 100px 100px 100px; }\n\n/*-------------------\n       Ribbon\n--------------------*/\n.ui.ribbon.label {\n  position: relative;\n  margin: 0em 0.2em;\n  left: -2rem;\n  padding-left: 2rem;\n  border-radius: 0px 4px 4px 0px;\n  border-color: rgba(0, 0, 0, 0.15); }\n\n.ui.ribbon.label:after {\n  position: absolute;\n  content: \"\";\n  top: 100%;\n  left: 0%;\n  border-top: 0em solid transparent;\n  border-right-width: 1em;\n  border-right-color: inherit;\n  border-right-style: solid;\n  border-bottom: 1em solid transparent;\n  border-left: 0em solid transparent;\n  width: 0em;\n  height: 0em; }\n\n/*-------------------\n       Attached\n--------------------*/\n.ui.top.attached.label, .ui.attached.label {\n  width: 100%;\n  position: absolute;\n  margin: 0em;\n  top: 0em;\n  left: 0em;\n  padding: 0.75em 1em;\n  border-radius: 4px 4px 0em 0em; }\n\n.ui.bottom.attached.label {\n  top: auto;\n  bottom: 0em;\n  border-radius: 0em 0em 4px 4px; }\n\n.ui.top.left.attached.label {\n  width: auto;\n  margin-top: 0em !important;\n  border-radius: 4px 0em 4px 0em; }\n\n.ui.top.right.attached.label {\n  width: auto;\n  left: auto;\n  right: 0em;\n  border-radius: 0em 4px 0em 4px; }\n\n.ui.bottom.left.attached.label {\n  width: auto;\n  top: auto;\n  bottom: 0em;\n  border-radius: 4px 0em 0em 4px; }\n\n.ui.bottom.right.attached.label {\n  top: auto;\n  bottom: 0em;\n  left: auto;\n  right: 0em;\n  width: auto;\n  border-radius: 0px 4px 0px 4px; }\n\n/*-------------------\n    Corner Label\n--------------------*/\n.ui.corner.label {\n  background-color: transparent;\n  position: absolute;\n  top: 0em;\n  right: 0em;\n  z-index: 10;\n  margin: 0em;\n  width: 3em;\n  height: 3em;\n  padding: 0em;\n  text-align: center;\n  -webkit-transition: color 0.2s ease;\n  -moz-transition: color 0.2s ease;\n  transition: color 0.2s ease; }\n\n.ui.corner.label:after {\n  position: absolute;\n  content: \"\";\n  right: 0em;\n  top: 0em;\n  z-index: -1;\n  width: 0em;\n  height: 0em;\n  border-top: 0em solid transparent;\n  border-right: 3em solid transparent;\n  border-bottom: 3em solid transparent;\n  border-left: 0em solid transparent;\n  border-right-color: inherit;\n  -webkit-transition: border-color 0.2s ease;\n  -moz-transition: border-color 0.2s ease;\n  transition: border-color 0.2s ease; }\n\n.ui.corner.label .icon {\n  font-size: 0.875em;\n  margin: 0.5em 0em 0em 1.25em; }\n\n.ui.corner.label .text {\n  display: inline-block;\n  font-weight: bold;\n  margin: 0.5em 0em 0em 1em;\n  width: 2.5em;\n  font-size: 0.875em;\n  text-align: center;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg); }\n\n/* Coupling */\n.ui.rounded.image > .ui.corner.label, .ui.input > .ui.corner.label, .ui.segment > .ui.corner.label {\n  overflow: hidden; }\n\n.ui.segment > .ui.corner.label {\n  top: -1px;\n  right: -1px; }\n\n.ui.segment > .ui.left.corner.label {\n  right: auto;\n  left: -1px; }\n\n.ui.input > .ui.corner.label {\n  top: 1px;\n  right: 1px; }\n\n.ui.input > .ui.right.corner.label {\n  right: auto;\n  left: 1px; }\n\n/* Left Corner */\n.ui.left.corner.label, .ui.left.corner.label:after {\n  right: auto;\n  left: 0em; }\n\n.ui.left.corner.label:after {\n  border-top: 3em solid transparent;\n  border-right: 3em solid transparent;\n  border-bottom: 0em solid transparent;\n  border-left: 0em solid transparent;\n  border-top-color: inherit; }\n\n.ui.left.corner.label .icon {\n  margin: 0.5em 0em 0em -1em; }\n\n.ui.left.corner.label .text {\n  margin: 0.5em 0em 0em -1em;\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg);\n  transform: rotate(-45deg); }\n\n/* Hover */\n.ui.corner.label:hover {\n  background-color: transparent; }\n\n/*-------------------\n       Fluid\n--------------------*/\n.ui.label.fluid, .ui.fluid.labels > .label {\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*-------------------\n       Inverted\n--------------------*/\n.ui.inverted.labels .label, .ui.inverted.label {\n  color: #FFFFFF !important; }\n\n/*-------------------\n       Colors\n--------------------*/\n/*--- Black ---*/\n.ui.black.labels .label, .ui.black.label {\n  background-color: #5C6166 !important;\n  border-color: #5C6166 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .black.label:before, .ui.black.labels .label:before, .ui.black.label:before {\n  background-color: #5C6166 !important; }\n\n/* Hover */\na.ui.black.labels .label:hover, a.ui.black.label:hover {\n  background-color: #333333 !important;\n  border-color: #333333 !important; }\n\n.ui.labels a.black.label:hover:before, .ui.black.labels a.label:hover:before, a.ui.black.label:hover:before {\n  background-color: #333333 !important; }\n\n/* Corner */\n.ui.black.corner.label, .ui.black.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.black.ribbon.label {\n  border-color: #333333 !important; }\n\n/*--- Green ---*/\n.ui.green.labels .label, .ui.green.label {\n  background-color: #A1CF64 !important;\n  border-color: #A1CF64 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .green.label:before, .ui.green.labels .label:before, .ui.green.label:before {\n  background-color: #A1CF64 !important; }\n\n/* Hover */\na.ui.green.labels .label:hover, a.ui.green.label:hover {\n  background-color: #89B84C !important;\n  border-color: #89B84C !important; }\n\n.ui.labels a.green.label:hover:before, .ui.green.labels a.label:hover:before, a.ui.green.label:hover:before {\n  background-color: #89B84C !important; }\n\n/* Corner */\n.ui.green.corner.label, .ui.green.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.green.ribbon.label {\n  border-color: #89B84C !important; }\n\n/*--- Red ---*/\n.ui.red.labels .label, .ui.red.label {\n  background-color: #D95C5C !important;\n  border-color: #D95C5C !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .red.label:before, .ui.red.labels .label:before, .ui.red.label:before {\n  background-color: #D95C5C !important; }\n\n/* Corner */\n.ui.red.corner.label, .ui.red.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Hover */\na.ui.red.labels .label:hover, a.ui.red.label:hover {\n  background-color: #DE3859 !important;\n  border-color: #DE3859 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels a.red.label:hover:before, .ui.red.labels a.label:hover:before, a.ui.red.label:hover:before {\n  background-color: #DE3859 !important; }\n\n/* Ribbon */\n.ui.red.ribbon.label {\n  border-color: #DE3859 !important; }\n\n/*--- Blue ---*/\n.ui.blue.labels .label, .ui.blue.label {\n  background-color: #6ECFF5 !important;\n  border-color: #6ECFF5 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .blue.label:before, .ui.blue.labels .label:before, .ui.blue.label:before {\n  background-color: #6ECFF5 !important; }\n\n/* Hover */\na.ui.blue.labels .label:hover, .ui.blue.labels a.label:hover, a.ui.blue.label:hover {\n  background-color: #1AB8F3 !important;\n  border-color: #1AB8F3 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels a.blue.label:hover:before, .ui.blue.labels a.label:hover:before, a.ui.blue.label:hover:before {\n  background-color: #1AB8F3 !important; }\n\n/* Corner */\n.ui.blue.corner.label, .ui.blue.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.blue.ribbon.label {\n  border-color: #1AB8F3 !important; }\n\n/*--- Purple ---*/\n.ui.purple.labels .label, .ui.purple.label {\n  background-color: #564F8A !important;\n  border-color: #564F8A !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .purple.label:before, .ui.purple.labels .label:before, .ui.purple.label:before {\n  background-color: #564F8A !important; }\n\n/* Hover */\na.ui.purple.labels .label:hover, .ui.purple.labels a.label:hover, a.ui.purple.label:hover {\n  background-color: #3E3773 !important;\n  border-color: #3E3773 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels a.purple.label:hover:before, .ui.purple.labels a.label:hover:before, a.ui.purple.label:hover:before {\n  background-color: #3E3773 !important; }\n\n/* Corner */\n.ui.purple.corner.label, .ui.purple.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.purple.ribbon.label {\n  border-color: #3E3773 !important; }\n\n/*--- Orange ---*/\n.ui.orange.labels .label, .ui.orange.label {\n  background-color: #F05940 !important;\n  border-color: #F05940 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .orange.label:before, .ui.orange.labels .label:before, .ui.orange.label:before {\n  background-color: #F05940 !important; }\n\n/* Hover */\na.ui.orange.labels .label:hover, .ui.orange.labels a.label:hover, a.ui.orange.label:hover {\n  background-color: #FF4121 !important;\n  border-color: #FF4121 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels a.orange.label:hover:before, .ui.orange.labels a.label:hover:before, a.ui.orange.label:hover:before {\n  background-color: #FF4121 !important; }\n\n/* Corner */\n.ui.orange.corner.label, .ui.orange.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.orange.ribbon.label {\n  border-color: #FF4121 !important; }\n\n/*--- Teal ---*/\n.ui.teal.labels .label, .ui.teal.label {\n  background-color: #00B5AD !important;\n  border-color: #00B5AD !important;\n  color: #FFFFFF !important; }\n\n.ui.labels .teal.label:before, .ui.teal.labels .label:before, .ui.teal.label:before {\n  background-color: #00B5AD !important; }\n\n/* Hover */\na.ui.teal.labels .label:hover, .ui.teal.labels a.label:hover, a.ui.teal.label:hover {\n  background-color: #009A93 !important;\n  border-color: #009A93 !important;\n  color: #FFFFFF !important; }\n\n.ui.labels a.teal.label:hover:before, .ui.teal.labels a.label:hover:before, a.ui.teal.label:hover:before {\n  background-color: #009A93 !important; }\n\n/* Corner */\n.ui.teal.corner.label, .ui.teal.corner.label:hover {\n  background-color: transparent !important; }\n\n/* Ribbon */\n.ui.teal.ribbon.label {\n  border-color: #009A93 !important; }\n\n/*-------------------\n     Horizontal\n--------------------*/\n.ui.horizontal.labels .label, .ui.horizontal.label {\n  margin: -0.125em 0.5em -0.125em 0em;\n  padding: 0.35em 1em;\n  min-width: 6em;\n  text-align: center; }\n\n/*-------------------\n       Circular\n--------------------*/\n.ui.circular.labels .label, .ui.circular.label {\n  min-height: 1em;\n  max-height: 2em;\n  padding: 0.5em !important;\n  line-height: 1em;\n  text-align: center;\n  border-radius: 500rem; }\n\n/*-------------------\n       Pointing\n--------------------*/\n.ui.pointing.label {\n  position: relative; }\n\n.ui.attached.pointing.label {\n  position: absolute; }\n\n.ui.pointing.label:before {\n  position: absolute;\n  content: \"\";\n  width: 0.6em;\n  height: 0.6em;\n  background-image: none;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  z-index: 2;\n  -webkit-transition: background 0.1s linear;\n  -moz-transition: background 0.1s linear;\n  transition: background 0.1s linear; }\n\n/*--- Above ---*/\n.ui.pointing.label:before {\n  background-color: #E8E8E8; }\n\n.ui.pointing.label, .ui.pointing.above.label {\n  margin-top: 1em; }\n\n.ui.pointing.label:before, .ui.pointing.above.label:before {\n  margin-left: -0.3em;\n  top: -0.3em;\n  left: 50%; }\n\n/*--- Below ---*/\n.ui.pointing.below.label {\n  margin-top: 0em;\n  margin-bottom: 1em; }\n\n.ui.pointing.below.label:before {\n  margin-left: -0.3em;\n  top: auto;\n  right: auto;\n  bottom: -0.3em;\n  left: 50%; }\n\n/*--- Left ---*/\n.ui.pointing.left.label {\n  margin-top: 0em;\n  margin-left: 1em; }\n\n.ui.pointing.left.label:before {\n  margin-top: -0.3em;\n  bottom: auto;\n  right: auto;\n  top: 50%;\n  left: 0em; }\n\n/*--- Right ---*/\n.ui.pointing.right.label {\n  margin-top: 0em;\n  margin-right: 1em; }\n\n.ui.pointing.right.label:before {\n  margin-top: -0.3em;\n  right: -0.3em;\n  top: 50%;\n  bottom: auto;\n  left: auto; }\n\n/*------------------\n   Floating Label\n-------------------*/\n.ui.floating.label {\n  position: absolute;\n  z-index: 100;\n  top: -1em;\n  left: 100%;\n  margin: 0em 0em 0em -1.5em !important; }\n\n/*-------------------\n        Sizes\n--------------------*/\n.ui.small.labels .label, .ui.small.label {\n  font-size: 0.75rem; }\n\n.ui.label {\n  font-size: 0.8125rem; }\n\n.ui.large.labels .label, .ui.large.label {\n  font-size: 0.875rem; }\n\n.ui.huge.labels .label, .ui.huge.label {\n  font-size: 1rem; }\n\n/*\n * # Semantic - Loader\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Loader\n*******************************/\n/* Standard Size */\n.ui.loader {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0px;\n  z-index: 1000;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -ms-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%); }\n\n.ui.dimmer .loader {\n  display: block; }\n\n/*******************************\n             Types\n*******************************/\n/*-------------------\n        Text\n--------------------*/\n.ui.text.loader {\n  width: auto !important;\n  height: auto !important;\n  text-align: center;\n  font-style: normal; }\n\n.ui.mini.text.loader {\n  min-width: 16px;\n  padding-top: 2em;\n  font-size: 0.875em; }\n\n.ui.small.text.loader {\n  min-width: 24px;\n  padding-top: 2.5em;\n  font-size: 0.875em; }\n\n.ui.text.loader {\n  min-width: 32px;\n  font-size: 1em;\n  padding-top: 3em; }\n\n.ui.large.text.loader {\n  min-width: 64px;\n  padding-top: 5em;\n  font-size: 1.2em; }\n\n/*******************************\n            States\n*******************************/\n.ui.loader.active, .ui.loader.visible {\n  display: block; }\n\n.ui.loader.disabled, .ui.loader.hidden {\n  display: none; }\n\n/*******************************\n            Variations\n*******************************/\n/*-------------------\n       Inverted\n--------------------*/\n.ui.dimmer .ui.text.loader, .ui.inverted.text.loader {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.dimmer .ui.text.loader {\n  color: rgba(0, 0, 0, 0.8); }\n\n/* Tiny Size */\n.ui.dimmer .mini.ui.loader, .ui.inverted .mini.ui.loader {\n  background-image: url("+__webpack_require__(172)+"); }\n\n/* Small Size */\n.ui.dimmer .small.ui.loader, .ui.inverted .small.ui.loader {\n  background-image: url("+__webpack_require__(173)+"); }\n\n/* Standard Size */\n.ui.dimmer .ui.loader, .ui.inverted.loader {\n  background-image: url("+__webpack_require__(174)+"); }\n\n/* Large Size */\n.ui.dimmer .large.ui.loader, .ui.inverted .large.ui.loader {\n  background-image: url("+__webpack_require__(175)+"); }\n\n/*-------------------\n        Sizes\n--------------------*/\n/* Tiny Size */\n.ui.inverted.dimmer .ui.mini.loader, .ui.mini.loader {\n  width: 16px;\n  height: 16px;\n  background-image: url("+__webpack_require__(169)+"); }\n\n/* Small Size */\n.ui.inverted.dimmer .ui.small.loader, .ui.small.loader {\n  width: 24px;\n  height: 24px;\n  background-image: url("+__webpack_require__(170)+"); }\n\n.ui.inverted.dimmer .ui.loader, .ui.loader {\n  width: 32px;\n  height: 32px;\n  background: url("+__webpack_require__(171)+") no-repeat;\n  background-position: 48% 0px; }\n\n/* Large Size */\n.ui.inverted.dimmer .ui.loader.large, .ui.loader.large {\n  width: 64px;\n  height: 64px;\n  background-image: url("+__webpack_require__(168)+"); }\n\n/*-------------------\n       Inline\n--------------------*/\n.ui.inline.loader {\n  position: static;\n  vertical-align: middle;\n  margin: 0em;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none; }\n\n.ui.inline.loader.active, .ui.inline.loader.visible {\n  display: inline-block; }\n\n/*\n * # Semantic - Progress Bar\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n         Progress Bar\n*******************************/\n.ui.progress {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  width: 100%;\n  height: 35px;\n  background-color: #FAFAFA;\n  padding: 5px;\n  border-radius: 0.3125em;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.progress .bar {\n  display: inline-block;\n  height: 100%;\n  background-color: #CCCCCC;\n  border-radius: 3px;\n  -webkit-transition: width 1s ease-in-out, background-color 1s ease-out;\n  -moz-transition: width 1s ease-in-out, background-color 1s ease-out;\n  transition: width 1s ease-in-out, background-color 1s ease-out; }\n\n/*******************************\n            States\n*******************************/\n/*--------------\n  Successful\n---------------*/\n.ui.successful.progress .bar {\n  background-color: #73E064 !important; }\n\n.ui.successful.progress .bar, .ui.successful.progress .bar::after {\n  -webkit-animation: none !important;\n  -moz-animation: none !important;\n  animation: none !important; }\n\n.ui.warning.progress .bar {\n  background-color: #E96633 !important; }\n\n.ui.warning.progress .bar, .ui.warning.progress .bar::after {\n  -webkit-animation: none !important;\n  -moz-animation: none !important;\n  animation: none !important; }\n\n/*--------------\n     Failed\n---------------*/\n.ui.failed.progress .bar {\n  background-color: #DF9BA4 !important; }\n\n.ui.failed.progress .bar, .ui.failed.progress .bar::after {\n  -webkit-animation: none !important;\n  -moz-animation: none !important;\n  animation: none !important; }\n\n/*--------------\n     Active\n---------------*/\n.ui.active.progress .bar {\n  position: relative; }\n\n.ui.active.progress .bar::after {\n  content: '';\n  opacity: 0;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  background: #FFFFFF;\n  border-radius: 3px;\n  -webkit-animation: progress-active 2s ease-out infinite;\n  -moz-animation: progress-active 2s ease-out infinite;\n  animation: progress-active 2s ease-out infinite; }\n\n@-webkit-keyframes progress-active {\n  0% {\n    opacity: 0;\n    width: 0; }\n\n  50% {\n    opacity: 0.3; }\n\n  100% {\n    opacity: 0;\n    width: 95%; } }\n\n@-moz-keyframes progress-active {\n  0% {\n    opacity: 0;\n    width: 0; }\n\n  50% {\n    opacity: 0.3; }\n\n  100% {\n    opacity: 0;\n    width: 100%; } }\n\n@keyframes progress-active {\n  0% {\n    opacity: 0;\n    width: 0; }\n\n  50% {\n    opacity: 0.3; }\n\n  100% {\n    opacity: 0;\n    width: 100%; } }\n\n/*--------------\n    Disabled\n---------------*/\n.ui.disabled.progress {\n  opacity: 0.35; }\n\n.ui.disabled.progress .bar, .ui.disabled.progress .bar::after {\n  -webkit-animation: none !important;\n  -moz-animation: none !important;\n  animation: none !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n    Attached\n---------------*/\n/* bottom attached */\n.ui.progress.attached {\n  position: relative;\n  border: none; }\n\n.ui.progress.attached, .ui.progress.attached .bar {\n  display: block;\n  height: 3px;\n  padding: 0px;\n  overflow: hidden;\n  border-radius: 0em 0em 0.3125em 0.3125em; }\n\n.ui.progress.attached .bar {\n  border-radius: 0em; }\n\n/* top attached */\n.ui.progress.top.attached, .ui.progress.top.attached .bar {\n  top: -2px;\n  border-radius: 0.3125em 0.3125em 0em 0em; }\n\n.ui.progress.top.attached .bar {\n  border-radius: 0em; }\n\n/*--------------\n     Colors\n---------------*/\n.ui.blue.progress .bar {\n  background-color: #6ECFF5; }\n\n.ui.black.progress .bar {\n  background-color: #5C6166; }\n\n.ui.green.progress .bar {\n  background-color: #A1CF64; }\n\n.ui.red.progress .bar {\n  background-color: #EF4D6D; }\n\n.ui.purple.progress .bar {\n  background-color: #564F8A; }\n\n.ui.teal.progress .bar {\n  background-color: #00B5AD; }\n\n/*--------------\n    Striped\n---------------*/\n.ui.progress.striped .bar {\n  background-size: 30px 30px;\n  background-image: -webkit-gradient(linear, left top, right bottom, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));\n  background-image: -webkit-linear-gradient(135deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -moz-linear-gradient(135deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -webkit-linear-gradient(315deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -moz-linear-gradient(315deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.ui.progress.active.striped .bar:after {\n  -webkit-animation: none;\n  -moz-animation: none;\n  -ms-animation: none;\n  animation: none; }\n\n.ui.progress.active.striped .bar {\n  -webkit-animation: progress-striped 3s linear infinite;\n  -moz-animation: progress-striped 3s linear infinite;\n  animation: progress-striped 3s linear infinite; }\n\n@-webkit-keyframes progress-striped {\n  0% {\n    background-position: 0px 0; }\n\n  100% {\n    background-position: 60px 0; } }\n\n@-moz-keyframes progress-striped {\n  0% {\n    background-position: 0px 0; }\n\n  100% {\n    background-position: 60px 0; } }\n\n@keyframes progress-striped {\n  0% {\n    background-position: 0px 0; }\n\n  100% {\n    background-position: 60px 0; } }\n\n/*--------------\n     Sizes\n---------------*/\n.ui.small.progress .bar {\n  height: 14px; }\n\n/*\n * # Semantic - Reveal\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Reveal\n*******************************/\n.ui.reveal {\n  display: inline-block;\n  position: relative !important;\n  z-index: 2 !important;\n  font-size: 0em !important; }\n\n.ui.reveal > .content {\n  font-size: 1rem !important; }\n\n.ui.reveal > .visible.content {\n  -webkit-transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  -moz-transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s; }\n\n.ui.reveal > .visible.content {\n  position: absolute !important;\n  top: 0em !important;\n  left: 0em !important;\n  z-index: 4 !important;\n  -webkit-transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  -moz-transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s; }\n\n.ui.reveal > .hidden.content {\n  position: relative !important;\n  z-index: 3 !important; }\n\n/*------------------\n   Loose Coupling\n-------------------*/\n.ui.reveal.button {\n  overflow: hidden; }\n\n/*******************************\n              Types\n*******************************/\n/*--------------\n      Slide\n---------------*/\n.ui.slide.reveal {\n  position: relative !important;\n  display: block;\n  overflow: hidden !important;\n  white-space: nowrap; }\n\n.ui.slide.reveal > .content {\n  display: block;\n  float: left;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  margin: 0em;\n  -webkit-transition: top 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, left 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, right 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, bottom 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  -moz-transition: top 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, left 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, right 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, bottom 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  transition: top 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, left 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, right 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s, bottom 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s; }\n\n.ui.slide.reveal > .visible.content {\n  position: relative !important; }\n\n.ui.slide.reveal > .hidden.content {\n  position: absolute !important;\n  left: 100% !important;\n  width: 100% !important; }\n\n.ui.slide.reveal:hover > .visible.content, .ui.slide.reveal:focus > .visible.content {\n  left: -100% !important; }\n\n.ui.slide.reveal:hover > .hidden.content, .ui.slide.reveal:focus > .hidden.content {\n  left: 0% !important; }\n\n.ui.right.slide.reveal > .visible.content {\n  left: 0%; }\n\n.ui.right.slide.reveal > .hidden.content {\n  left: auto !important;\n  right: 100% !important; }\n\n.ui.right.slide.reveal:hover > .visible.content, .ui.right.slide.reveal:focus > .visible.content {\n  left: 100% !important;\n  right: auto !important; }\n\n.ui.right.slide.reveal:hover > .hidden.content, .ui.right.slide.reveal:focus > .hidden.content {\n  left: auto !important;\n  right: 0% !important; }\n\n.ui.up.slide.reveal > .visible.content {\n  top: 0% !important;\n  left: 0% !important;\n  right: auto !important;\n  bottom: auto !important; }\n\n.ui.up.slide.reveal > .hidden.content {\n  top: 100% !important;\n  left: 0% !important;\n  right: auto !important;\n  bottom: auto !important; }\n\n.ui.slide.up.reveal:hover > .visible.content, .ui.slide.up.reveal:focus > .visible.content {\n  top: -100% !important;\n  left: 0% !important; }\n\n.ui.slide.up.reveal:hover > .hidden.content, .ui.slide.up.reveal:focus > .hidden.content {\n  top: 0% !important;\n  left: 0% !important; }\n\n.ui.down.slide.reveal > .visible.content {\n  top: auto !important;\n  right: auto !important;\n  bottom: auto !important;\n  bottom: 0% !important; }\n\n.ui.down.slide.reveal > .hidden.content {\n  top: auto !important;\n  right: auto !important;\n  bottom: 100% !important;\n  left: 0% !important; }\n\n.ui.slide.down.reveal:hover > .visible.content, .ui.slide.down.reveal:focus > .visible.content {\n  left: 0% !important;\n  bottom: -100% !important; }\n\n.ui.slide.down.reveal:hover > .hidden.content, .ui.slide.down.reveal:focus > .hidden.content {\n  left: 0% !important;\n  bottom: 0% !important; }\n\n/*--------------\n      Fade\n---------------*/\n.ui.fade.reveal > .hidden.content {\n  -webkit-transition: opacity 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  -moz-transition: opacity 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s;\n  transition: opacity 0.8s cubic-bezier(0.175, 0.885, 0.32, 1) 0.15s; }\n\n.ui.fade.reveal > .hidden.content {\n  z-index: 5 !important;\n  opacity: 0; }\n\n.ui.fade.reveal:hover > .hidden.content {\n  opacity: 1; }\n\n/*--------------\n      Move\n---------------*/\n.ui.move.reveal > .visible.content, .ui.move.left.reveal > .visible.content {\n  left: auto !important;\n  top: auto !important;\n  bottom: auto !important;\n  right: 0% !important; }\n\n.ui.move.reveal:hover > .visible.content, .ui.move.left.reveal:hover > .visible.content, .ui.move.reveal:focus > .visible.content, .ui.move.left.reveal:focus > .visible.content {\n  right: 100% !important; }\n\n.ui.move.right.reveal > .visible.content {\n  right: auto !important;\n  top: auto !important;\n  bottom: auto !important;\n  left: 0% !important; }\n\n.ui.move.right.reveal:hover > .visible.content, .ui.move.right.reveal:focus > .visible.content {\n  left: 100% !important; }\n\n.ui.move.up.reveal > .visible.content {\n  right: auto !important;\n  left: auto !important;\n  top: auto !important;\n  bottom: 0% !important; }\n\n.ui.move.up.reveal:hover > .visible.content, .ui.move.up.reveal:focus > .visible.content {\n  bottom: 100% !important; }\n\n.ui.move.down.reveal > .visible.content {\n  right: auto !important;\n  left: auto !important;\n  top: 0% !important;\n  bottom: auto !important; }\n\n.ui.move.down.reveal:hover > .visible.content, .ui.move.down.reveal:focus > .visible.content {\n  top: 100% !important; }\n\n/*--------------\n     Rotate\n---------------*/\n.ui.rotate.reveal > .visible.content {\n  -webkit-transition-duration: 0.8s;\n  -moz-transition-duration: 0.8s;\n  transition-duration: 0.8s;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -ms-transform: rotate(0deg);\n  transform: rotate(0deg); }\n\n.ui.rotate.reveal > .visible.content, .ui.rotate.right.reveal > .visible.content {\n  -webkit-transform-origin: bottom right;\n  -moz-transform-origin: bottom right;\n  -ms-transform-origin: bottom right;\n  transform-origin: bottom right; }\n\n.ui.rotate.reveal:hover > .visible.content, .ui.rotate.right.reveal:hover > .visible.content, .ui.rotate.reveal:focus > .visible.content, .ui.rotate.right.reveal:focus > .visible.content {\n  -webkit-transform: rotate(110deg);\n  -moz-transform: rotate(110deg);\n  -ms-transform: rotate(110deg);\n  transform: rotate(110deg); }\n\n.ui.rotate.left.reveal > .visible.content {\n  -webkit-transform-origin: bottom left;\n  -moz-transform-origin: bottom left;\n  -ms-transform-origin: bottom left;\n  transform-origin: bottom left; }\n\n.ui.rotate.left.reveal:hover > .visible.content, .ui.rotate.left.reveal:focus > .visible.content {\n  -webkit-transform: rotate(-110deg);\n  -moz-transform: rotate(-110deg);\n  -ms-transform: rotate(-110deg);\n  transform: rotate(-110deg); }\n\n/*******************************\n              States\n*******************************/\n.ui.disabled.reveal {\n  opacity: 1 !important; }\n\n.ui.disabled.reveal > .content {\n  -webkit-transition: none !important;\n  -moz-transition: none !important;\n  transition: none !important; }\n\n.ui.disabled.reveal:hover > .visible.content, .ui.disabled.reveal:focus > .visible.content {\n  position: static !important;\n  display: block !important;\n  opacity: 1 !important;\n  top: 0 !important;\n  left: 0 !important;\n  right: auto !important;\n  bottom: auto !important;\n  -webkit-transform: none !important;\n  -moz-transform: none !important;\n  -ms-transform: none !important;\n  transform: none !important; }\n\n.ui.disabled.reveal:hover > .hidden.content, .ui.disabled.reveal:focus > .hidden.content {\n  display: none !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n     Masked\n---------------*/\n.ui.masked.reveal {\n  overflow: hidden; }\n\n/*--------------\n     Instant\n---------------*/\n.ui.instant.reveal > .content {\n  -webkit-transition-delay: 0s !important;\n  -moz-transition-delay: 0s !important;\n  transition-delay: 0s !important; }\n\n/*\n * # Semantic - Segment\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Segment\n*******************************/\n.ui.segment {\n  position: relative;\n  background-color: #FFFFFF;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  margin: 1em 0em;\n  padding: 1em;\n  border-radius: 5px 5px 5px 5px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.segment:first-child {\n  margin-top: 0em; }\n\n.ui.segment:last-child {\n  margin-bottom: 0em; }\n\n.ui.segment:after {\n  content: '';\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden; }\n\n.ui.vertical.segment {\n  margin: 0em;\n  padding-left: 0em;\n  padding-right: 0em;\n  background-color: transparent;\n  border-radius: 0px;\n  -webkit-box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.1); }\n\n.ui.vertical.segment:first-child {\n  padding-top: 0em; }\n\n.ui.horizontal.segment {\n  margin: 0em;\n  padding-top: 0em;\n  padding-bottom: 0em;\n  background-color: transparent;\n  border-radius: 0px;\n  -webkit-box-shadow: 1px 0px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: 1px 0px 0px rgba(0, 0, 0, 0.1); }\n\n.ui.horizontal.segment:first-child {\n  padding-left: 0em; }\n\n/*-------------------\n    Loose Coupling\n--------------------*/\n.ui.pointing.menu ~ .ui.attached.segment {\n  top: 1px; }\n\n.ui.page.grid.segment .ui.grid .ui.segment.column {\n  padding-top: 2rem;\n  padding-bottom: 2rem; }\n\n.ui.grid.segment, .ui.grid .ui.segment.row, .ui.grid .ui.segment.column {\n  border-radius: 0em;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  border: none; }\n\n/* No padding on edge content */\n.ui.segment > :first-child {\n  margin-top: 0em; }\n\n.ui.segment > :last-child {\n  margin-bottom: 0em; }\n\n/*******************************\n             Types\n*******************************/\n/*-------------------\n        Piled\n--------------------*/\n.ui.piled.segment {\n  margin: 2em 0em;\n  -webkit-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.15);\n  -ms-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.15);\n  -o-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.15);\n  box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.15); }\n\n.ui.piled.segment:first-child {\n  margin-top: 0em; }\n\n.ui.piled.segment:last-child {\n  margin-bottom: 0em; }\n\n.ui.piled.segment:after, .ui.piled.segment:before {\n  background-color: #FFFFFF;\n  visibility: visible;\n  content: \"\";\n  display: block;\n  height: 100%;\n  left: -1px;\n  position: absolute;\n  width: 100%;\n  -webkit-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.piled.segment:after {\n  -webkit-transform: rotate(1.2deg);\n  -moz-transform: rotate(1.2deg);\n  -ms-transform: rotate(1.2deg);\n  transform: rotate(1.2deg);\n  top: 0;\n  z-index: -1; }\n\n.ui.piled.segment:before {\n  -webkit-transform: rotate(-1.2deg);\n  -moz-transform: rotate(-1.2deg);\n  -ms-transform: rotate(-1.2deg);\n  transform: rotate(-1.2deg);\n  top: 0;\n  z-index: -2; }\n\n/*-------------------\n       Stacked\n--------------------*/\n.ui.stacked.segment {\n  padding-bottom: 1.7em; }\n\n.ui.stacked.segment:after, .ui.stacked.segment:before {\n  content: '';\n  position: absolute;\n  bottom: -3px;\n  left: 0%;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  background-color: rgba(0, 0, 0, 0.02);\n  width: 100%;\n  height: 5px;\n  visibility: visible; }\n\n.ui.stacked.segment:before {\n  bottom: 0px; }\n\n/* Inverted */\n.ui.stacked.inverted.segment:after, .ui.stacked.inverted.segment:before {\n  background-color: rgba(255, 255, 255, 0.1);\n  border-top: 1px solid rgba(255, 255, 255, 0.35); }\n\n/*-------------------\n       Circular\n--------------------*/\n.ui.circular.segment {\n  display: table-cell;\n  padding: 2em;\n  text-align: center;\n  vertical-align: middle;\n  border-radius: 500em; }\n\n/*-------------------\n       Raised\n--------------------*/\n.ui.raised.segment {\n  -webkit-box-shadow: 0px 1px 2px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 1px 2px 1px rgba(0, 0, 0, 0.1); }\n\n/*******************************\n            States\n*******************************/\n.ui.disabled.segment {\n  opacity: 0.8;\n  color: #DDDDDD; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n       Basic\n--------------------*/\n.ui.basic.segment {\n  position: relative;\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  border-radius: 0px; }\n\n.ui.basic.segment:first-child {\n  padding-top: 0em; }\n\n.ui.basic.segment:last-child {\n  padding-bottom: 0em; }\n\n/*-------------------\n       Fittted\n--------------------*/\n.ui.fitted.segment {\n  padding: 0em; }\n\n/*-------------------\n       Colors\n--------------------*/\n.ui.blue.segment {\n  border-top: 0.2em solid #6ECFF5; }\n\n.ui.green.segment {\n  border-top: 0.2em solid #A1CF64; }\n\n.ui.red.segment {\n  border-top: 0.2em solid #D95C5C; }\n\n.ui.orange.segment {\n  border-top: 0.2em solid #F05940; }\n\n.ui.purple.segment {\n  border-top: 0.2em solid #564F8A; }\n\n.ui.teal.segment {\n  border-top: 0.2em solid #00B5AD; }\n\n/*-------------------\n   Inverted Colors\n--------------------*/\n.ui.inverted.black.segment {\n  background-color: #5C6166 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.blue.segment {\n  background-color: #6ECFF5 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.green.segment {\n  background-color: #A1CF64 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.red.segment {\n  background-color: #D95C5C !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.orange.segment {\n  background-color: #F05940 !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.purple.segment {\n  background-color: #564F8A !important;\n  color: #FFFFFF !important; }\n\n.ui.inverted.teal.segment {\n  background-color: #00B5AD !important;\n  color: #FFFFFF !important; }\n\n/*-------------------\n       Aligned\n--------------------*/\n.ui.left.aligned.segment {\n  text-align: left; }\n\n.ui.right.aligned.segment {\n  text-align: right; }\n\n.ui.center.aligned.segment {\n  text-align: center; }\n\n.ui.justified.segment {\n  text-align: justify;\n  -webkit-hyphens: auto;\n  -moz-hyphens: auto;\n  -ms-hyphens: auto;\n  hyphens: auto; }\n\n/*-------------------\n       Floated\n--------------------*/\n.ui.floated.segment, .ui.left.floated.segment {\n  float: left; }\n\n.ui.right.floated.segment {\n  float: right; }\n\n/*-------------------\n      Inverted\n--------------------*/\n.ui.inverted.segment {\n  border: none;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.segment .segment {\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.inverted.segment .inverted.segment {\n  color: #FFFFFF; }\n\n.ui.inverted.segment, .ui.primary.inverted.segment {\n  background-color: #222222;\n  color: #FFFFFF; }\n\n/*-------------------\n     Ordinality\n--------------------*/\n.ui.primary.segment {\n  background-color: #FFFFFF;\n  color: #555555; }\n\n.ui.secondary.segment {\n  background-color: #FAF9FA;\n  color: #777777; }\n\n.ui.tertiary.segment {\n  background-color: #EBEBEB;\n  color: #B0B0B0; }\n\n.ui.secondary.inverted.segment {\n  background-color: #555555;\n  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(255, 255, 255, 0.3)), to(rgba(255, 255, 255, 0.3)));\n  background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.3) 100%);\n  background-image: -moz-linear-gradient(rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.3) 100%);\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0.3)), to(rgba(255, 255, 255, 0.3)));\n  background-image: linear-gradient(rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.3) 100%);\n  color: #FAFAFA; }\n\n.ui.tertiary.inverted.segment {\n  background-color: #555555;\n  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(255, 255, 255, 0.6)), to(rgba(255, 255, 255, 0.6)));\n  background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0.6) 100%);\n  background-image: -moz-linear-gradient(rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0.6) 100%);\n  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0.6)), to(rgba(255, 255, 255, 0.6)));\n  background-image: linear-gradient(rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0.6) 100%);\n  color: #EEEEEE; }\n\n/*-------------------\n      Attached\n--------------------*/\n.ui.segment.attached {\n  top: -1px;\n  bottom: -1px;\n  border-radius: 0px;\n  margin: 0em;\n  -webkit-box-shadow: 0px 0px 0px 1px #DDDDDD;\n  box-shadow: 0px 0px 0px 1px #DDDDDD; }\n\n.ui.top.attached.segment {\n  top: 0px;\n  bottom: -1px;\n  margin-top: 1em;\n  margin-bottom: 0em;\n  border-radius: 5px 5px 0px 0px; }\n\n.ui.segment.top.attached:first-child {\n  margin-top: 0em; }\n\n.ui.segment.bottom.attached {\n  top: -1px;\n  bottom: 0px;\n  margin-top: 0em;\n  margin-bottom: 1em;\n  border-radius: 0px 0px 5px 5px; }\n\n.ui.segment.bottom.attached:last-child {\n  margin-bottom: 0em; }\n\n/*\n * # Semantic - Steps\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Step\n*******************************/\n.ui.step, .ui.steps .step {\n  display: inline-block;\n  position: relative;\n  padding: 1em 2em 1em 3em;\n  vertical-align: top;\n  background-color: #FFFFFF;\n  color: #888888;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.step:after, .ui.steps .step:after {\n  position: absolute;\n  z-index: 2;\n  content: '';\n  top: 0.42em;\n  right: -1em;\n  border: medium none;\n  background-color: #FFFFFF;\n  width: 2.2em;\n  height: 2.2em;\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg);\n  transform: rotate(-45deg);\n  -webkit-box-shadow: -1px -1px 0 0 rgba(0, 0, 0, 0.15) inset;\n  box-shadow: -1px -1px 0 0 rgba(0, 0, 0, 0.15) inset; }\n\n.ui.step, .ui.steps .step, .ui.steps .step:after {\n  -webkit-transition: background-color 0.1s ease, opacity 0.1s ease, color 0.1s ease, -webkit-box-shadow 0.1s ease;\n  -moz-transition: background-color 0.1s ease, opacity 0.1s ease, color 0.1s ease, box-shadow 0.1s ease;\n  transition: background-color 0.1s ease, opacity 0.1s ease, color 0.1s ease, box-shadow 0.1s ease; }\n\n/*******************************\n            Types\n*******************************/\n/* Vertical */\n.ui.vertical.steps {\n  overflow: visible; }\n\n.ui.vertical.steps .step {\n  display: block;\n  border-radius: 0em;\n  padding: 1em 2em; }\n\n.ui.vertical.steps .step:first-child {\n  padding: 1em 2em;\n  border-radius: 0em;\n  border-top-left-radius: 0.3125rem;\n  border-top-right-radius: 0.3125rem; }\n\n.ui.vertical.steps .active.step:first-child {\n  border-top-right-radius: 0rem; }\n\n.ui.vertical.steps .step:last-child {\n  border-radius: 0em;\n  border-bottom-left-radius: 0.3125rem;\n  border-bottom-right-radius: 0.3125rem; }\n\n.ui.vertical.steps .active.step:last-child {\n  border-bottom-right-radius: 0rem; }\n\n/* Arrow */\n.ui.vertical.steps .step:after {\n  display: none; }\n\n/* Active Arrow */\n.ui.vertical.steps .active.step:after {\n  display: block; }\n\n/* Two Line */\n.ui.vertical.steps .two.line.step {\n  line-height: 1.3; }\n\n.ui.vertical.steps .two.line.active.step:after {\n  position: absolute;\n  z-index: 2;\n  content: '';\n  top: 0em;\n  right: -1.45em;\n  background-color: transparent;\n  border-bottom: 2.35em solid transparent;\n  border-left: 1.55em solid #555555;\n  border-top: 2.35em solid transparent;\n  width: 0em;\n  height: 0em;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none; }\n\n/*******************************\n            Group\n*******************************/\n.ui.steps {\n  cursor: pointer;\n  display: inline-block;\n  font-size: 0em;\n  overflow: hidden;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  line-height: 1;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  border-radius: 0.3125rem; }\n\n.ui.steps .step:first-child {\n  padding-left: 1.35em;\n  border-radius: 0.3125em 0em 0em 0.3125em; }\n\n.ui.steps .step:last-child {\n  border-radius: 0em 0.3125em 0.3125em 0em; }\n\n.ui.steps .step:only-child {\n  border-radius: 0.3125em; }\n\n.ui.steps .step:last-child {\n  margin-right: 0em; }\n\n.ui.steps .step:last-child:after {\n  display: none; }\n\n/*******************************\n             States\n*******************************/\n/* Hover */\n.ui.step:hover, .ui.step.hover {\n  background-color: #F7F7F7;\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.steps .step.hover:after, .ui.steps .step:hover:after, .ui.step:hover, .ui.step.hover::after {\n  background-color: #F7F7F7; }\n\n/* Hover */\n.ui.steps .step.down, .ui.steps .step:active, .ui.step.down, .ui.step:active {\n  background-color: #F0F0F0; }\n\n.ui.steps .step.down:after, .ui.steps .step:active:after, .ui.steps.down::after, .ui.steps:active::after {\n  background-color: #F0F0F0; }\n\n/* Active */\n.ui.steps .step.active, .ui.active.step {\n  cursor: auto;\n  background-color: #555555;\n  color: #FFFFFF;\n  font-weight: bold; }\n\n.ui.steps .step.active:after, .ui.active.steps:after {\n  background-color: #555555;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/* Disabled */\n.ui.steps .disabled.step, .ui.disabled.step {\n  cursor: auto;\n  background-color: #FFFFFF;\n  color: #CBCBCB; }\n\n.ui.steps .disabled.step:after, .ui.disabled.step:after {\n  background-color: #FFFFFF; }\n\n/*******************************\n           Variations\n*******************************/\n/* Attached */\n.attached.ui.steps {\n  margin: 0em;\n  border-radius: 0.3125em 0.3125em 0em 0em; }\n\n.attached.ui.steps .step:first-child {\n  border-radius: 0.3125em 0em 0em 0em; }\n\n.attached.ui.steps .step:last-child {\n  border-radius: 0em 0.3125em 0em 0em; }\n\n/* Bottom Side */\n.bottom.attached.ui.steps {\n  margin-top: -1px;\n  border-radius: 0em 0em 0.3125em 0.3125em; }\n\n.bottom.attached.ui.steps .step:first-child {\n  border-radius: 0em 0em 0em 0.3125em; }\n\n.bottom.attached.ui.steps .step:last-child {\n  border-radius: 0em 0em 0.3125em 0em; }\n\n/* Evenly divided  */\n.ui.one.steps, .ui.two.steps, .ui.three.steps, .ui.four.steps, .ui.five.steps, .ui.six.steps, .ui.seven.steps, .ui.eight.steps {\n  display: block; }\n\n.ui.one.steps > .step {\n  width: 100%; }\n\n.ui.two.steps > .step {\n  width: 50%; }\n\n.ui.three.steps > .step {\n  width: 33.333%; }\n\n.ui.four.steps > .step {\n  width: 25%; }\n\n.ui.five.steps > .step {\n  width: 20%; }\n\n.ui.six.steps > .step {\n  width: 16.666%; }\n\n.ui.seven.steps > .step {\n  width: 14.285%; }\n\n.ui.eight.steps > .step {\n  width: 12.5%; }\n\n/*******************************\n             Sizes\n*******************************/\n.ui.mini.step, .ui.mini.steps .step {\n  font-size: 0.8rem; }\n\n.ui.small.step, .ui.small.steps .step {\n  font-size: 0.875rem; }\n\n.ui.step, .ui.steps .step {\n  font-size: 1rem; }\n\n.ui.large.step, .ui.large.steps .step {\n  font-size: 1.125rem; }\n\n.ui.big.step, .ui.big.steps .step {\n  font-size: 1.25rem; }\n\n.ui.huge.step, .ui.huge.steps .step {\n  font-size: 1.375rem; }\n\n.ui.massive.step, .ui.massive.steps .step {\n  font-size: 1.5rem;\n  font-weight: bold; }\n\n/*\n * # Semantic - Accordion\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Accordion\n*******************************/\n.ui.accordion, .ui.accordion .accordion {\n  width: 600px;\n  max-width: 100%;\n  font-size: 1rem;\n  border-radius: 0.3125em;\n  background-color: #FFFFFF;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.accordion .title, .ui.accordion .accordion .title {\n  cursor: pointer;\n  margin: 0em;\n  padding: 0.75em 1em;\n  color: rgba(0, 0, 0, 0.6);\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  -webkit-transition: background-color 0.2s ease-out;\n  -moz-transition: background-color 0.2s ease-out;\n  transition: background-color 0.2s ease-out; }\n\n.ui.accordion > .title:first-child, .ui.accordion .accordion > .title:first-child {\n  border-top: none; }\n\n/* Content */\n.ui.accordion > .content, .ui.accordion .content > .content, .ui.accordion .accordion .content {\n  display: none;\n  margin: 0em;\n  padding: 1.3em 1em; }\n\n/* Arrow */\n.ui.accordion .title .dropdown.icon, .ui.accordion .accordion .title .dropdown.icon {\n  display: inline-block;\n  float: none;\n  margin: 0em 0.5em 0em 0em;\n  -webkit-transition: -webkit-transform 0.2s ease, opacity 0.2s ease;\n  -moz-transition: -moz-transform 0.2s ease, opacity 0.2s ease;\n  transition: transform 0.2s ease, opacity 0.2s ease;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -ms-transform: rotate(0deg);\n  transform: rotate(0deg); }\n\n.ui.accordion .title .dropdown.icon:before, .ui.accordion .accordion .title .dropdown.icon:before {\n  content: '\\f0da';\n  /*rtl:'\\f0d9'*/ }\n\n/*--------------\n Loose Coupling\n---------------*/\n.ui.basic.accordion.menu {\n  background-color: #FFFFFF;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.basic.accordion.menu .title, .ui.basic.accordion.menu .content {\n  padding: 0em; }\n\n.ui.accordion.menu .content {\n  display: none; }\n\n/*******************************\n            Types\n*******************************/\n/*--------------\n     Basic\n---------------*/\n.ui.basic.accordion {\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.basic.accordion .title, .ui.basic.accordion .accordion .title {\n  background-color: transparent;\n  border-top: none;\n  padding-left: 0em;\n  padding-right: 0em; }\n\n.ui.basic.accordion .content, .ui.basic.accordion .accordion .content {\n  padding: 0.5em 0em; }\n\n.ui.basic.accordion .active.title, .ui.basic.accordion .accordion .active.title {\n  background-color: transparent; }\n\n/*******************************\n            States\n*******************************/\n/*--------------\n      Hover\n---------------*/\n.ui.accordion .title:hover, .ui.accordion .active.title, .ui.accordion .accordion .title:hover, .ui.accordion .accordion .active.title {\n  color: rgba(0, 0, 0, 0.8); }\n\n/*--------------\n     Active\n---------------*/\n.ui.accordion .active.title, .ui.accordion .accordion .active.title {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.accordion .active.title .dropdown.icon, .ui.accordion .accordion .active.title .dropdown.icon {\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg); }\n\n.ui.accordion .active.content, .ui.accordion .accordion .active.content {\n  display: block; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n     Fluid\n---------------*/\n.ui.fluid.accordion, .ui.fluid.accordion .accordion {\n  width: 100%; }\n\n/*\n * # Semantic - Chat Room\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Chat Room\n*******************************/\n.ui.chatroom {\n  background-color: #F8F8F8;\n  width: 330px;\n  height: 370px;\n  padding: 0px; }\n\n.ui.chatroom .room {\n  position: relative;\n  background-color: #FFFFFF;\n  overflow: hidden;\n  height: 286px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-top: none;\n  border-bottom: none; }\n\n.ui.chatroom .room .loader {\n  display: none;\n  margin: -25px 0px 0px -25px; }\n\n/* Chat Room Actions */\n.ui.chatroom .actions {\n  overflow: hidden;\n  background-color: #EEEEEE;\n  padding: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 5px 5px 0px 0px; }\n\n.ui.chatroom .actions .button {\n  float: right;\n  margin-left: 3px; }\n\n/* Online User Count */\n.ui.chatroom .actions .message {\n  float: left;\n  margin-left: 6px;\n  font-size: 11px;\n  color: #AAAAAA;\n  text-shadow: 0px -1px 0px rgba(255, 255, 255, 0.8);\n  line-height: 28px; }\n\n.ui.chatroom .actions .message .loader {\n  display: inline-block;\n  margin-right: 8px; }\n\n/* Chat Room Text Log */\n.ui.chatroom .log {\n  float: left;\n  overflow: auto;\n  overflow-x: hidden;\n  overflow-y: auto; }\n\n.ui.chatroom .log .message {\n  padding: 3px 0px;\n  border-top: 1px dotted #DADADA; }\n\n.ui.chatroom .log .message:first-child {\n  border-top: none; }\n\n/* status event */\n.ui.chatroom .status {\n  padding: 5px 0px;\n  color: #AAAAAA;\n  font-size: 12px;\n  font-style: italic;\n  line-height: 1.33;\n  border-top: 1px dotted #DADADA; }\n\n.ui.chatroom .log .status:first-child {\n  border-top: none; }\n\n.ui.chatroom .log .flag {\n  float: left; }\n\n.ui.chatroom .log p {\n  margin-left: 0px; }\n\n.ui.chatroom .log .author {\n  font-weight: bold;\n  -webkit-transition: color 0.3s ease-out;\n  -moz-transition: color 0.3s ease-out;\n  transition: color 0.3s ease-out; }\n\n.ui.chatroom .log a.author:hover {\n  opacity: 0.8; }\n\n.ui.chatroom .log .message.admin p {\n  font-weight: bold;\n  margin: 1px 0px 0px 23px; }\n\n.ui.chatroom .log .divider {\n  margin: -1px 0px;\n  font-size: 11px;\n  padding: 10px 0px;\n  border-top: 1px solid #F8F8F8;\n  border-bottom: 1px solid #F8F8F8; }\n\n.ui.chatroom .log .divider .rule {\n  top: 50%;\n  width: 15%; }\n\n.ui.chatroom .log .divider .label {\n  color: #777777;\n  margin: 0px; }\n\n/* Chat Room User List */\n.ui.chatroom .room .list {\n  position: relative;\n  overflow: auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n  float: left;\n  background-color: #EEEEEE;\n  border-left: 1px solid #DDDDDD; }\n\n.ui.chatroom .room .list .user {\n  display: table;\n  padding: 3px 7px;\n  border-bottom: 1px solid #DDDDDD; }\n\n.ui.chatroom .room .list .user:hover {\n  background-color: #F8F8F8; }\n\n.ui.chatroom .room .list .image {\n  display: table-cell;\n  vertical-align: middle;\n  width: 20px; }\n\n.ui.chatroom .room .list .image img {\n  width: 20px;\n  height: 20px;\n  vertical-align: middle; }\n\n.ui.chatroom .room .list p {\n  display: table-cell;\n  vertical-align: middle;\n  padding-left: 7px;\n  padding-right: 14px;\n  font-size: 11px;\n  line-height: 1.2;\n  font-weight: bold; }\n\n.ui.chatroom .room .list a:hover {\n  opacity: 0.8; }\n\n/* User List Loading */\n.ui.chatroom.loading .loader {\n  display: block; }\n\n/* Chat Room Talk Input */\n.ui.chatroom .talk {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 5px 0px 0px;\n  background-color: #EEEEEE;\n  border-radius: 0px 0px 5px 5px; }\n\n.ui.chatroom .talk .avatar, .ui.chatroom .talk input, .ui.chatroom .talk .button {\n  float: left; }\n\n.ui.chatroom .talk .avatar img {\n  display: block;\n  width: 30px;\n  height: 30px;\n  margin-right: 4px;\n  border-radius: 500rem; }\n\n.ui.chatroom .talk input {\n  border: 1px solid #CCCCCC;\n  margin: 0px;\n  width: 196px;\n  height: 14px;\n  padding: 8px 5px;\n  font-size: 12px;\n  color: #555555; }\n\n.ui.chatroom .talk input.focus {\n  border: 1px solid #AAAAAA; }\n\n.ui.chatroom .send {\n  width: 80px;\n  height: 32px;\n  margin-left: -1px;\n  padding: 4px 12px;\n  font-size: 12px;\n  line-height: 23px;\n  -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1) inset;\n  border-radius: 0 5px 5px 0; }\n\n.ui.chatroom .talk .log-in.button {\n  display: block;\n  float: none;\n  margin-top: -6px;\n  height: 22px;\n  border-radius: 0px 0px 4px 4px; }\n\n.ui.chatroom .talk .log-in.button i {\n  vertical-align: text-top; }\n\n/* Quirky Flags */\n.ui.chatroom .log .team.flag {\n  width: 18px; }\n\n/* Chat room Loaded */\n.ui.chatroom.loading .loader {\n  display: block; }\n\n/* Standard Size */\n.ui.chatroom {\n  width: 330px;\n  height: 370px; }\n\n.ui.chatroom .room .container {\n  width: 3000px; }\n\n.ui.chatroom .log {\n  width: 314px;\n  height: 278px;\n  padding: 4px 7px; }\n\n.ui.chatroom .room .list {\n  width: 124px;\n  height: 278px;\n  padding: 4px 0px; }\n\n.ui.chatroom .room .list .user {\n  width: 110px; }\n\n.ui.chatroom .talk {\n  height: 40px; }\n\n/*\n * # Semantic - Checkbox\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Checkbox\n*******************************/\n/*--------------\n    Standard\n---------------*/\n/*--- Content ---*/\n.ui.checkbox {\n  position: relative;\n  display: inline-block;\n  min-width: 1em;\n  min-height: 1.25em;\n  line-height: 1em;\n  outline: none;\n  vertical-align: middle; }\n\n.ui.checkbox input {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  opacity: 0;\n  outline: none; }\n\n/*--- Box ---*/\n.ui.checkbox .box, .ui.checkbox label {\n  cursor: pointer;\n  padding-left: 2em;\n  outline: none; }\n\n.ui.checkbox .box:before, .ui.checkbox label:before {\n  position: absolute;\n  top: 0em;\n  line-height: 1;\n  width: 1em;\n  height: 1em;\n  left: 0em;\n  content: '';\n  border-radius: 4px;\n  background: #FFFFFF;\n  -webkit-transition: background-color 0.3s ease, -webkit-box-shadow 0.3s ease;\n  -moz-transition: background-color 0.3s ease, box-shadow 0.3s ease;\n  transition: background-color 0.3s ease, box-shadow 0.3s ease;\n  -webkit-box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.2);\n  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.2); }\n\n/*--- Checkbox ---*/\n.ui.checkbox .box:after, .ui.checkbox label:after {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n  filter: alpha(opacity=0);\n  opacity: 0;\n  content: '';\n  position: absolute;\n  background: transparent;\n  border: 0.2em solid #333333;\n  border-top: none;\n  border-right: none;\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg);\n  transform: rotate(-45deg); }\n\n.ui.checkbox .box:after, .ui.checkbox label:after {\n  top: 0.275em;\n  left: 0.2em;\n  width: 0.45em;\n  height: 0.15em; }\n\n/*--- Inside Label ---*/\n.ui.checkbox label {\n  display: block;\n  color: rgba(0, 0, 0, 0.6);\n  -webkit-transition: color 0.2s ease;\n  -moz-transition: color 0.2s ease;\n  transition: color 0.2s ease; }\n\n.ui.checkbox label:hover {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.checkbox input:focus ~ label {\n  color: rgba(0, 0, 0, 0.8); }\n\n/*--- Outside Label  ---*/\n.ui.checkbox ~ label {\n  cursor: pointer;\n  opacity: 0.85;\n  vertical-align: middle; }\n\n.ui.checkbox ~ label:hover {\n  opacity: 1; }\n\n/*******************************\n           States\n*******************************/\n/*--- Hover ---*/\n.ui.checkbox .box:hover::before, .ui.checkbox label:hover::before {\n  -webkit-box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.3);\n  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.3); }\n\n/*--- Down ---*/\n.ui.checkbox .box:active::before, .ui.checkbox label:active::before {\n  background-color: #F5F5F5; }\n\n/*--- Focus ---*/\n.ui.checkbox input:focus ~ .box:before, .ui.checkbox input:focus ~ label:before {\n  -webkit-box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.3);\n  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.3); }\n\n/*--- Active ---*/\n.ui.checkbox input:checked ~ .box:after, .ui.checkbox input:checked ~ label:after {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";\n  filter: alpha(opacity=100);\n  opacity: 1; }\n\n/*--- Disabled ---*/\n.ui.disabled.checkbox ~ .box:after, .ui.checkbox input[disabled] ~ .box:after, .ui.disabled.checkbox label, .ui.checkbox input[disabled] ~ label {\n  opacity: 0.4;\n  color: rgba(0, 0, 0, 0.3); }\n\n/*******************************\n          Variations\n*******************************/\n/*--------------\n     Radio\n---------------*/\n.ui.radio.checkbox .box:before, .ui.radio.checkbox label:before {\n  min-width: 1em;\n  height: 1em;\n  border-radius: 500px;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none; }\n\n.ui.radio.checkbox .box:after, .ui.radio.checkbox label:after {\n  border: none;\n  top: 0.2em;\n  left: 0.2em;\n  width: 0.6em;\n  height: 0.6em;\n  background-color: #555555;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none;\n  border-radius: 500px; }\n\n/*--------------\n     Slider\n---------------*/\n.ui.slider.checkbox {\n  cursor: pointer;\n  min-width: 3em; }\n\n/* Line */\n.ui.slider.checkbox:after {\n  position: absolute;\n  top: 0.5em;\n  left: 0em;\n  content: '';\n  width: 3em;\n  height: 2px;\n  background-color: rgba(0, 0, 0, 0.1); }\n\n/* Button */\n.ui.slider.checkbox .box, .ui.slider.checkbox label {\n  padding-left: 4em; }\n\n.ui.slider.checkbox .box:before, .ui.slider.checkbox label:before {\n  cursor: pointer;\n  display: block;\n  position: absolute;\n  top: -0.25em;\n  left: 0em;\n  z-index: 1;\n  width: 1.5em;\n  height: 1.5em;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  border-radius: 50rem;\n  -webkit-transition: left 0.3s ease 0s;\n  -moz-transition: left 0.3s ease 0s;\n  transition: left 0.3s ease 0s; }\n\n/* Button Activation Light */\n.ui.slider.checkbox .box:after, .ui.slider.checkbox label:after {\n  opacity: 1;\n  position: absolute;\n  content: '';\n  top: 0.15em;\n  left: 0em;\n  z-index: 2;\n  margin-left: 0.375em;\n  border: none;\n  width: 0.75em;\n  height: 0.75em;\n  border-radius: 50rem;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none;\n  -webkit-transition: background 0.3s ease 0s, left 0.3s ease 0s;\n  -moz-transition: background 0.3s ease 0s, left 0.3s ease 0s;\n  transition: background 0.3s ease 0s, left 0.3s ease 0s; }\n\n/* Selected Slider Toggle */\n.ui.slider.checkbox input:checked ~ .box:before, .ui.slider.checkbox input:checked ~ label:before, .ui.slider.checkbox input:checked ~ .box:after, .ui.slider.checkbox input:checked ~ label:after {\n  left: 1.75em; }\n\n/* Off Color */\n.ui.slider.checkbox .box:after, .ui.slider.checkbox label:after {\n  background-color: #D95C5C; }\n\n/* On Color */\n.ui.slider.checkbox input:checked ~ .box:after, .ui.slider.checkbox input:checked ~ label:after {\n  background-color: #89B84C; }\n\n/*--------------\n     Toggle\n---------------*/\n.ui.toggle.checkbox {\n  cursor: pointer; }\n\n.ui.toggle.checkbox .box, .ui.toggle.checkbox label {\n  padding-left: 4em; }\n\n/* Switch */\n.ui.toggle.checkbox .box:before, .ui.toggle.checkbox label:before {\n  cursor: pointer;\n  display: block;\n  position: absolute;\n  content: '';\n  top: -0.25em;\n  left: 0em;\n  z-index: 1;\n  background-color: #FFFFFF;\n  width: 3em;\n  height: 1.5em;\n  -webkit-transform: none;\n  -moz-transform: none;\n  -ms-transform: none;\n  transform: none;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset;\n  border-radius: 50rem; }\n\n/* Activation Light */\n.ui.toggle.checkbox .box:after, .ui.toggle.checkbox label:after {\n  opacity: 1;\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  content: '';\n  position: absolute;\n  top: 0.15em;\n  left: 0.5em;\n  z-index: 2;\n  border: none;\n  width: 0.75em;\n  height: 0.75em;\n  background-color: #D95C5C;\n  border-radius: 50rem;\n  -webkit-transition: background 0.3s ease 0s, left 0.3s ease 0s;\n  -moz-transition: background 0.3s ease 0s, left 0.3s ease 0s;\n  transition: background 0.3s ease 0s, left 0.3s ease 0s; }\n\n/* Active */\n.ui.toggle.checkbox:active .box:before, .ui.toggle.checkbox:active label:before {\n  background-color: #F5F5F5; }\n\n/* Active */\n.ui.toggle.checkbox input:checked ~ .box:after, .ui.toggle.checkbox input:checked ~ label:after {\n  left: 1.75em;\n  background-color: #89B84C; }\n\n/*--------------\n     Sizes\n---------------*/\n.ui.checkbox {\n  font-size: 1em; }\n\n.ui.large.checkbox {\n  font-size: 1.25em; }\n\n.ui.huge.checkbox {\n  font-size: 1.5em; }\n\n/*\n * # Semantic - Dimmer\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Dimmer\n*******************************/\n.ui.dimmable {\n  position: relative; }\n\n.ui.dimmer {\n  display: none;\n  position: absolute;\n  top: 0em !important;\n  left: 0em !important;\n  width: 0%;\n  height: 0%;\n  text-align: center;\n  vertical-align: middle;\n  background-color: rgba(0, 0, 0, 0.85);\n  opacity: 0;\n  line-height: 1;\n  -webkit-animation-fill-mode: both;\n  -moz-animation-fill-mode: both;\n  animation-fill-mode: both;\n  -webkit-animation-duration: 0.5s;\n  -moz-animation-duration: 0.5s;\n  animation-duration: 0.5s;\n  -webkit-transition: background-color 0.5s linear;\n  -moz-transition: background-color 0.5s linear;\n  transition: background-color 0.5s linear;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  z-index: 1000; }\n\n/* Dimmer Content */\n.ui.dimmer > .content {\n  width: 100%;\n  height: 100%;\n  display: table;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text; }\n\n.ui.dimmer > .content > div {\n  display: table-cell;\n  vertical-align: middle;\n  color: #FFFFFF; }\n\n/* Loose Coupling */\n.ui.segment > .ui.dimmer {\n  border-radius: 5px; }\n\n.ui.horizontal.segment > .ui.dimmer, .ui.vertical.segment > .ui.dimmer {\n  border-radius: 5px; }\n\n/*******************************\n            States\n*******************************/\n.ui.dimmed.dimmable:not(body) {\n  overflow: hidden; }\n\n.ui.dimmed.dimmable > .ui.animating.dimmer, .ui.dimmed.dimmable > .ui.visible.dimmer, .ui.active.dimmer {\n  display: block;\n  width: 100%;\n  height: 100%;\n  opacity: 1; }\n\n.ui.disabled.dimmer {\n  width: 0em !important;\n  height: 0em !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n      Page\n---------------*/\n.ui.page.dimmer {\n  position: fixed;\n  -webkit-transform-style: preserve-3d;\n  -moz-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n  -webkit-perspective: 2000px;\n  -moz-perspective: 2000px;\n  perspective: 2000px;\n  -webkit-transform-origin: center center;\n  -moz-transform-origin: center center;\n  -ms-transform-origin: center center;\n  transform-origin: center center; }\n\n.ui.scrolling.dimmable > .dimmer, .ui.scrolling.page.dimmer {\n  position: absolute; }\n\n/* Blurred Background\nbody.ui.dimmed.dimmable > :not(.dimmer){\n  filter: ~\"blur(15px) grayscale(0.7)\";\n}\n*/\n/*--------------\n    Aligned\n---------------*/\n.ui.dimmer > .top.aligned.content > * {\n  vertical-align: top; }\n\n.ui.dimmer > .bottom.aligned.content > * {\n  vertical-align: bottom; }\n\n/*--------------\n    Inverted\n---------------*/\n.ui.inverted.dimmer {\n  background-color: rgba(255, 255, 255, 0.85); }\n\n.ui.inverted.dimmer > .content > * {\n  color: rgba(0, 0, 0, 0.8); }\n\n/*--------------\n     Simple\n---------------*/\n/* Displays without javascript */\n.ui.simple.dimmer {\n  display: block;\n  overflow: hidden;\n  opacity: 1;\n  z-index: -100;\n  background-color: rgba(0, 0, 0, 0); }\n\n.ui.dimmed.dimmable > .ui.simple.dimmer {\n  overflow: visible;\n  opacity: 1;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.85);\n  z-index: 1; }\n\n.ui.simple.inverted.dimmer {\n  background-color: rgba(255, 255, 255, 0); }\n\n.ui.dimmed.dimmable > .ui.simple.inverted.dimmer {\n  background-color: rgba(255, 255, 255, 0.85); }\n\n/*\n * # Semantic - Dropdown\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Dropdown\n*******************************/\n.ui.dropdown {\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  line-height: 1;\n  -webkit-transition: border-radius 0.1s ease, width 0.2s ease;\n  -moz-transition: border-radius 0.1s ease, width 0.2s ease;\n  transition: border-radius 0.1s ease, width 0.2s ease;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -moz-tap-highlight-color: rgba(0, 0, 0, 0);\n  tap-highlight-color: rgba(0, 0, 0, 0); }\n\n/*******************************\n            Content\n*******************************/\n/*--------------\n     Menu\n---------------*/\n.ui.dropdown .menu {\n  cursor: auto;\n  position: absolute;\n  display: none;\n  top: 100%;\n  margin: 0em;\n  background-color: #FFFFFF;\n  min-width: 100%;\n  white-space: nowrap;\n  font-size: 0.875em;\n  text-shadow: none;\n  -webkit-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1);\n  border-radius: 0px 0px 0.325em 0.325em;\n  -webkit-transition: opacity 0.2s ease;\n  -moz-transition: opacity 0.2s ease;\n  transition: opacity 0.2s ease;\n  z-index: 11; }\n\n/*--------------\n      Icon\n---------------*/\n.ui.dropdown > .dropdown.icon {\n  width: auto;\n  margin: 0em 0em 0em 1em; }\n\n.ui.dropdown > .dropdown.icon:before {\n  content: \"\\f0d7\"; }\n\n.ui.dropdown .menu .item .dropdown.icon {\n  width: auto;\n  float: right;\n  margin: 0em 0em 0em 0.5em; }\n\n.ui.dropdown .menu .item .dropdown.icon:before {\n  content: \"\\f0da\";\n  /*rtl:\"\\f0d9\"*/ }\n\n/*--------------\n      Text\n---------------*/\n.ui.dropdown > .text {\n  display: inline-block;\n  -webkit-transition: color 0.2s ease;\n  -moz-transition: color 0.2s ease;\n  transition: color 0.2s ease; }\n\n/* Flyout Direction */\n.ui.dropdown .menu {\n  left: 0px; }\n\n/*--------------\n    Sub Menu\n---------------*/\n.ui.dropdown .menu .menu {\n  top: 0% !important;\n  left: 100% !important;\n  margin: 0em !important;\n  border-radius: 0 0.325em 0.325em 0em !important; }\n\n.ui.dropdown .menu .menu:after {\n  display: none; }\n\n.ui.dropdown .menu .item {\n  cursor: pointer;\n  border: none;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  height: auto;\n  font-size: 0.875em;\n  display: block;\n  color: rgba(0, 0, 0, 0.75);\n  padding: 0.85em 1em !important;\n  font-size: 0.875rem;\n  text-transform: none;\n  font-weight: normal;\n  text-align: left;\n  -webkit-touch-callout: none; }\n\n.ui.dropdown .menu .item:before {\n  display: none; }\n\n.ui.dropdown .menu .item .icon {\n  margin-right: 0.75em; }\n\n.ui.dropdown .menu .item:first-child {\n  border-top: none; }\n\n/*******************************\n            Coupling\n*******************************/\n/* Opposite on last menu on right */\n.ui.menu .right.menu .dropdown:last-child .menu, .ui.buttons > .ui.dropdown:last-child .menu {\n  left: auto;\n  right: 0px; }\n\n.ui.vertical.menu .dropdown.item > .dropdown.icon:before {\n  content: \"\\f0da\";\n  /*rtl:\"\\f0d9\"*/ }\n\n.ui.dropdown.icon.button > .dropdown.icon {\n  margin: 0em; }\n\n/*******************************\n            States\n*******************************/\n/* Dropdown Visible */\n.ui.visible.dropdown > .menu {\n  display: block; }\n\n/*--------------------\n        Hover\n----------------------*/\n/* Menu Item Hover */\n.ui.dropdown .menu .item:hover {\n  background-color: rgba(0, 0, 0, 0.02);\n  z-index: 12; }\n\n/*--------------------\n        Selected\n----------------------*/\n/* Menu Item Selected */\n.ui.dropdown .menu .item.selected {\n  background-color: rgba(0, 0, 0, 0.02);\n  z-index: 12; }\n\n/*--------------------\n        Active\n----------------------*/\n/* Menu Item Active */\n.ui.dropdown .menu .active.item {\n  background-color: rgba(0, 0, 0, 0.06) !important;\n  border-left: none;\n  border-color: transparent !important;\n  -webkit-box-shadow: none;\n  -moz-shadow: none;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  z-index: 12; }\n\n/*--------------------\n     Default Text\n----------------------*/\n.ui.dropdown > .default.text, .ui.default.dropdown > .text {\n  color: rgba(0, 0, 0, 0.5); }\n\n.ui.dropdown:hover > .default.text, .ui.default.dropdown:hover > .text {\n  color: rgba(0, 0, 0, 0.8); }\n\n/*--------------------\n        Error\n----------------------*/\n.ui.dropdown.error, .ui.dropdown.error > .text, .ui.dropdown.error > .default.text {\n  color: #D95C5C !important; }\n\n.ui.selection.dropdown.error {\n  background-color: #FFFAFA;\n  -webkit-box-shadow: 0px 0px 0px 1px #e7bebe !important;\n  box-shadow: 0px 0px 0px 1px #e7bebe !important; }\n\n.ui.selection.dropdown.error:hover {\n  -webkit-box-shadow: 0px 0px 0px 1px #e7bebe !important;\n  box-shadow: 0px 0px 0px 1px #e7bebe !important; }\n\n.ui.dropdown.error > .menu, .ui.dropdown.error > .menu .menu {\n  -webkit-box-shadow: 0px 0px 1px 1px #E7BEBE !important;\n  box-shadow: 0px 0px 1px 1px #E7BEBE !important; }\n\n.ui.dropdown.error > .menu .item {\n  color: #D95C5C !important; }\n\n/* Item Hover */\n.ui.dropdown.error > .menu .item:hover {\n  background-color: #FFF2F2 !important; }\n\n/* Item Active */\n.ui.dropdown.error > .menu .active.item {\n  background-color: #FDCFCF !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n     Simple\n---------------*/\n/* Displays without javascript */\n.ui.simple.dropdown .menu:before, .ui.simple.dropdown .menu:after {\n  display: none; }\n\n.ui.simple.dropdown .menu {\n  display: block;\n  overflow: hidden;\n  top: -9999px !important;\n  position: absolute;\n  opacity: 0;\n  width: 0;\n  height: 0;\n  -webkit-transition: opacity 0.2s ease-out;\n  -moz-transition: opacity 0.2s ease-out;\n  transition: opacity 0.2s ease-out; }\n\n.ui.simple.active.dropdown, .ui.simple.dropdown:hover {\n  border-bottom-left-radius: 0em !important;\n  border-bottom-right-radius: 0em !important; }\n\n.ui.simple.active.dropdown > .menu, .ui.simple.dropdown:hover > .menu {\n  overflow: visible;\n  width: auto;\n  height: auto;\n  top: 100% !important;\n  opacity: 1; }\n\n.ui.simple.dropdown > .menu .item:active > .menu, .ui.simple.dropdown:hover > .menu .item:hover > .menu {\n  overflow: visible;\n  width: auto;\n  height: auto;\n  top: 0% !important;\n  left: 100% !important;\n  opacity: 1; }\n\n.ui.simple.disabled.dropdown:hover .menu {\n  display: none;\n  height: 0px;\n  width: 0px;\n  overflow: hidden; }\n\n/*--------------\n    Selection\n---------------*/\n/* Displays like a select box */\n.ui.selection.dropdown {\n  cursor: pointer;\n  display: inline-block;\n  word-wrap: break-word;\n  white-space: normal;\n  background-color: #FFFFFF;\n  padding: 0.65em 1em;\n  line-height: 1.33;\n  color: rgba(0, 0, 0, 0.8);\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) !important;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1) !important;\n  border-radius: 0.3125em !important; }\n\n.ui.selection.dropdown select {\n  display: none; }\n\n.ui.selection.dropdown > .dropdown.icon {\n  opacity: 0.7;\n  margin: 0.2em 0em 0.2em 1.25em;\n  -webkit-transition: opacity 0.2s ease-out;\n  -moz-transition: opacity 0.2s ease-out;\n  transition: opacity 0.2s ease-out; }\n\n.ui.selection.dropdown, .ui.selection.dropdown .menu {\n  -webkit-transition: -webkit-box-shadow 0.2s ease-out;\n  -moz-transition: box-shadow 0.2s ease-out;\n  transition: box-shadow 0.2s ease-out; }\n\n.ui.selection.dropdown .menu {\n  top: 100%;\n  max-height: 312px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  -webkit-box-shadow: 0px 1px 0px 1px #E0E0E0;\n  box-shadow: 0px 1px 0px 1px #E0E0E0;\n  border-radius: 0px 0px 0.325em 0.325em; }\n\n.ui.selection.dropdown .menu:after, .ui.selection.dropdown .menu:before {\n  display: none; }\n\n.ui.selection.dropdown .menu img {\n  height: 2.5em;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 0.5em; }\n\n/*--------------------\n        Error\n----------------------*/\n.ui.selection.dropdown.error, .ui.selection.dropdown.error .item {\n  background-color: #FFFAFA;\n  color: #D95C5C; }\n\n.ui.selection.dropdown.error {\n  -webkit-box-shadow: 0px 0px 0px 1px #e7bebe !important;\n  box-shadow: 0px 0px 0px 1px #e7bebe !important; }\n\n.ui.selection.dropdown.error .menu {\n  -webkit-box-shadow: 0px 1px 0px 1px #E7BEBE;\n  box-shadow: 0px 1px 0px 1px #E7BEBE;\n  border-radius: 0px 0px 0.325em 0.325em; }\n\n/* Menu Item Active */\n.ui.selection.dropdown.error .menu .active.item {\n  background-color: #FDCFCF !important; }\n\n/* Hover */\n.ui.selection.dropdown:hover {\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2) !important;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2) !important; }\n\n.ui.selection.dropdown:hover .menu {\n  -webkit-box-shadow: 0px 1px 0px 1px #D3D3D3;\n  box-shadow: 0px 1px 0px 1px #D3D3D3; }\n\n.ui.selection.dropdown:hover > .dropdown.icon {\n  opacity: 1; }\n\n.ui.selection.dropdown.error:hover {\n  -webkit-box-shadow: 0px 0px 0px 1px #e7bebe !important;\n  box-shadow: 0px 0px 0px 1px #e7bebe !important; }\n\n.ui.selection.dropdown.error:hover .menu {\n  -webkit-box-shadow: 0px 1px 0px 1px #E7BEBE;\n  box-shadow: 0px 1px 0px 1px #E7BEBE; }\n\n.ui.selection.dropdown.error .menu .item:hover {\n  background-color: #FFF2F2; }\n\n/* Selected */\n.ui.selection.dropdown.error .menu .item.selected {\n  background-color: #FFF2F2; }\n\n/* Visible */\n.ui.visible.selection.dropdown {\n  border-bottom-left-radius: 0em !important;\n  border-bottom-right-radius: 0em !important; }\n\n/* Active */\n.ui.active.selection.dropdown {\n  border-radius: 0.3125em 0.3125em 0em 0em !important; }\n\n.ui.active.selection.dropdown > .dropdown.icon {\n  opacity: 1; }\n\n/*--------------\n      Fluid\n---------------*/\n.ui.fluid.dropdown {\n  display: block; }\n\n.ui.fluid.dropdown > .dropdown.icon {\n  float: right; }\n\n/*--------------\n     Inline\n---------------*/\n.ui.inline.dropdown {\n  cursor: pointer;\n  display: inline-block;\n  color: inherit; }\n\n.ui.inline.dropdown .dropdown.icon {\n  margin: 0em 0.5em 0em 0.25em; }\n\n.ui.inline.dropdown .text {\n  font-weight: bold; }\n\n.ui.inline.dropdown .menu {\n  cursor: auto;\n  margin-top: 0.25em;\n  border-radius: 0.325em; }\n\n/*--------------\n    Floating\n---------------*/\n.ui.floating.dropdown .menu {\n  left: 0;\n  right: auto;\n  margin-top: 0.5em !important;\n  border-radius: 0.325em; }\n\n/*--------------\n     Pointing\n---------------*/\n.ui.pointing.dropdown .menu {\n  top: 100%;\n  margin-top: 0.75em;\n  border-radius: 0.325em; }\n\n.ui.pointing.dropdown .menu:after {\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  content: \" \";\n  visibility: visible;\n  width: 0.5em;\n  height: 0.5em;\n  -webkit-box-shadow: -1px -1px 0px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: -1px -1px 0px 1px rgba(0, 0, 0, 0.05);\n  background-image: none;\n  background-color: #FFFFFF;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  z-index: 12; }\n\n.ui.pointing.dropdown .menu .active.item:first-child {\n  background: transparent -webkit-linear-gradient(transparent, rgba(0, 0, 0, 0.03));\n  background: transparent -moz-linear-gradient(transparent, rgba(0, 0, 0, 0.03));\n  background: transparent -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(0, 0, 0, 0.03)));\n  background: transparent linear-gradient(transparent, rgba(0, 0, 0, 0.03)); }\n\n/* Directions */\n.ui.pointing.dropdown .menu:after {\n  top: -0.25em;\n  left: 50%;\n  margin: 0em 0em 0em -0.25em; }\n\n.ui.top.left.pointing.dropdown .menu {\n  top: 100%;\n  bottom: auto;\n  left: 0%;\n  right: auto;\n  margin: 0.75em 0em 0em; }\n\n.ui.top.left.pointing.dropdown .menu:after {\n  top: -0.25em;\n  left: 1.25em;\n  right: auto;\n  margin: 0em;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg); }\n\n.ui.top.right.pointing.dropdown .menu {\n  top: 100%;\n  bottom: auto;\n  right: 0%;\n  left: auto;\n  margin: 0.75em 0em 0em; }\n\n.ui.top.right.pointing.dropdown .menu:after {\n  top: -0.25em;\n  left: auto;\n  right: 1.25em;\n  margin: 0em;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg); }\n\n.ui.left.pointing.dropdown .menu {\n  top: 0%;\n  left: 100%;\n  right: auto;\n  margin: 0em 0em 0em 0.75em; }\n\n.ui.left.pointing.dropdown .menu:after {\n  top: 1em;\n  left: -0.25em;\n  margin: 0em 0em 0em 0em;\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg);\n  transform: rotate(-45deg); }\n\n.ui.right.pointing.dropdown .menu {\n  top: 0%;\n  left: auto;\n  right: 100%;\n  margin: 0em 0.75em 0em 0em; }\n\n.ui.right.pointing.dropdown .menu:after {\n  top: 1em;\n  left: auto;\n  right: -0.25em;\n  margin: 0em 0em 0em 0em;\n  -webkit-transform: rotate(135deg);\n  -moz-transform: rotate(135deg);\n  -ms-transform: rotate(135deg);\n  transform: rotate(135deg); }\n\n/*\n * # Semantic - Modal\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n             Modal\n*******************************/\n.ui.modal {\n  display: none;\n  position: fixed;\n  z-index: 1001;\n  top: 50%;\n  left: 50%;\n  text-align: left;\n  width: 90%;\n  margin-left: -45%;\n  background-color: #FFFFFF;\n  border: 1px solid #DDDDDD;\n  border-radius: 5px;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text; }\n\n/*******************************\n            Content\n*******************************/\n/*--------------\n     Close\n---------------*/\n.ui.modal > .close {\n  cursor: pointer;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.8;\n  font-size: 1.25em;\n  top: -1.75em;\n  right: -1.75em;\n  color: #FFFFFF; }\n\n.ui.modal > .close:hover {\n  opacity: 1; }\n\n/*--------------\n     Header\n---------------*/\n.ui.modal > .header {\n  margin: 0em;\n  padding: 1.5rem 2rem;\n  font-size: 1.6em;\n  font-weight: bold;\n  border-radius: 0.325em 0.325em 0px 0px; }\n\n/*--------------\n     Content\n---------------*/\n.ui.modal > .content {\n  display: table;\n  width: 100%;\n  position: relative;\n  padding: 2em;\n  background-color: #F4F4F4;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.modal > .content > .left:not(.ui) {\n  display: table-cell;\n  padding-right: 1.5%;\n  min-width: 25%; }\n\n.ui.modal > .content > .right:not(.ui) {\n  display: table-cell;\n  padding-left: 1.5%;\n  vertical-align: top; }\n\n/*rtl:ignore*/\n.ui.modal > .content > .left:not(.ui) > i.icon {\n  font-size: 8em;\n  margin: 0em; }\n\n.ui.modal > .content p {\n  line-height: 1.6; }\n\n/*--------------\n     Actions\n---------------*/\n.ui.modal .actions {\n  padding: 1rem 2rem;\n  text-align: right; }\n\n.ui.modal .actions > .button {\n  margin-left: 0.75em; }\n\n/*-------------------\n       Sizing\n--------------------*/\n/* Mobile Only */\n@media only screen and (max-width: 768px) {\n  /*rtl:ignore*/\n  /*rtl:ignore*/\n  .ui.modal .content > .left:not(.ui) {\n    display: block;\n    padding: 0em 0em 1em; }\n  .ui.modal .content > .right:not(.ui) {\n    display: block;\n    padding: 1em 0em 0em;\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n  .ui.modal .content .image {\n    width: auto !important;\n    max-width: 100%; }\n  .ui.modal .actions {\n    padding-bottom: 0em; }\n  .ui.modal .actions > .buttons, .ui.modal .actions > .button {\n    margin-bottom: 1em; } }\n\n/* Tablet and Mobile */\n@media only screen and (max-width: 998px) {\n  .ui.modal {\n    width: 92%;\n    margin-left: -46%; }\n  .ui.modal > .close {\n    color: rgba(0, 0, 0, 0.8);\n    top: 1.5rem;\n    right: 1rem; } }\n\n/* Computer / Responsive */\n@media only screen and (min-width: 998px) {\n  .ui.modal {\n    width: 74%;\n    margin-left: -37%; } }\n\n@media only screen and (min-width: 1500px) {\n  .ui.modal {\n    width: 56%;\n    margin-left: -28%; } }\n\n@media only screen and (min-width: 1750px) {\n  .ui.modal {\n    width: 42%;\n    margin-left: -21%; } }\n\n@media only screen and (min-width: 2000px) {\n  .ui.modal {\n    width: 36%;\n    margin-left: -18%; } }\n\n/*******************************\n             Types\n*******************************/\n.ui.basic.modal {\n  background-color: transparent;\n  border: none;\n  color: #FFFFFF; }\n\n.ui.basic.modal > .close {\n  top: 1.5rem;\n  right: 1rem; }\n\n.ui.basic.modal .content {\n  background-color: transparent; }\n\n/*******************************\n            Variations\n*******************************/\n/* A modal that cannot fit on the page */\n.ui.modal.scrolling {\n  position: absolute;\n  margin-top: 10px; }\n\n/*******************************\n              States\n*******************************/\n.ui.active.modal {\n  display: block; }\n\n/*--------------\n      Size\n---------------*/\n/* Small */\n.ui.small.modal > .header {\n  font-size: 1.3em; }\n\n@media only screen and (min-width: 998px) {\n  .ui.small.modal {\n    width: 58%;\n    margin-left: -29%; } }\n\n@media only screen and (min-width: 1500px) {\n  .ui.small.modal {\n    width: 40%;\n    margin-left: -20%; } }\n\n@media only screen and (min-width: 1750px) {\n  .ui.small.modal {\n    width: 26%;\n    margin-left: -13%; } }\n\n@media only screen and (min-width: 2000px) {\n  .ui.small.modal {\n    width: 20%;\n    margin-left: -10%; } }\n\n/* Large */\n@media only screen and (min-width: 998px) {\n  .ui.large.modal {\n    width: 74%;\n    margin-left: -37%; } }\n\n@media only screen and (min-width: 1500px) {\n  .ui.large.modal {\n    width: 64%;\n    margin-left: -32%; } }\n\n@media only screen and (min-width: 1750px) {\n  .ui.large.modal {\n    width: 54%;\n    margin-left: -27%; } }\n\n@media only screen and (min-width: 2000px) {\n  .ui.large.modal {\n    width: 44%;\n    margin-left: -22%; } }\n\n/*\n * # Semantic - Nag\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n             Nag\n*******************************/\n.ui.nag {\n  display: none;\n  opacity: 0.95;\n  position: relative;\n  top: 0px;\n  left: 0%;\n  z-index: 101;\n  min-height: 0;\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  margin: 0em;\n  line-height: 3em;\n  padding: 0em 1em;\n  background-color: #555555;\n  -webkit-box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.2);\n  font-size: 1em;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.8);\n  border-radius: 0px 0px 5px 5px;\n  -webkit-transition: 0.2s background;\n  -moz-transition: 0.2s background;\n  transition: 0.2s background; }\n\na.ui.nag {\n  cursor: pointer; }\n\n.ui.nag > .title {\n  display: inline-block;\n  margin: 0em 0.5em;\n  color: #FFFFFF; }\n\n.ui.nag > .close.icon {\n  cursor: pointer;\n  opacity: 0.4;\n  position: absolute;\n  top: 50%;\n  right: 1em;\n  margin-top: -0.5em;\n  color: #FFFFFF;\n  -webkit-transition: 0.1s opacity;\n  -moz-transition: 0.1s opacity;\n  transition: 0.1s opacity; }\n\n/*******************************\n             States\n*******************************/\n/* Hover */\n.ui.nag:hover {\n  opacity: 1; }\n\n.ui.nag .close:hover {\n  opacity: 1; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n     Static\n---------------*/\n.ui.overlay.nag {\n  position: absolute;\n  display: block; }\n\n/*--------------\n     Fixed\n---------------*/\n.ui.fixed.nag {\n  position: fixed; }\n\n/*--------------\n     Bottom\n---------------*/\n.ui.bottom.nag {\n  border-radius: 5px 5px 0px 0px; }\n\n.ui.fixed.bottom.nags, .ui.fixed.bottom.nag {\n  top: auto;\n  bottom: 0px; }\n\n/*--------------\n     White\n---------------*/\n.ui.white.nags .nag, .ui.white.nag {\n  background-color: #F1F1F1;\n  text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.8);\n  color: #ACACAC; }\n\n.ui.white.nags .nag .close, .ui.white.nags .nag .title, .ui.white.nag .close, .ui.white.nag .title {\n  color: #333333; }\n\n/*******************************\n           Groups\n*******************************/\n.ui.nags .nag {\n  border-radius: 0px; }\n\n/*\n * # Semantic - Popup\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Popup\n*******************************/\n.ui.popup {\n  display: none;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  z-index: 900;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  max-width: 250px;\n  background-color: #FFFFFF;\n  padding: 0.8em 1.2em;\n  font-size: 0.875rem;\n  font-weight: normal;\n  font-style: normal;\n  color: rgba(0, 0, 0, 0.7);\n  border-radius: 0.2em;\n  -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1); }\n\n.ui.popup .header {\n  padding: 0em 0em 0.5em;\n  font-size: 1.125em;\n  line-height: 1.2;\n  font-weight: bold; }\n\n.ui.popup:before {\n  position: absolute;\n  content: \"\";\n  width: 0.75em;\n  height: 0.75rem;\n  background-image: none;\n  background-color: #FFFFFF;\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n  z-index: 2;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1); }\n\n.ui.popup .ui.button {\n  width: 100%; }\n\n/*******************************\n            Types\n*******************************/\n/*--------------\n     Spacing\n---------------*/\n.ui.popup {\n  margin: 0em; }\n\n.ui.popup.bottom {\n  margin: 0.75em 0em 0em; }\n\n.ui.popup.top {\n  margin: 0em 0em 0.75em; }\n\n.ui.popup.left.center {\n  margin: 0em 0.75em 0em 0em; }\n\n.ui.popup.right.center {\n  margin: 0em 0em 0em 0.75em; }\n\n.ui.popup.center {\n  margin-left: -1.25em; }\n\n/*--------------\n     Pointer\n---------------*/\n/*--- Below ---*/\n.ui.bottom.center.popup:before {\n  margin-left: -0.4em;\n  top: -0.4em;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  -webkit-box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2); }\n\n.ui.bottom.left.popup {\n  margin-right: -2em; }\n\n.ui.bottom.left.popup:before {\n  top: -0.4em;\n  right: 1em;\n  bottom: auto;\n  left: auto;\n  margin-left: 0em;\n  -webkit-box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2); }\n\n.ui.bottom.right.popup {\n  margin-left: -2em; }\n\n.ui.bottom.right.popup:before {\n  top: -0.4em;\n  left: 1em;\n  right: auto;\n  bottom: auto;\n  margin-left: 0em;\n  -webkit-box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2); }\n\n/*--- Above ---*/\n.ui.top.center.popup:before {\n  top: auto;\n  right: auto;\n  bottom: -0.4em;\n  left: 50%;\n  margin-left: -0.4em; }\n\n.ui.top.left.popup {\n  margin-right: -2em; }\n\n.ui.top.left.popup:before {\n  bottom: -0.4em;\n  right: 1em;\n  top: auto;\n  left: auto;\n  margin-left: 0em; }\n\n.ui.top.right.popup {\n  margin-left: -2em; }\n\n.ui.top.right.popup:before {\n  bottom: -0.4em;\n  left: 1em;\n  top: auto;\n  right: auto;\n  margin-left: 0em; }\n\n/*--- Left Center ---*/\n.ui.left.center.popup:before {\n  top: 50%;\n  right: -0.35em;\n  bottom: auto;\n  left: auto;\n  margin-top: -0.4em;\n  -webkit-box-shadow: 1px -1px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: 1px -1px 1px rgba(0, 0, 0, 0.2); }\n\n/*--- Right Center  ---*/\n.ui.right.center.popup:before {\n  top: 50%;\n  left: -0.35em;\n  bottom: auto;\n  right: auto;\n  margin-top: -0.4em;\n  -webkit-box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.2); }\n\n/*******************************\n            States\n*******************************/\n.ui.loading.popup {\n  display: block;\n  visibility: hidden; }\n\n.ui.animating.popup, .ui.visible.popup {\n  display: block; }\n\n/*******************************\n            Variations\n*******************************/\n/*--------------\n      Size\n---------------*/\n.ui.small.popup {\n  font-size: 0.75rem; }\n\n.ui.large.popup {\n  font-size: 1rem; }\n\n/*--------------\n     Colors\n---------------*/\n/* Inverted colors  */\n.ui.inverted.popup {\n  background-color: #333333;\n  border: none;\n  color: #FFFFFF;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n.ui.inverted.popup .header {\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #FFFFFF; }\n\n.ui.inverted.popup:before {\n  background-color: #333333;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*\n * # Semantic - Rating\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           Rating\n*******************************/\n.ui.rating {\n  display: inline-block;\n  font-size: 0em;\n  vertical-align: middle;\n  margin: 0em 0.5rem 0em 0em; }\n\n.ui.rating:last-child {\n  margin-right: 0em; }\n\n.ui.rating:before {\n  display: block;\n  content: '';\n  visibility: hidden;\n  clear: both;\n  height: 0; }\n\n/* Icon */\n.ui.rating .icon {\n  cursor: pointer;\n  margin: 0em;\n  width: 1em;\n  height: auto;\n  padding: 0em;\n  color: rgba(0, 0, 0, 0.15);\n  font-weight: normal;\n  font-style: normal; }\n\n.ui.rating .icon:before {\n  content: \"\\2605\"; }\n\n/*******************************\n             Types\n*******************************/\n/*-------------------\n        Star\n--------------------*/\n.ui.star.rating .icon {\n  width: 1.2em; }\n\n/* Star */\n.ui.star.rating .icon:before {\n  content: '\\f006';\n  font-family: 'Icons'; }\n\n/* Active Star */\n.ui.star.rating .active.icon:before {\n  content: '\\f005';\n  font-family: 'Icons'; }\n\n/*-------------------\n        Heart\n--------------------*/\n.ui.heart.rating .icon {\n  width: 1.2em; }\n\n.ui.heart.rating .icon:before {\n  content: '\\f08a';\n  font-family: 'Icons'; }\n\n/* Active */\n.ui.heart.rating .active.icon:before {\n  content: '\\f004';\n  font-family: 'Icons'; }\n\n.ui.heart.rating .active.icon {\n  color: #EF404A !important; }\n\n/* Hovered */\n.ui.heart.rating .hover.icon, .ui.heart.rating .active.hover.icon {\n  color: #FF2733 !important; }\n\n/*******************************\n             States\n*******************************/\n/*-------------------\n        Active\n--------------------*/\n/* disabled rating */\n.ui.disabled.rating .icon {\n  cursor: default; }\n\n/* active icons */\n.ui.rating .active.icon {\n  color: #FFCB08 !important; }\n\n/*-------------------\n        Hover\n--------------------*/\n/* rating */\n.ui.rating.hover .active.icon {\n  opacity: 0.5; }\n\n/* icon */\n.ui.rating .icon.hover, .ui.rating .icon.hover.active {\n  opacity: 1;\n  color: #FFB70A !important; }\n\n/*******************************\n          Variations\n*******************************/\n.ui.small.rating .icon {\n  font-size: 0.75rem; }\n\n.ui.rating .icon {\n  font-size: 1rem; }\n\n.ui.large.rating .icon {\n  font-size: 1.5rem;\n  vertical-align: middle; }\n\n.ui.huge.rating .icon {\n  font-size: 2rem;\n  vertical-align: middle; }\n\n/*\n * # Semantic - Search\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n             Search\n*******************************/\n.ui.search {\n  position: relative;\n  text-shadow: none;\n  font-style: normal;\n  font-weight: normal; }\n\n.ui.search input {\n  border-radius: 500rem; }\n\n/*--------------\n     Button\n---------------*/\n.ui.search > .button {\n  position: relative;\n  z-index: 2;\n  float: right;\n  margin: 0px 0px 0px -15px;\n  padding: 6px 15px 7px;\n  border-radius: 0px 15px 15px 0px;\n  -webkit-box-shadow: none;\n  box-shadow: none; }\n\n/*--------------\n    Results\n---------------*/\n.ui.search .results {\n  display: none;\n  position: absolute;\n  z-index: 999;\n  top: 100%;\n  left: 0px;\n  overflow: hidden;\n  background-color: #FFFFFF;\n  margin-top: 0.5em;\n  width: 380px;\n  font-size: 0.875em;\n  line-height: 1.2;\n  color: #555555;\n  border-radius: 3px;\n  -webkit-box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1), 0px -2px 0px 0px rgba(0, 0, 0, 0.1) inset;\n  box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1), 0px -2px 0px 0px rgba(0, 0, 0, 0.1) inset; }\n\n.ui.search .result {\n  cursor: pointer;\n  overflow: hidden;\n  padding: 0.5em 1em; }\n\n.ui.search .result:first-child {\n  border-top: none; }\n\n.ui.search .result .image {\n  background: #F0F0F0;\n  margin-right: 10px;\n  float: left;\n  overflow: hidden;\n  border-radius: 3px;\n  width: 38px;\n  height: 38px; }\n\n.ui.search .result .image img {\n  display: block;\n  width: 38px;\n  height: 38px; }\n\n.ui.search .result .image ~ .info {\n  float: none;\n  margin-left: 50px; }\n\n.ui.search .result .info {\n  float: left; }\n\n.ui.search .result .title {\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.search .result .description {\n  color: rgba(0, 0, 0, 0.6); }\n\n.ui.search .result .price {\n  float: right;\n  color: #5BBD72;\n  font-weight: bold; }\n\n/*--------------\n    Message\n---------------*/\n.ui.search .message {\n  padding: 1em; }\n\n.ui.search .message .text .title {\n  margin: 0em 0em 0.5rem;\n  font-size: 1.25rem;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.search .message .text .description {\n  margin: 0em;\n  font-size: 1rem;\n  color: rgba(0, 0, 0, 0.5); }\n\n/*--------------\n    Categories\n---------------*/\n.ui.search .results .category {\n  background-color: #FAFAFA;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  -webkit-transition: background 0.2s ease-in;\n  -moz-transition: background 0.2s ease-in;\n  transition: background 0.2s ease-in; }\n\n.ui.search .results .category:first-child {\n  border-top: none; }\n\n.ui.search .results .category > .name {\n  float: left;\n  padding: 12px 0px 0px 8px;\n  font-weight: bold;\n  color: #777777;\n  text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.8); }\n\n.ui.search .results .category .result {\n  background-color: #FFFFFF;\n  margin-left: 80px;\n  border-left: 1px solid rgba(0, 0, 0, 0.1); }\n\n/* View All Results */\n.ui.search .all {\n  display: block;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  background-color: #FAFAFA;\n  height: 2em;\n  line-height: 2em;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: bold;\n  text-align: center; }\n\n/*******************************\n            States\n*******************************/\n/*--------------\n      Hover\n---------------*/\n.ui.search .result:hover, .ui.search .category .result:hover {\n  background-color: #F8F8F8; }\n\n.ui.search .all:hover {\n  background-color: #F0F0F0; }\n\n/*--------------\n     Loading\n---------------*/\n.ui.search.loading .input .icon {\n  background: url("+__webpack_require__(169)+") no-repeat 50% 50%; }\n\n.ui.search.loading .input .icon:before, .ui.search.loading .input .icon:after {\n  display: none; }\n\n/*--------------\n      Active\n---------------*/\n.ui.search .results .category.active {\n  background-color: #F1F1F1; }\n\n.ui.search .results .category.active > .name {\n  color: #333333; }\n\n.ui.search .result.active, .ui.search .category .result.active {\n  background-color: #FBFBFB; }\n\n.ui.search .result.active .title {\n  color: #000000; }\n\n.ui.search .result.active .description {\n  color: #555555; }\n\n/*******************************\n           Variations\n*******************************/\n/* Large */\n.ui.search .large.result .image, .ui.search .large.result .image img {\n  width: 50px;\n  height: 50px; }\n\n.ui.search .large.results .indented.info {\n  margin-left: 65px; }\n\n.ui.search .large.results .info .title {\n  font-size: 16px; }\n\n.ui.search .large.results .info .description {\n  font-size: 11px; }\n\n/*\n * # Semantic - Shape\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n              Shape\n*******************************/\n.ui.shape {\n  display: inline-block;\n  position: relative;\n  -webkit-perspective: 2000px;\n  -moz-perspective: 2000px;\n  -ms-perspective: 2000px;\n  perspective: 2000px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.shape .sides {\n  -webkit-transform-style: preserve-3d;\n  -moz-transform-style: preserve-3d;\n  -ms-transform-style: preserve-3d;\n  transform-style: preserve-3d; }\n\n.ui.shape .side {\n  opacity: 1;\n  width: 100%;\n  margin: 0em !important;\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.ui.shape .side {\n  display: none; }\n\n/*******************************\n             Types\n*******************************/\n.ui.cube.shape .side {\n  min-width: 15em;\n  height: 15em;\n  padding: 2em;\n  background-color: #E6E6E6;\n  color: rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.3);\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.3); }\n\n.ui.cube.shape .side > .content {\n  width: 100%;\n  height: 100%;\n  display: table;\n  text-align: center;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text; }\n\n.ui.cube.shape .side > .content > div {\n  display: table-cell;\n  vertical-align: middle;\n  font-size: 2em; }\n\n/*******************************\n          Variations\n*******************************/\n.ui.text.shape.animating .sides {\n  position: static; }\n\n.ui.text.shape .side {\n  white-space: nowrap; }\n\n.ui.text.shape .side > * {\n  white-space: normal; }\n\n/*******************************\n             States\n*******************************/\n/*--------------\n    Loading\n---------------*/\n.ui.loading.shape {\n  position: absolute;\n  top: -9999px;\n  left: -9999px; }\n\n/*--------------\n    Animating\n---------------*/\n.ui.shape .animating.side {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: 100; }\n\n.ui.shape .hidden.side {\n  opacity: 0.4; }\n\n/*--------------\n      CSS\n---------------*/\n.ui.shape.animating {\n  -webkit-transition: all 0.6s ease-in-out;\n  -moz-transition: all 0.6s ease-in-out;\n  transition: all 0.6s ease-in-out; }\n\n.ui.shape.animating .sides {\n  position: absolute; }\n\n.ui.shape.animating .sides {\n  -webkit-transition: all 0.6s ease-in-out;\n  -moz-transition: all 0.6s ease-in-out;\n  transition: all 0.6s ease-in-out; }\n\n.ui.shape.animating .side {\n  -webkit-transition: opacity 0.6s ease-in-out;\n  -moz-transition: opacity 0.6s ease-in-out;\n  transition: opacity 0.6s ease-in-out; }\n\n/*--------------\n     Active\n---------------*/\n.ui.shape .active.side {\n  display: block; }\n\n/*\n * # Semantic - Sidebar\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Sidebar\n*******************************/\nbody {\n  -webkit-transition: margin 0.3s ease, -webkit-transform 0.3s ease;\n  /*rtl:append:,\n    padding 0.3s ease*/\n  -moz-transition: margin 0.3s ease, -moz-transform 0.3s ease;\n  /*rtl:append:,\n    padding 0.3s ease*/\n  transition: margin 0.3s ease, transform 0.3s ease;\n  /*rtl:append:,\n    padding 0.3s ease*/ }\n\n.ui.sidebar {\n  position: fixed;\n  margin: 0 !important;\n  height: 100% !important;\n  border-radius: 0px !important;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  -ms-overflow-y: auto;\n  overflow-y: auto;\n  top: 0px;\n  left: 0px;\n  z-index: 999;\n  -webkit-transition: margin-left 0.3s ease, margin-top 0.3s ease;\n  -moz-transition: margin-left 0.3s ease, margin-top 0.3s ease;\n  transition: margin-left 0.3s ease, margin-top 0.3s ease; }\n\n/*-------------------\n      Coupling\n--------------------*/\nbody.pushed.scrolling.ui.dimmable {\n  position: static; }\n\n/*******************************\n             Types\n*******************************/\n/*-------------------\n       Direction\n--------------------*/\n.ui.right.very.thin.sidebar, .ui.right.thin.sidebar, .ui.right.sidebar, .ui.right.wide.sidebar, .ui.right.very.wide.sidebar {\n  left: 100%;\n  margin: 0px !important; }\n\n.ui.top.sidebar {\n  width: 100% !important; }\n\n.ui.bottom.sidebar {\n  width: 100% !important;\n  top: 100%;\n  margin: 0px !important; }\n\n/*******************************\n            States\n*******************************/\n.ui.active.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.top.sidebar, .ui.active.bottom.sidebar {\n  margin-top: 0px !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n      Formatted\n--------------------*/\n.ui.styled.sidebar {\n  padding: 1em 1.5em;\n  background-color: #FFFFFF;\n  -webkit-box-shadow: 1px 0px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: 1px 0px 0px rgba(0, 0, 0, 0.1); }\n\n.ui.styled.very.thin.sidebar {\n  padding: 0.5em; }\n\n.ui.styled.thin.sidebar {\n  padding: 1em; }\n\n/*-------------------\n       Floating\n--------------------*/\n.ui.floating.sidebar {\n  -webkit-box-shadow: 2px 0px 2px rgba(0, 0, 0, 0.2);\n  box-shadow: 2px 0px 2px rgba(0, 0, 0, 0.2); }\n\n.ui.right.floating.sidebar {\n  -webkit-box-shadow: -2px 0px 2px rgba(0, 0, 0, 0.2);\n  box-shadow: -2px 0px 2px rgba(0, 0, 0, 0.2); }\n\n.ui.top.floating.sidebar {\n  -webkit-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2); }\n\n.ui.bottom.floating.sidebar {\n  -webkit-box-shadow: 0px -4px 4px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px -4px 4px rgba(0, 0, 0, 0.2); }\n\n/*-------------------\n        Width\n--------------------*/\n/* Very Thin */\n.ui.very.thin.sidebar {\n  width: 60px !important;\n  margin-left: -60px !important; }\n\n.ui.active.very.thin.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.right.very.thin.sidebar {\n  margin-left: -60px !important; }\n\n/* Thin */\n.ui.thin.sidebar {\n  width: 200px !important;\n  margin-left: -200px !important; }\n\n.ui.active.thin.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.right.thin.sidebar {\n  margin-left: -200px !important; }\n\n/* Standard */\n.ui.sidebar {\n  width: 275px !important;\n  margin-left: -275px !important; }\n\n.ui.active.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.right.sidebar {\n  margin-left: -275px !important; }\n\n/* Wide */\n.ui.wide.sidebar {\n  width: 350px !important;\n  margin-left: -350px !important; }\n\n.ui.active.wide.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.right.wide.sidebar {\n  margin-left: -350px !important; }\n\n/* Very Wide */\n.ui.very.wide.sidebar {\n  width: 475px !important;\n  margin-left: -475px !important; }\n\n.ui.active.very.wide.sidebar {\n  margin-left: 0px !important; }\n\n.ui.active.right.very.wide.sidebar {\n  margin-left: -475px !important; }\n\n/*-------------------\n       Height\n--------------------*/\n/* Standard */\n.ui.top.sidebar {\n  margin: -40px 0px 0px 0px !important; }\n\n.ui.top.sidebar, .ui.bottom.sidebar {\n  height: 40px !important; }\n\n.ui.active.bottom.sidebar {\n  margin-top: -40px !important; }\n\n/*\n * # Semantic - Tab\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n           UI Tabs\n*******************************/\n.ui.tab {\n  display: none; }\n\n/*******************************\n             States\n*******************************/\n/*--------------------\n       Active\n---------------------*/\n.ui.tab.active, .ui.tab.open {\n  display: block; }\n\n/*--------------------\n       Loading\n---------------------*/\n.ui.tab.loading {\n  position: relative;\n  overflow: hidden;\n  display: block;\n  min-height: 250px;\n  text-indent: -10000px; }\n\n.ui.tab.loading * {\n  position: relative !important;\n  left: -10000px !important; }\n\n.ui.tab.loading:after {\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  content: 'Loading...';\n  margin-left: -32px;\n  text-indent: 5px;\n  color: rgba(0, 0, 0, 0.4);\n  width: 100%;\n  height: 100%;\n  padding-top: 75px;\n  background: url("+__webpack_require__(168)+") no-repeat 0px 0px;\n  visibility: visible; }\n\n/*******************************\n  Semantic - Transition\n  Author: Jack Lukic\n\n  CSS animation definitions for\n  transition module\n\n*******************************/\n/*\n  Some transitions adapted from Animate CSS\n  https://github.com/daneden/animate.css\n*/\n.ui.transition {\n  -webkit-animation-iteration-count: 1;\n  -moz-animation-iteration-count: 1;\n  animation-iteration-count: 1;\n  -webkit-animation-duration: 1s;\n  -moz-animation-duration: 1s;\n  animation-duration: 1s;\n  -webkit-animation-timing-function: ease;\n  -moz-animation-timing-function: ease;\n  animation-timing-function: ease;\n  -webkit-animation-fill-mode: both;\n  -moz-animation-fill-mode: both;\n  animation-fill-mode: both; }\n\n/*******************************\n            States\n*******************************/\n.ui.animating.transition {\n  display: block;\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -webkit-transform: translateZ(0);\n  -moz-transform: translateZ(0);\n  transform: translateZ(0); }\n\n/* Loading */\n.ui.loading.transition {\n  position: absolute;\n  top: -999999px;\n  left: -99999px; }\n\n/* Hidden */\n.ui.hidden.transition {\n  display: none !important; }\n\n/* Visible */\n.ui.visible.transition {\n  display: block;\n  visibility: visible; }\n\n/* Disabled */\n.ui.disabled.transition {\n  -webkit-animation-play-state: paused;\n  -moz-animation-play-state: paused;\n  animation-play-state: paused; }\n\n/*******************************\n          Variations\n*******************************/\n.ui.looping.transition {\n  -webkit-animation-iteration-count: infinite;\n  -moz-animation-iteration-count: infinite;\n  animation-iteration-count: infinite; }\n\n/*******************************\n             Types\n*******************************/\n/*--------------\n    Emphasis\n---------------*/\n.ui.flash.transition {\n  -webkit-animation-name: flash;\n  -moz-animation-name: flash;\n  animation-name: flash; }\n\n.ui.shake.transition {\n  -webkit-animation-name: shake;\n  -moz-animation-name: shake;\n  animation-name: shake; }\n\n.ui.bounce.transition {\n  -webkit-animation-name: bounce;\n  -moz-animation-name: bounce;\n  animation-name: bounce; }\n\n.ui.tada.transition {\n  -webkit-animation-name: tada;\n  -moz-animation-name: tada;\n  animation-name: tada; }\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n.ui.pulse.transition {\n  -webkit-animation-name: pulse;\n  -moz-animation-name: pulse;\n  animation-name: pulse; }\n\n/*--------------\n     Flips\n---------------*/\n.ui.flip.transition.in, .ui.flip.transition.out {\n  -webkit-perspective: 2000px;\n  -moz-perspective: 2000px;\n  perspective: 2000px; }\n\n.ui.horizontal.flip.transition.in, .ui.horizontal.flip.transition.out {\n  -webkit-animation-name: horizontalFlip;\n  -moz-animation-name: horizontalFlip;\n  animation-name: horizontalFlip; }\n\n.ui.horizontal.flip.transition.out {\n  -webkit-animation-name: horizontalFlipOut;\n  -moz-animation-name: horizontalFlipOut;\n  animation-name: horizontalFlipOut; }\n\n.ui.vertical.flip.transition.in, .ui.vertical.flip.transition.out {\n  -webkit-animation-name: verticalFlip;\n  -moz-animation-name: verticalFlip;\n  animation-name: verticalFlip; }\n\n.ui.vertical.flip.transition.out {\n  -webkit-animation-name: verticalFlipOut;\n  -moz-animation-name: verticalFlipOut;\n  animation-name: verticalFlipOut; }\n\n/*--------------\n      Fades\n---------------*/\n.ui.fade.transition.in {\n  -webkit-animation-name: fade;\n  -moz-animation-name: fade;\n  animation-name: fade; }\n\n.ui.fade.transition.out {\n  -webkit-animation-name: fadeOut;\n  -moz-animation-name: fadeOut;\n  animation-name: fadeOut; }\n\n.ui.fade.up.transition.in {\n  -webkit-animation-name: fadeUp;\n  -moz-animation-name: fadeUp;\n  animation-name: fadeUp; }\n\n.ui.fade.up.transition.out {\n  -webkit-animation-name: fadeUpOut;\n  -moz-animation-name: fadeUpOut;\n  animation-name: fadeUpOut; }\n\n.ui.fade.down.transition.in {\n  -webkit-animation-name: fadeDown;\n  -moz-animation-name: fadeDown;\n  animation-name: fadeDown; }\n\n.ui.fade.down.transition.out {\n  -webkit-animation-name: fadeDownOut;\n  -moz-animation-name: fadeDownOut;\n  animation-name: fadeDownOut; }\n\n/*rtl:ignore renaming*/\n.ui.fade.left.transition.in {\n  -webkit-animation-name: fadeLeft;\n  -moz-animation-name: fadeLeft;\n  animation-name: fadeLeft; }\n\n/*rtl:ignore renaming*/\n.ui.fade.left.transition.out {\n  -webkit-animation-name: fadeLeftOut;\n  -moz-animation-name: fadeLeftOut;\n  animation-name: fadeLeftOut; }\n\n/*rtl:ignore renaming*/\n.ui.fade.right.transition.in {\n  -webkit-animation-name: fadeRight;\n  -moz-animation-name: fadeRight;\n  animation-name: fadeRight; }\n\n/*rtl:ignore renaming*/\n.ui.fade.right.transition.out {\n  -webkit-animation-name: fadeRightOut;\n  -moz-animation-name: fadeRightOut;\n  animation-name: fadeRightOut; }\n\n/*--------------\n      Scale\n---------------*/\n.ui.scale.transition.in {\n  -webkit-animation-name: scale;\n  -moz-animation-name: scale;\n  animation-name: scale; }\n\n.ui.scale.transition.out {\n  -webkit-animation-name: scaleOut;\n  -moz-animation-name: scaleOut;\n  animation-name: scaleOut; }\n\n/*--------------\n     Slide\n---------------*/\n.ui.slide.down.transition.in {\n  -webkit-animation-name: slide;\n  -moz-animation-name: slide;\n  animation-name: slide;\n  -moz-transform-origin: 50% 0%;\n  transform-origin: 50% 0%;\n  -ms-transform-origin: 50% 0%;\n  -webkit-transform-origin: 50% 0%; }\n\n.ui.slide.down.transition.out {\n  -webkit-animation-name: slideOut;\n  -moz-animation-name: slideOut;\n  animation-name: slideOut;\n  -webkit-transform-origin: 50% 0%;\n  -moz-transform-origin: 50% 0%;\n  -ms-transform-origin: 50% 0%;\n  transform-origin: 50% 0%; }\n\n.ui.slide.up.transition.in {\n  -webkit-animation-name: slide;\n  -moz-animation-name: slide;\n  animation-name: slide;\n  -webkit-transform-origin: 50% 100%;\n  -moz-transform-origin: 50% 100%;\n  -ms-transform-origin: 50% 100%;\n  transform-origin: 50% 100%; }\n\n.ui.slide.up.transition.out {\n  -webkit-animation-name: slideOut;\n  -moz-animation-name: slideOut;\n  animation-name: slideOut;\n  -webkit-transform-origin: 50% 100%;\n  -moz-transform-origin: 50% 100%;\n  -ms-transform-origin: 50% 100%;\n  transform-origin: 50% 100%; }\n\n@-webkit-keyframes slide {\n  0% {\n    opacity: 0;\n    -webkit-transform: scaleY(0);\n    transform: scaleY(0); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: scaleY(1);\n    transform: scaleY(1); } }\n\n@-moz-keyframes slide {\n  0% {\n    opacity: 0;\n    -moz-transform: scaleY(0);\n    transform: scaleY(0); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: scaleY(1);\n    transform: scaleY(1); } }\n\n@keyframes slide {\n  0% {\n    opacity: 0;\n    -webkit-transform: scaleY(0);\n    -moz-transform: scaleY(0);\n    transform: scaleY(0); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: scaleY(1);\n    -moz-transform: scaleY(1);\n    transform: scaleY(1); } }\n\n@-webkit-keyframes slideOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: scaleY(1);\n    transform: scaleY(1); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: scaleY(0);\n    transform: scaleY(0); } }\n\n@-moz-keyframes slideOut {\n  0% {\n    opacity: 1;\n    -moz-transform: scaleY(1);\n    transform: scaleY(1); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: scaleY(0);\n    transform: scaleY(0); } }\n\n@keyframes slideOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: scaleY(1);\n    -moz-transform: scaleY(1);\n    transform: scaleY(1); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: scaleY(0);\n    -moz-transform: scaleY(0);\n    transform: scaleY(0); } }\n\n/*******************************\n       Animations\n*******************************/\n/*--------------\n    Emphasis\n---------------*/\n/* Flash */\n@-webkit-keyframes flash {\n  0%, 50%, 100% {\n    opacity: 1; }\n\n  25%, 75% {\n    opacity: 0; } }\n\n@-moz-keyframes flash {\n  0%, 50%, 100% {\n    opacity: 1; }\n\n  25%, 75% {\n    opacity: 0; } }\n\n@keyframes flash {\n  0%, 50%, 100% {\n    opacity: 1; }\n\n  25%, 75% {\n    opacity: 0; } }\n\n/* Shake */\n@-webkit-keyframes shake {\n  0%, 100% {\n    -webkit-transform: translateX(0);\n    transform: translateX(0); }\n\n  10%, 30%, 50%, 70%, 90% {\n    -webkit-transform: translateX(-10px);\n    transform: translateX(-10px); }\n\n  20%, 40%, 60%, 80% {\n    -webkit-transform: translateX(10px);\n    transform: translateX(10px); } }\n\n@-moz-keyframes shake {\n  0%, 100% {\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  10%, 30%, 50%, 70%, 90% {\n    -moz-transform: translateX(-10px);\n    transform: translateX(-10px); }\n\n  20%, 40%, 60%, 80% {\n    -moz-transform: translateX(10px);\n    transform: translateX(10px); } }\n\n@keyframes shake {\n  0%, 100% {\n    -webkit-transform: translateX(0);\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  10%, 30%, 50%, 70%, 90% {\n    -webkit-transform: translateX(-10px);\n    -moz-transform: translateX(-10px);\n    transform: translateX(-10px); }\n\n  20%, 40%, 60%, 80% {\n    -webkit-transform: translateX(10px);\n    -moz-transform: translateX(10px);\n    transform: translateX(10px); } }\n\n/* Bounce */\n@-webkit-keyframes bounce {\n  0%, 20%, 50%, 80%, 100% {\n    -webkit-transform: translateY(0);\n    transform: translateY(0); }\n\n  40% {\n    -webkit-transform: translateY(-30px);\n    transform: translateY(-30px); }\n\n  60% {\n    -webkit-transform: translateY(-15px);\n    transform: translateY(-15px); } }\n\n@-moz-keyframes bounce {\n  0%, 20%, 50%, 80%, 100% {\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  40% {\n    -moz-transform: translateY(-30px);\n    transform: translateY(-30px); }\n\n  60% {\n    -moz-transform: translateY(-15px);\n    transform: translateY(-15px); } }\n\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100% {\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  40% {\n    -webkit-transform: translateY(-30px);\n    -moz-transform: translateY(-30px);\n    transform: translateY(-30px); }\n\n  60% {\n    -webkit-transform: translateY(-15px);\n    -moz-transform: translateY(-15px);\n    transform: translateY(-15px); } }\n\n/* Tada */\n@-webkit-keyframes tada {\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1); }\n\n  10%, 20% {\n    -webkit-transform: scale(0.9) rotate(-3deg);\n    transform: scale(0.9) rotate(-3deg); }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale(1.1) rotate(3deg);\n    transform: scale(1.1) rotate(3deg); }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale(1.1) rotate(-3deg);\n    transform: scale(1.1) rotate(-3deg); }\n\n  100% {\n    -webkit-transform: scale(1) rotate(0);\n    transform: scale(1) rotate(0); } }\n\n@-moz-keyframes tada {\n  0% {\n    -moz-transform: scale(1);\n    transform: scale(1); }\n\n  10%, 20% {\n    -moz-transform: scale(0.9) rotate(-3deg);\n    transform: scale(0.9) rotate(-3deg); }\n\n  30%, 50%, 70%, 90% {\n    -moz-transform: scale(1.1) rotate(3deg);\n    transform: scale(1.1) rotate(3deg); }\n\n  40%, 60%, 80% {\n    -moz-transform: scale(1.1) rotate(-3deg);\n    transform: scale(1.1) rotate(-3deg); }\n\n  100% {\n    -moz-transform: scale(1) rotate(0);\n    transform: scale(1) rotate(0); } }\n\n@keyframes tada {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    transform: scale(1); }\n\n  10%, 20% {\n    -webkit-transform: scale(0.9) rotate(-3deg);\n    -moz-transform: scale(0.9) rotate(-3deg);\n    transform: scale(0.9) rotate(-3deg); }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale(1.1) rotate(3deg);\n    -moz-transform: scale(1.1) rotate(3deg);\n    transform: scale(1.1) rotate(3deg); }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale(1.1) rotate(-3deg);\n    -moz-transform: scale(1.1) rotate(-3deg);\n    transform: scale(1.1) rotate(-3deg); }\n\n  100% {\n    -webkit-transform: scale(1) rotate(0);\n    -moz-transform: scale(1) rotate(0);\n    transform: scale(1) rotate(0); } }\n\n/* Pulse */\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; }\n\n  50% {\n    -webkit-transform: scale(0.9);\n    transform: scale(0.9);\n    opacity: 0.7; }\n\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; } }\n\n@-moz-keyframes pulse {\n  0% {\n    -moz-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; }\n\n  50% {\n    -moz-transform: scale(0.9);\n    transform: scale(0.9);\n    opacity: 0.7; }\n\n  100% {\n    -moz-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; } }\n\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; }\n\n  50% {\n    -webkit-transform: scale(0.9);\n    -moz-transform: scale(0.9);\n    transform: scale(0.9);\n    opacity: 0.7; }\n\n  100% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    transform: scale(1);\n    opacity: 1; } }\n\n/*--------------\n     Flips\n---------------*/\n/* Horizontal */\n@-webkit-keyframes horizontalFlip {\n  0% {\n    -webkit-transform: rotateY(-90deg);\n    transform: rotateY(-90deg);\n    opacity: 0; }\n\n  100% {\n    -webkit-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; } }\n\n@-moz-keyframes horizontalFlip {\n  0% {\n    -moz-transform: rotateY(-90deg);\n    transform: rotateY(-90deg);\n    opacity: 0; }\n\n  100% {\n    -moz-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; } }\n\n@keyframes horizontalFlip {\n  0% {\n    -webkit-transform: rotateY(-90deg);\n    -moz-transform: rotateY(-90deg);\n    transform: rotateY(-90deg);\n    opacity: 0; }\n\n  100% {\n    -webkit-transform: rotateY(0deg);\n    -moz-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; } }\n\n/* Horizontal */\n@-webkit-keyframes horizontalFlipOut {\n  0% {\n    -webkit-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; }\n\n  100% {\n    -webkit-transform: rotateY(90deg);\n    transform: rotateY(90deg);\n    opacity: 0; } }\n\n@-moz-keyframes horizontalFlipOut {\n  0% {\n    -moz-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; }\n\n  100% {\n    -moz-transform: rotateY(90deg);\n    transform: rotateY(90deg);\n    opacity: 0; } }\n\n@keyframes horizontalFlipOut {\n  0% {\n    -webkit-transform: rotateY(0deg);\n    -moz-transform: rotateY(0deg);\n    transform: rotateY(0deg);\n    opacity: 1; }\n\n  100% {\n    -webkit-transform: rotateY(90deg);\n    -moz-transform: rotateY(90deg);\n    transform: rotateY(90deg);\n    opacity: 0; } }\n\n/* Vertical */\n@-webkit-keyframes verticalFlip {\n  0% {\n    -webkit-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; }\n\n  100% {\n    -webkit-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; } }\n\n@-moz-keyframes verticalFlip {\n  0% {\n    -moz-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; }\n\n  100% {\n    -moz-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; } }\n\n@keyframes verticalFlip {\n  0% {\n    -webkit-transform: rotateX(-90deg);\n    -moz-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; }\n\n  100% {\n    -webkit-transform: rotateX(0deg);\n    -moz-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; } }\n\n@-webkit-keyframes verticalFlipOut {\n  0% {\n    -webkit-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; }\n\n  100% {\n    -webkit-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; } }\n\n@-moz-keyframes verticalFlipOut {\n  0% {\n    -moz-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; }\n\n  100% {\n    -moz-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; } }\n\n@keyframes verticalFlipOut {\n  0% {\n    -webkit-transform: rotateX(0deg);\n    -moz-transform: rotateX(0deg);\n    transform: rotateX(0deg);\n    opacity: 1; }\n\n  100% {\n    -webkit-transform: rotateX(-90deg);\n    -moz-transform: rotateX(-90deg);\n    transform: rotateX(-90deg);\n    opacity: 0; } }\n\n/*--------------\n     Fades\n---------------*/\n/* Fade */\n@-webkit-keyframes fade {\n  0% {\n    opacity: 0; }\n\n  100% {\n    opacity: 1; } }\n\n@-moz-keyframes fade {\n  0% {\n    opacity: 0; }\n\n  100% {\n    opacity: 1; } }\n\n@keyframes fade {\n  0% {\n    opacity: 0; }\n\n  100% {\n    opacity: 1; } }\n\n@-webkit-keyframes fadeOut {\n  0% {\n    opacity: 1; }\n\n  100% {\n    opacity: 0; } }\n\n@-moz-keyframes fadeOut {\n  0% {\n    opacity: 1; }\n\n  100% {\n    opacity: 0; } }\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1; }\n\n  100% {\n    opacity: 0; } }\n\n/* Fade Up */\n@-webkit-keyframes fadeUp {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(20px);\n    transform: translateY(20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0); } }\n\n@-moz-keyframes fadeUp {\n  0% {\n    opacity: 0;\n    -moz-transform: translateY(20px);\n    transform: translateY(20px); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: translateY(0);\n    transform: translateY(0); } }\n\n@keyframes fadeUp {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(20px);\n    -moz-transform: translateY(20px);\n    transform: translateY(20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0); } }\n\n@-webkit-keyframes fadeUpOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(20px);\n    transform: translateY(20px); } }\n\n@-moz-keyframes fadeUpOut {\n  0% {\n    opacity: 1;\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: translateY(20px);\n    transform: translateY(20px); } }\n\n@keyframes fadeUpOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(20px);\n    -moz-transform: translateY(20px);\n    transform: translateY(20px); } }\n\n/* Fade Down */\n@-webkit-keyframes fadeDown {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(-20px);\n    transform: translateY(-20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0); } }\n\n@-moz-keyframes fadeDown {\n  0% {\n    opacity: 0;\n    -moz-transform: translateY(-20px);\n    transform: translateY(-20px); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: translateY(0);\n    transform: translateY(0); } }\n\n@keyframes fadeDown {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(-20px);\n    -moz-transform: translateY(-20px);\n    transform: translateY(-20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0); } }\n\n@-webkit-keyframes fadeDownOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-20px);\n    transform: translateY(-20px); } }\n\n@-moz-keyframes fadeDownOut {\n  0% {\n    opacity: 1;\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: translateY(-20px);\n    transform: translateY(-20px); } }\n\n@keyframes fadeDownOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-20px);\n    -moz-transform: translateY(-20px);\n    transform: translateY(-20px); } }\n\n/* Fade Left */\n@-webkit-keyframes fadeLeft {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateX(-20px);\n    transform: translateX(-20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    transform: translateX(0); } }\n\n@-moz-keyframes fadeLeft {\n  0% {\n    opacity: 0;\n    -moz-transform: translateX(-20px);\n    transform: translateX(-20px); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: translateX(0);\n    transform: translateX(0); } }\n\n@keyframes fadeLeft {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateX(-20px);\n    -moz-transform: translateX(-20px);\n    transform: translateX(-20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    -moz-transform: translateX(0);\n    transform: translateX(0); } }\n\n@-webkit-keyframes fadeLeftOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateX(-20px);\n    transform: translateX(-20px); } }\n\n@-moz-keyframes fadeLeftOut {\n  0% {\n    opacity: 1;\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: translateX(-20px);\n    transform: translateX(-20px); } }\n\n@keyframes fadeLeftOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateX(-20px);\n    -moz-transform: translateX(-20px);\n    transform: translateX(-20px); } }\n\n/* Fade Right */\n@-webkit-keyframes fadeRight {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateX(20px);\n    transform: translateX(20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    transform: translateX(0); } }\n\n@-moz-keyframes fadeRight {\n  0% {\n    opacity: 0;\n    -moz-transform: translateX(20px);\n    transform: translateX(20px); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: translateX(0);\n    transform: translateX(0); } }\n\n@keyframes fadeRight {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateX(20px);\n    -moz-transform: translateX(20px);\n    transform: translateX(20px); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    -moz-transform: translateX(0);\n    transform: translateX(0); } }\n\n@-webkit-keyframes fadeRightOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateX(20px);\n    transform: translateX(20px); } }\n\n@-moz-keyframes fadeRightOut {\n  0% {\n    opacity: 1;\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: translateX(20px);\n    transform: translateX(20px); } }\n\n@keyframes fadeRightOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: translateX(0);\n    -moz-transform: translateX(0);\n    transform: translateX(0); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: translateX(20px);\n    -moz-transform: translateX(20px);\n    transform: translateX(20px); } }\n\n/*--------------\n      Scale\n---------------*/\n/* Scale */\n@-webkit-keyframes scale {\n  0% {\n    opacity: 0;\n    -webkit-transform: scale(0.7);\n    transform: scale(0.7); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1); } }\n\n@-moz-keyframes scale {\n  0% {\n    opacity: 0;\n    -moz-transform: scale(0.7);\n    transform: scale(0.7); }\n\n  100% {\n    opacity: 1;\n    -moz-transform: scale(1);\n    transform: scale(1); } }\n\n@keyframes scale {\n  0% {\n    opacity: 0;\n    -webkit-transform: scale(0.7);\n    -moz-transform: scale(0.7);\n    transform: scale(0.7); }\n\n  100% {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    transform: scale(1); } }\n\n@-webkit-keyframes scaleOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: scale(0.7);\n    transform: scale(0.7); } }\n\n@-moz-keyframes scaleOut {\n  0% {\n    opacity: 1;\n    -moz-transform: scale(1);\n    transform: scale(1); }\n\n  100% {\n    opacity: 0;\n    -moz-transform: scale(0.7);\n    transform: scale(0.7); } }\n\n@keyframes scaleOut {\n  0% {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    transform: scale(1); }\n\n  100% {\n    opacity: 0;\n    -webkit-transform: scale(0.7);\n    -moz-transform: scale(0.7);\n    transform: scale(0.7); } }\n\n/*\n * # Semantic - Video\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*******************************\n            Video\n*******************************/\n.ui.video {\n  position: relative;\n  max-width: 100%; }\n\n/*--------------\n     Content\n---------------*/\n/* Placeholder Image */\n.ui.video .placeholder {\n  background-color: #333333; }\n\n/* Play Icon Overlay */\n.ui.video .play {\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";\n  filter: alpha(opacity=60);\n  opacity: 0.6;\n  -webkit-transition: opacity 0.3s;\n  -moz-transition: opacity 0.3s;\n  transition: opacity 0.3s; }\n\n.ui.video .play.icon:before {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 11;\n  font-size: 6rem;\n  margin: -3rem 0em 0em -3rem;\n  color: #FFFFFF;\n  text-shadow: 0px 3px 3px rgba(0, 0, 0, 0.4); }\n\n.ui.video .placeholder {\n  display: block;\n  width: 100%;\n  height: 100%; }\n\n/* IFrame Embed */\n.ui.video .embed {\n  display: none; }\n\n/*******************************\n            States\n*******************************/\n/*--------------\n    Hover\n---------------*/\n.ui.video .play:hover {\n  opacity: 1; }\n\n/*--------------\n     Active\n---------------*/\n.ui.video.active .play, .ui.video.active .placeholder {\n  display: none; }\n\n.ui.video.active .embed {\n  display: block; }\n\n/*\n * # Semantic Comment View\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n * Released: April 17 2014\n */\n/*******************************\n            Standard\n*******************************/\n/*--------------\n    Comments\n---------------*/\n.ui.comments a {\n  cursor: pointer; }\n\n/*--------------\n     Comment\n---------------*/\n.ui.comments .comment {\n  position: relative;\n  margin-top: 0.5em;\n  padding-top: 0.5em; }\n\n.ui.comments .comment:first-child {\n  margin-top: 0em;\n  padding-top: 0em; }\n\n/*--------------------\n   Avatar (Optional)\n---------------------*/\n.ui.comments .comment .avatar {\n  display: block;\n  float: left;\n  width: 4em; }\n\n.ui.comments .comment .avatar img {\n  display: block;\n  margin: 0em auto;\n  width: 3em;\n  height: 3em;\n  border-radius: 500px; }\n\n/*--------------\n     Content\n---------------*/\n.ui.comments .comment > .content, .ui.comments .comment > .avatar {\n  display: block; }\n\n.ui.comments .comment .avatar ~ .content {\n  padding: 0em 1em; }\n\n/* If there is an avatar move content over */\n.ui.comments .comment > .avatar ~ .content {\n  padding-top: 0.25em;\n  margin-left: 3.5em; }\n\n.ui.comments .comment .metadata {\n  display: inline-block;\n  margin-left: 0.3em;\n  color: rgba(0, 0, 0, 0.4); }\n\n.ui.comments .comment .metadata > * {\n  display: inline-block;\n  margin: 0em 0.3em 0em 0em; }\n\n/*--------------------\n     Comment Text\n---------------------*/\n.ui.comments .comment .text {\n  margin: 0.25em 0em 0.5em;\n  word-wrap: break-word; }\n\n/*--------------------\n     User Actions\n---------------------*/\n.ui.comments .comment .actions {\n  font-size: 0.9em; }\n\n.ui.comments .comment .actions a {\n  display: inline-block;\n  margin: 0em 0.3em 0em 0em;\n  color: rgba(0, 0, 0, 0.3); }\n\n.ui.comments .comment .actions a.active, .ui.comments .comment .actions a:hover {\n  color: rgba(0, 0, 0, 0.6); }\n\n/*--------------------\n      Reply Form\n---------------------*/\n.ui.comments .reply.form {\n  margin-top: 0.75em;\n  width: 100%;\n  max-width: 30em; }\n\n.ui.comments .comment .reply.form {\n  margin-left: 2em; }\n\n.ui.comments > .reply.form {\n  margin-top: 1.5em;\n  max-width: 40em; }\n\n.ui.comments .reply.form textarea {\n  height: 12em; }\n\n/*--------------------\n    Nested Comments\n---------------------*/\n.ui.comments .comment .comments {\n  margin-top: 0.5em;\n  padding-top: 0.5em;\n  padding-bottom: 1em; }\n\n.ui.comments .comment .comments:before {\n  position: absolute;\n  top: 0px;\n  left: 0px; }\n\n/* One Deep */\n.ui.comments > .comment .comments {\n  margin-left: 2em; }\n\n/* Two Deep */\n.ui.comments > .comment > .comments > .comment > .comments {\n  margin-left: 1.75em; }\n\n/* Three Deep */\n.ui.comments > .comment > .comments > .comment > .comments > .comment > .comments {\n  margin-left: 1.5em; }\n\n/* Four Deep or more */\n.ui.comments > .comment > .comments > .comment > .comments > .comment > .comments > .comment .comments {\n  margin-left: 0.5em; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------------\n        Threaded\n---------------------*/\n.ui.threaded.comments .comment .comments {\n  margin-left: 2em !important;\n  padding-left: 2em !important;\n  -webkit-box-shadow: -1px 0px 0px rgba(0, 0, 0, 0.05);\n  box-shadow: -1px 0px 0px rgba(0, 0, 0, 0.05); }\n\n/*--------------------\n        Minimal\n---------------------*/\n.ui.minimal.comments .comment .actions {\n  opacity: 0;\n  -webkit-transition: opacity 0.1s ease-out;\n  -moz-transition: opacity 0.1s ease-out;\n  transition: opacity 0.1s ease-out;\n  -webkit-transition-delay: 0.1s;\n  -moz-transition-delay: 0.1s;\n  transition-delay: 0.1s; }\n\n.ui.minimal.comments .comment > .content:hover > .actions {\n  opacity: 1; }\n\n/*--------------------\n       Sizes\n---------------------*/\n.ui.small.comments {\n  font-size: 0.875em; }\n\n/*\n * # Activity Feed View\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n * Released: May 22, 2014\n */\n/*******************************\n         Activity Feed\n*******************************/\n.ui.feed a {\n  cursor: pointer; }\n\n.ui.feed, .ui.feed .event, .ui.feed .label, .ui.feed .content, .ui.feed .extra {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*******************************\n            Content\n*******************************/\n/* Event */\n.ui.feed .event {\n  width: 100%;\n  display: table;\n  padding: 1em; }\n\n.ui.feed .event:first-child {\n  border-top: 0px; }\n\n.ui.feed .event:last-child {\n  margin-bottom: 1em; }\n\n/* Event Label */\n.ui.feed .label {\n  width: 3em;\n  display: table-cell;\n  vertical-align: top;\n  text-align: left; }\n\n.ui.feed .label .icon {\n  font-size: 1.5em;\n  padding: 0.5em;\n  margin: 0em; }\n\n.ui.feed .label img {\n  width: 3em;\n  margin: 0em;\n  border-radius: 50em; }\n\n.ui.feed .label + .content {\n  padding: 0.75em 1em 0em; }\n\n/* Content */\n.ui.feed .content {\n  display: table-cell;\n  vertical-align: top;\n  text-align: left;\n  word-wrap: break-word; }\n\n/* Date */\n.ui.feed .content .date {\n  float: right;\n  padding-left: 1em;\n  color: rgba(0, 0, 0, 0.4); }\n\n/* Summary */\n.ui.feed .content .summary {\n  color: rgba(0, 0, 0, 0.75); }\n\n.ui.feed .content .summary img {\n  display: inline-block;\n  margin-right: 0.25em;\n  width: 4em;\n  border-radius: 500px; }\n\n/* Additional Information */\n.ui.feed .content .extra {\n  margin: 1em 0em 0em;\n  padding: 0.5em 0em 0em;\n  color: rgba(0, 0, 0, 0.5); }\n\n.ui.feed .content .extra.images img {\n  display: inline-block;\n  margin-right: 0.25em;\n  width: 6em; }\n\n.ui.feed .content .extra.text {\n  padding: 0.5em 1em;\n  border-left: 0.2em solid rgba(0, 0, 0, 0.1); }\n\n/*******************************\n            Variations\n*******************************/\n.ui.small.feed {\n  font-size: 0.875em; }\n\n.ui.small.feed .label img {\n  width: 2.5em; }\n\n.ui.small.feed .label .icon {\n  font-size: 1.25em; }\n\n.ui.feed .event {\n  padding: 0.75em 0em; }\n\n.ui.small.feed .label + .content {\n  padding: 0.5em 0.5em 0; }\n\n.ui.small.feed .content .extra.images img {\n  width: 5em; }\n\n.ui.small.feed .content .extra {\n  margin: 0.5em 0em 0em; }\n\n.ui.small.feed .content .extra.text {\n  padding: 0.25em 0.5em; }\n\n/*\n * # Semantic Item View\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n * Released: April 17 2014\n */\n/*******************************\n            Standard\n*******************************/\n/*--------------\n      Items\n---------------*/\n.ui.items {\n  margin: 1em 0em 0em; }\n\n.ui.items:first-child {\n  margin-top: 0em; }\n\n.ui.items:last-child {\n  margin-bottom: -1em; }\n\n/* Force Clearing */\n.ui.items:after {\n  display: block;\n  content: ' ';\n  height: 0px;\n  clear: both;\n  overflow: hidden;\n  visibility: hidden; }\n\n/*--------------\n      Item\n---------------*/\n.ui.items > .row > .item, .ui.items > .item {\n  display: block;\n  float: left;\n  position: relative;\n  top: 0px;\n  width: 316px;\n  min-height: 375px;\n  margin: 0em 0.5em 2.5em;\n  padding: 0em;\n  background-color: #FFFFFF;\n  line-height: 1.2;\n  font-size: 1em;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);\n  border-bottom: 0.2em solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.33em;\n  -webkit-transition: -webkit-box-shadow 0.2s ease;\n  -moz-transition: box-shadow 0.2s ease;\n  transition: box-shadow 0.2s ease;\n  padding: 0.5em; }\n\n.ui.items a.item, .ui.items .item a {\n  cursor: pointer; }\n\n.ui.items .item, .ui.items .item > .image, .ui.items .item > .image .overlay, .ui.items .item > .content, .ui.items .item > .content > .meta, .ui.items .item > .content > .extra {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*--------------\n      Images\n---------------*/\n.ui.items .item > .image {\n  display: block;\n  position: relative;\n  background-color: rgba(0, 0, 0, 0.05);\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -ms-box-sizing: border-box;\n  box-sizing: border-box;\n  border-radius: 0.2em; }\n\n.ui.items .item > .image > img {\n  display: block;\n  width: 100%; }\n\n/*--------------\n     Content\n---------------*/\n.ui.items .item > .content {\n  padding: 0.75em 0.5em; }\n\n.ui.items .item > .content > .name {\n  display: block;\n  font-size: 1.25em;\n  font-weight: bold;\n  margin-bottom: 0.2em;\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.items .item > .content > .description {\n  clear: both;\n  margin: 0em 0em;\n  color: rgba(0, 0, 0, 0.45); }\n\n.ui.items .item > .content > .description p {\n  margin: 0em 0em 0.2em; }\n\n.ui.items .item > .content > .description p:last-child {\n  margin-bottom: 0em; }\n\n/*--------------\n      Meta\n---------------*/\n.ui.items .item .meta {\n  float: right;\n  color: rgba(0, 0, 0, 0.35); }\n\n.ui.items .item > .content > .meta + .name {\n  float: left; }\n\n/*--------------\n     Labels\n---------------*/\n/*-----star----- */\n/* hover */\n.ui.items .item .star.label:hover::after {\n  border-right-color: #F6EFC3; }\n\n.ui.items .item .star.label:hover::after {\n  border-top-color: #F6EFC3; }\n\n.ui.items .item .star.label:hover .icon {\n  color: #ac9400; }\n\n/* active */\n.ui.items .item .star.label.active::after {\n  border-right-color: #F6EFC3; }\n\n.ui.items .item .star.label.active::after {\n  border-top-color: #F6EFC3; }\n\n.ui.items .item .star.label.active .icon {\n  color: #ac9400; }\n\n/*-----like----- */\n/* hover */\n.ui.items .item .like.label:hover::after {\n  border-right-color: #F5E1E2; }\n\n.ui.items .item .like.label.active::after {\n  border-top-color: #F5E1E2; }\n\n.ui.items .item .like.label:hover .icon {\n  color: #ef404a; }\n\n/* active */\n.ui.items .item .like.label.active::after {\n  border-right-color: #F5E1E2; }\n\n.ui.items .item .like.label.active::after {\n  border-top-color: #F5E1E2; }\n\n.ui.items .item .like.label.active .icon {\n  color: #ef404a; }\n\n/*--------------\n      Extra\n---------------*/\n.ui.items .item .extra {\n  position: absolute;\n  width: 100%;\n  padding: 0em 0.5em;\n  bottom: -2em;\n  left: 0em;\n  height: 1.5em;\n  color: rgba(0, 0, 0, 0.25);\n  -webkit-transition: color 0.2s ease;\n  -moz-transition: color 0.2s ease;\n  transition: color 0.2s ease; }\n\n.ui.items .item .extra > img {\n  display: inline-block;\n  border-radius: 500px 500px 500px 500px;\n  margin-right: 0.25em;\n  vertical-align: middle;\n  width: 2em; }\n\n.ui.items .item .extra .left {\n  float: left; }\n\n.ui.items .item .extra .right {\n  float: right; }\n\n/*******************************\n           States\n*******************************/\n.ui.items .item:hover {\n  cursor: pointer;\n  z-index: 5;\n  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2); }\n\n.ui.items .item:hover .extra {\n  color: rgba(0, 0, 0, 0.5); }\n\n.ui.items .item:nth-of-type(6n+1):hover {\n  border-bottom-color: #6ECFF5 !important; }\n\n.ui.items .item:nth-of-type(6n+2):hover {\n  border-bottom-color: #5C6166 !important; }\n\n.ui.items .item:nth-of-type(6n+3):hover {\n  border-bottom-color: #A1CF64 !important; }\n\n.ui.items .item:nth-of-type(6n+4):hover {\n  border-bottom-color: #D95C5C !important; }\n\n.ui.items .item:nth-of-type(6n+5):hover {\n  border-bottom-color: #00B5AD !important; }\n\n.ui.items .item:nth-of-type(6n+6):hover {\n  border-bottom-color: #564F8A !important; }\n\n/*******************************\n           Variations\n*******************************/\n/*--------------\n    Connected\n---------------*/\n.ui.connected.items {\n  display: table;\n  width: 100%;\n  margin-left: 0em !important;\n  margin-right: 0em !important; }\n\n.ui.connected.items > .row > .item, .ui.connected.items > .item {\n  float: none;\n  display: table-cell;\n  vertical-align: top;\n  height: auto;\n  border-radius: 0px;\n  margin: 0em;\n  width: 33.33%; }\n\n.ui.connected.items > .row {\n  display: table;\n  margin: 0.5em 0em; }\n\n.ui.connected.items > .row:first-child {\n  margin-top: 0em; }\n\n/* Borders */\n.ui.connected.items > .item, .ui.connected.items > .row:last-child > .item {\n  border-bottom: 0.2em solid rgba(0, 0, 0, 0.2); }\n\n.ui.connected.items > .row:last-child > .item:first-child, .ui.connected.items > .item:first-child {\n  border-radius: 0em 0em 0em 0.33em; }\n\n.ui.connected.items > .row:last-child > .item:last-child, .ui.connected.items > .item:last-child {\n  border-radius: 0em 0em 0.33em 0em; }\n\n/* Hover */\n.ui.connected.items .item:hover {\n  border-bottom-width: 0.2em; }\n\n/* Item Count */\n.ui.one.connected.items > .row > .item, .ui.one.connected.items > .item {\n  width: 50%;\n  padding-left: 2%;\n  padding-right: 2%; }\n\n.ui.two.connected.items > .row > .item, .ui.two.connected.items > .item {\n  width: 50%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.three.connected.items > .row > .item, .ui.three.connected.items > .item {\n  width: 33.333%;\n  padding-left: 1%;\n  padding-right: 1%; }\n\n.ui.four.connected.items > .row > .item, .ui.four.connected.items > .item {\n  width: 25%;\n  padding-left: 0.5%;\n  padding-right: 0.5%; }\n\n.ui.five.connected.items > .row > .item, .ui.five.connected.items > .item {\n  width: 20%;\n  padding-left: 0.5%;\n  padding-right: 0.5%; }\n\n.ui.six.connected.items > .row > .item, .ui.six.connected.items > .item {\n  width: 16.66%;\n  padding-left: 0.5%;\n  padding-right: 0.5%; }\n\n.ui.seven.connected.items > .row > .item, .ui.seven.connected.items > .item {\n  width: 14.28%;\n  padding-left: 0.5%;\n  padding-right: 0.5%; }\n\n.ui.eight.connected.items > .row > .item, .ui.eight.connected.items > .item {\n  width: 12.5%;\n  padding-left: 0.25%;\n  padding-right: 0.25%; }\n\n.ui.nine.connected.items > .row > .item, .ui.nine.connected.items > .item {\n  width: 11.11%;\n  padding-left: 0.25%;\n  padding-right: 0.25%; }\n\n.ui.ten.connected.items > .row > .item, .ui.ten.connected.items > .item {\n  width: 10%;\n  padding-left: 0.2%;\n  padding-right: 0.2%; }\n\n.ui.eleven.connected.items > .row > .item, .ui.eleven.connected.items > .item {\n  width: 9.09%;\n  padding-left: 0.2%;\n  padding-right: 0.2%; }\n\n.ui.twelve.connected.items > .row > .item, .ui.twelve.connected.items > .item {\n  width: 8.3333%;\n  padding-left: 0.1%;\n  padding-right: 0.1%; }\n\n/*-------------------\n      Responsive\n--------------------*/\n@media only screen and (max-width: 768px) {\n  .ui.stackable.items {\n    display: block !important; }\n  .ui.stackable.items > .item, .ui.stackable.items > .row > .item {\n    display: block !important;\n    height: auto !important;\n    width: 100% !important;\n    padding: 0% !important; } }\n\n/*--------------------\n      Horizontal\n---------------------*/\n.ui.horizontal.items > .item, .ui.items > .horizontal.item {\n  display: table; }\n\n.ui.horizontal.items > .item > .image, .ui.items > .horizontal.item > .image {\n  display: table-cell;\n  width: 50%; }\n\n.ui.horizontal.items > .item > .image + .content, .ui.items > .horizontal.item > .image + .content {\n  width: 50%;\n  display: table-cell; }\n\n.ui.horizontal.items > .item > .content, .ui.items > .horizontal.item > .content {\n  padding: 1% 1.7% 11% 3%;\n  vertical-align: top; }\n\n.ui.horizontal.items > .item > .meta, .ui.items > .horizontal.item > .meta {\n  position: absolute;\n  padding: 0%;\n  bottom: 7%;\n  left: 3%;\n  width: 94%; }\n\n.ui.horizontal.items > .item > .image + .content + .meta, .ui.items > .horizontal.item > .image + .content + .meta {\n  bottom: 7%;\n  left: 53%;\n  width: 44%; }\n\n.ui.horizontal.items > .item .avatar, .ui.items > .horizontal.item .avatar {\n  width: 11.5%; }\n\n.ui.items > .item .avatar {\n  max-width: 25px; }\n\n/*--------------\n    Item Count\n---------------*/\n.ui.one.items {\n  margin-left: -2%;\n  margin-right: -2%; }\n\n.ui.one.items > .item {\n  width: 100%;\n  margin-left: 2%;\n  margin-right: 2%; }\n\n.ui.two.items {\n  margin-left: -1%;\n  margin-right: -1%; }\n\n.ui.two.items > .item {\n  width: 48%;\n  margin-left: 1%;\n  margin-right: 1%; }\n\n.ui.two.items > .item:nth-child(2n+1) {\n  clear: left; }\n\n.ui.three.items {\n  margin-left: -1%;\n  margin-right: -1%; }\n\n.ui.three.items > .item {\n  width: 31.333%;\n  margin-left: 1%;\n  margin-right: 1%; }\n\n.ui.three.items > .item:nth-child(3n+1) {\n  clear: left; }\n\n.ui.four.items {\n  margin-left: -0.5%;\n  margin-right: -0.5%; }\n\n.ui.four.items > .item {\n  width: 24%;\n  margin-left: 0.5%;\n  margin-right: 0.5%; }\n\n.ui.four.items > .item:nth-child(4n+1) {\n  clear: left; }\n\n.ui.five.items {\n  margin-left: -0.5%;\n  margin-right: -0.5%; }\n\n.ui.five.items > .item {\n  width: 19%;\n  margin-left: 0.5%;\n  margin-right: 0.5%; }\n\n.ui.five.items > .item:nth-child(5n+1) {\n  clear: left; }\n\n.ui.six.items {\n  margin-left: -0.5%;\n  margin-right: -0.5%; }\n\n.ui.six.items > .item {\n  width: 15.66%;\n  margin-left: 0.5%;\n  margin-right: 0.5%; }\n\n.ui.six.items > .item:nth-child(6n+1) {\n  clear: left; }\n\n.ui.seven.items {\n  margin-left: -0.5%;\n  margin-right: -0.5%; }\n\n.ui.seven.items > .item {\n  width: 13.28%;\n  margin-left: 0.5%;\n  margin-right: 0.5%;\n  font-size: 11px; }\n\n.ui.seven.items > .item:nth-child(7n+1) {\n  clear: left; }\n\n.ui.eight.items {\n  margin-left: -0.25%;\n  margin-right: -0.25%; }\n\n.ui.eight.items > .item {\n  width: 12%;\n  margin-left: 0.25%;\n  margin-right: 0.25%;\n  font-size: 11px; }\n\n.ui.eight.items > .item:nth-child(8n+1) {\n  clear: left; }\n\n.ui.nine.items {\n  margin-left: -0.25%;\n  margin-right: -0.25%; }\n\n.ui.nine.items > .item {\n  width: 10.61%;\n  margin-left: 0.25%;\n  margin-right: 0.25%;\n  font-size: 10px; }\n\n.ui.nine.items > .item:nth-child(9n+1) {\n  clear: left; }\n\n.ui.ten.items {\n  margin-left: -0.2%;\n  margin-right: -0.2%; }\n\n.ui.ten.items > .item {\n  width: 9.6%;\n  margin-left: 0.2%;\n  margin-right: 0.2%;\n  font-size: 10px; }\n\n.ui.ten.items > .item:nth-child(10n+1) {\n  clear: left; }\n\n.ui.eleven.items {\n  margin-left: -0.2%;\n  margin-right: -0.2%; }\n\n.ui.eleven.items > .item {\n  width: 8.69%;\n  margin-left: 0.2%;\n  margin-right: 0.2%;\n  font-size: 9px; }\n\n.ui.eleven.items > .item:nth-child(11n+1) {\n  clear: left; }\n\n.ui.twelve.items {\n  margin-left: -0.1%;\n  margin-right: -0.1%; }\n\n.ui.twelve.items > .item {\n  width: 8.1333%;\n  margin-left: 0.1%;\n  margin-right: 0.1%;\n  font-size: 9px; }\n\n.ui.twelve.items > .item:nth-child(12n+1) {\n  clear: left; }\n\n/*\n * # Semantic List - Flat\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n * Released: April 26 2014\n */\n/*******************************\n            List\n*******************************/\nul.ui.list, ol.ui.list, .ui.list {\n  list-style-type: none;\n  margin: 1em 0em;\n  padding: 0em; }\n\nul.ui.list ul, ol.ui.list ol, .ui.list .list {\n  margin: 0em;\n  padding: 0.5em 0em 0.5em 1em; }\n\nul.ui.list:first-child, ol.ui.list:first-child, .ui.list:first-child {\n  margin-top: 0em; }\n\nul.ui.list:last-child, ol.ui.list:last-child, .ui.list:last-child {\n  margin-bottom: 0em; }\n\n/*******************************\n            Content\n*******************************/\n/* List Item */\nul.ui.list li, ol.ui.list li, .ui.list .item {\n  display: list-item;\n  list-style-type: none;\n  list-style-position: inside;\n  padding: 0.3em 0em;\n  line-height: 1.2em; }\n\n.ui.list .item:after {\n  content: '';\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden; }\n\n/* Sub-List */\n.ui.list .list {\n  clear: both; }\n\n/* Icon */\n.ui.list .item > .icon {\n  display: block;\n  float: left;\n  margin: 0em 1em 0em 0em;\n  padding: 0.1em 0em 0em 0em; }\n\n.ui.list .item > .icon:only-child {\n  display: inline-block; }\n\n.ui.horizontal.list .item > .icon {\n  margin: 0em;\n  padding: 0em 0.25em 0em 0em; }\n\n.ui.horizontal.list .item > .icon, .ui.horizontal.list .item > .icon + .content {\n  float: none;\n  display: inline-block; }\n\n/* Image */\n.ui.list .item > img {\n  display: block;\n  float: left;\n  margin-right: 1em;\n  vertical-align: middle; }\n\n/* Content */\n.ui.list .item > .content {\n  display: inline-block;\n  vertical-align: middle;\n  line-height: 1.2em; }\n\n.ui.list .item > .icon + .content {\n  display: table-cell;\n  vertical-align: top; }\n\n/* Link */\n.ui.list a {\n  cursor: pointer; }\n\n.ui.list a .icon {\n  color: rgba(0, 0, 0, 0.6);\n  -webkit-transition: color 0.2s ease;\n  -moz-transition: color 0.2s ease;\n  transition: color 0.2s ease; }\n\n/* Header */\n.ui.list .header {\n  font-weight: bold; }\n\n.ui.list .description {\n  color: rgba(0, 0, 0, 0.5); }\n\n/* Floated Content */\n.ui.list .item > .left.floated {\n  margin-right: 1em;\n  float: left; }\n\n.ui.list .item > .right.floated {\n  margin-left: 1em;\n  float: right; }\n\n/*******************************\n            Types\n*******************************/\n/*-------------------\n      Horizontal\n--------------------*/\n.ui.horizontal.list {\n  display: inline-block;\n  font-size: 0em; }\n\n.ui.horizontal.list > .item {\n  display: inline-block;\n  margin-left: 1em;\n  font-size: 1rem; }\n\n.ui.horizontal.list > .item:first-child {\n  margin-left: 0em; }\n\n.ui.horizontal.list .list {\n  padding-left: 0em;\n  padding-bottom: 0em; }\n\n/*******************************\n             States\n*******************************/\n/*-------------------\n        Hover\n--------------------*/\n.ui.list a:hover .icon {\n  color: rgba(0, 0, 0, 0.8); }\n\n/*******************************\n           Variations\n*******************************/\n/*-------------------\n       Inverted\n--------------------*/\n.ui.inverted.list a .icon {\n  color: rgba(255, 255, 255, 0.6); }\n\n.ui.inverted.list .description {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.link.list .item {\n  color: rgba(255, 255, 255, 0.4); }\n\n/*-------------------\n       Link\n--------------------*/\n.ui.link.list .item {\n  color: rgba(0, 0, 0, 0.3); }\n\n.ui.link.list a.item, .ui.link.list .item a {\n  color: rgba(0, 0, 0, 0.5); }\n\n.ui.link.list a.item:hover, .ui.link.list .item a:hover {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.link.list a.item:active, .ui.link.list .item a:active {\n  color: rgba(0, 0, 0, 0.8); }\n\n.ui.link.list a.active.item, .ui.link.list .active.item a {\n  color: rgba(0, 0, 0, 0.8); }\n\n/* Inverted */\n.ui.inverted.link.list a.item, .ui.inverted.link.list .item a {\n  color: rgba(255, 255, 255, 0.6); }\n\n.ui.inverted.link.list a.item:hover, .ui.inverted.link.list .item a:hover {\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.link.list a.item:active, .ui.inverted.link.list .item a:active {\n  color: rgba(255, 255, 255, 0.9); }\n\n.ui.inverted.link.list a.active.item, .ui.inverted.link.list .active.item a {\n  color: rgba(255, 255, 255, 0.8); }\n\n/*-------------------\n      Selection\n--------------------*/\n.ui.selection.list .item {\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.4);\n  padding: 0.5em;\n  -webkit-transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease;\n  -moz-transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease;\n  transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease; }\n\n.ui.selection.list .item:hover {\n  background-color: rgba(0, 0, 0, 0.02);\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.selection.list .item:active {\n  background-color: rgba(0, 0, 0, 0.05);\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.selection.list .item.active {\n  background-color: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.animated.list .item {\n  -webkit-transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease;\n  -moz-transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease;\n  transition: 0.2s color ease, 0.2s padding-left ease, 0.2s background-color ease; }\n\n.ui.animated.list:not(.horizontal) .item:hover {\n  padding-left: 1em; }\n\n.ui.animated.list:not(.horizontal) .item:hover .item:hover {\n  padding-left: 0.5em; }\n\n/* Inverted */\n.ui.inverted.selection.list .item {\n  color: rgba(255, 255, 255, 0.6); }\n\n.ui.inverted.selection.list .item:hover {\n  background-color: rgba(255, 255, 255, 0.04);\n  color: rgba(255, 255, 255, 0.8); }\n\n.ui.inverted.selection.list .item:active {\n  background-color: rgba(255, 255, 255, 0.1);\n  color: rgba(255, 255, 255, 0.7); }\n\n.ui.inverted.selection.list .item.active {\n  background-color: rgba(255, 255, 255, 0.08);\n  color: #FFFFFF; }\n\n/*-------------------\n      Bulleted\n--------------------*/\nul.ui.list, .ui.bulleted.list {\n  margin-left: 1.5em; }\n\nul.ui.list li, .ui.bulleted.list .item {\n  position: relative; }\n\nul.ui.list li:before, .ui.bulleted.list .item:before {\n  position: absolute;\n  left: -1.5em;\n  content: '•'; }\n\nul.ui.list ul, .ui.bulleted.list .list {\n  padding-left: 1.5em; }\n\n/* Horizontal Bulleted */\nul.ui.horizontal.bulleted.list, .ui.horizontal.bulleted.list {\n  margin-left: 0em; }\n\nul.ui.horizontal.bulleted.list li, .ui.horizontal.bulleted.list .item {\n  margin-left: 1.5em; }\n\nul.ui.horizontal.bulleted.list li:before, .ui.horizontal.bulleted.list .item:before {\n  left: -0.9em; }\n\nul.ui.horizontal.bulleted.list li:first-child, .ui.horizontal.bulleted.list .item:first-child {\n  margin-left: 0em; }\n\nul.ui.horizontal.bulleted.list li:first-child::before, .ui.horizontal.bulleted.list .item:first-child::before {\n  display: none; }\n\n/*-------------------\n       Ordered\n--------------------*/\nol.ui.list, .ui.ordered.list {\n  counter-reset: ordered;\n  margin-left: 2em;\n  list-style-type: none; }\n\nol.ui.list li, .ui.ordered.list .item {\n  list-style-type: none;\n  position: relative; }\n\nol.ui.list li:before, .ui.ordered.list .item:before {\n  position: absolute;\n  left: -2em;\n  counter-increment: ordered;\n  content: counters(ordered, \".\");\n  text-align: right;\n  vertical-align: top;\n  opacity: 0.75; }\n\nol.ui.list ol, .ui.ordered.list .list {\n  counter-reset: ordered;\n  padding-left: 2.5em; }\n\nol.ui.list ol li:before, .ui.ordered.list .list .item:before {\n  left: -2.5em; }\n\n/* Horizontal Ordered */\nol.ui.horizontal.list, .ui.ordered.horizontal.list {\n  margin-left: 0em; }\n\nol.ui.horizontal.list li:before, .ui.ordered.horizontal.list .item:before {\n  position: static;\n  left: 0em;\n  margin: 0em 0.5em 0em 0em; }\n\n/*-------------------\n       Divided\n--------------------*/\n.ui.divided.list > .item, .ui.divided.list:not(.horizontal) > .list {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding-left: 0.5em;\n  padding-right: 0.5em; }\n\n.ui.divided.list .item .menu .item {\n  border-width: 0px; }\n\n.ui.divided.list .item:first-child {\n  border-top-width: 0px; }\n\n/* Sub Menu */\n.ui.divided.list:not(.horizontal) .list:not(.icon) {\n  margin-left: -0.5em;\n  margin-right: -0.5em; }\n\n.ui.divided.list:not(.horizontal) .list .item {\n  padding-left: 1em;\n  padding-right: 1em; }\n\n.ui.divided.list:not(.horizontal) .list .item:first-child {\n  border-top-width: 1px; }\n\n/* Divided bulleted */\n.ui.divided.bulleted.list {\n  margin-left: 0em; }\n\n.ui.divided.bulleted.list .item {\n  padding-left: 1.5em; }\n\n.ui.divided.bulleted.list .item:before {\n  left: 0.5em; }\n\n/* Divided ordered */\n.ui.divided.ordered.list {\n  margin-left: 0em; }\n\n.ui.divided.ordered.list > .item {\n  padding-left: 2em;\n  padding-right: 2em; }\n\n.ui.divided.ordered.list > .item:before {\n  left: 0.5em; }\n\n.ui.divided.ordered.list .item .list {\n  margin-left: -2em;\n  margin-right: -2em; }\n\n/* Divided horizontal */\n.ui.divided.horizontal.list {\n  margin-left: 0em; }\n\n.ui.divided.horizontal.list > .item {\n  border-top: none;\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n  margin: 0em;\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n  line-height: 0.6em; }\n\n.ui.horizontal.divided.list > .item:first-child {\n  border-left: none;\n  padding-left: 0em; }\n\n/* Inverted */\n.ui.divided.inverted.list > .item, .ui.divided.inverted.list > .list {\n  border-color: rgba(255, 255, 255, 0.2); }\n\n.ui.divided.inverted.horizontal.list .item {\n  border-color: rgba(255, 255, 255, 0.2); }\n\n/*-------------------\n        Celled\n--------------------*/\n.ui.celled.list > .item, .ui.celled.list > .list {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding-left: 0.5em;\n  padding-right: 0.5em; }\n\n.ui.celled.list > .item:last-child {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\n\n/* Sub Menu */\n.ui.celled.list .item .list {\n  margin-left: -0.5em;\n  margin-right: -0.5em; }\n\n.ui.celled.list .item .list .item {\n  border-width: 0px; }\n\n.ui.celled.list .list .item:first-child {\n  border-top-width: 0px; }\n\n/* Celled Bulleted */\n.ui.celled.bulleted.list {\n  margin-left: 0em; }\n\n.ui.celled.bulleted.list > .item {\n  padding-left: 1.5em; }\n\n.ui.celled.bulleted.list > .item:before {\n  left: 0.5em; }\n\n/* Celled Ordered */\n.ui.celled.ordered.list {\n  margin-left: 0em; }\n\n.ui.celled.ordered.list .item {\n  padding-left: 2em;\n  padding-right: 2em; }\n\n.ui.celled.ordered.list .item:before {\n  left: 0.5em; }\n\n.ui.celled.ordered.list .item .list {\n  margin-left: -2em;\n  margin-right: -2em; }\n\n/* Celled Horizontal */\n.ui.horizontal.celled.list {\n  margin-left: 0em; }\n\n.ui.horizontal.celled.list .item {\n  border-top: none;\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n  margin: 0em;\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n  line-height: 0.6em; }\n\n.ui.horizontal.celled.list .item:last-child {\n  border-bottom: none;\n  border-right: 1px solid rgba(0, 0, 0, 0.1); }\n\n/* Inverted */\n.ui.celled.inverted.list > .item, .ui.celled.inverted.list > .list {\n  border-color: rgba(255, 255, 255, 0.2); }\n\n.ui.celled.inverted.horizontal.list .item {\n  border-color: rgba(255, 255, 255, 0.2); }\n\n/*-------------------\n       Relaxed\n--------------------*/\n.ui.relaxed.list:not(.horizontal) .item {\n  padding-top: 0.5em;\n  padding-bottom: 0.5em; }\n\n.ui.relaxed.list .header {\n  margin-bottom: 0.25em; }\n\n.ui.horizontal.relaxed.list .item {\n  padding-left: 1.25em;\n  padding-right: 1.25em; }\n\n.ui.very.relaxed.list:not(.horizontal) .item {\n  padding-top: 1em;\n  padding-bottom: 1em; }\n\n.ui.very.relaxed.list .header {\n  margin-bottom: 0.5em; }\n\n.ui.horizontal.very.relaxed.list .item {\n  padding-left: 2em;\n  padding-right: 2em; }\n\n/*-------------------\n      Sizes\n--------------------*/\n.ui.mini.list .item {\n  font-size: 0.7rem; }\n\n.ui.tiny.list .item {\n  font-size: 0.8125rem; }\n\n.ui.small.list .item {\n  font-size: 0.875rem; }\n\n.ui.list .item {\n  font-size: 1em; }\n\n.ui.large.list .item {\n  font-size: 1.125rem; }\n\n.ui.big.list .item {\n  font-size: 1.25rem; }\n\n.ui.huge.list .item {\n  font-size: 1.375rem; }\n\n.ui.massive.list .item {\n  font-size: 1.5rem; }\n\n/*\n * # Statistic\n *\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n * Released: Aug 20, 2014\n */\n/*******************************\n           Statistic\n*******************************/\n.ui.statistic {\n  text-align: center; }\n\n/*******************************\n            Content\n*******************************/\n.ui.statistic > .number {\n  font-size: 4em;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.7); }\n\n.ui.statistic > .description {\n  opacity: 0.8; }\n", ""]);

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var invariant = __webpack_require__(38);
	var merge     = __webpack_require__(39);
	var mergeInto = __webpack_require__(40);

	/**
	 * Create a new route descriptor from a specification.
	 *
	 * @param {Object} spec
	 * @param {?Object} defaults
	 */
	function createRoute(spec, defaults) {

	  var handler = spec.handler;
	  var path = spec.path;
	  var ref = spec.ref;
	  var props = merge({}, spec);

	  delete props.path;
	  delete props.handler;
	  delete props.ref;

	  var route = {
	    path: path,
	    handler: handler,
	    props: props,
	    ref: ref
	  };

	  if (defaults) {
	    mergeInto(route, defaults);
	  }

	  invariant(
	    typeof route.handler === 'function',
	    "Route handler should be a component or a function but got: %s", handler
	  );

	  invariant(
	    route.path !== undefined,
	    "Route should have an URL pattern specified: %s", handler
	  );

	  return route;
	}

	/**
	 * Regular route descriptor.
	 *
	 * @param {Object} spec
	 */
	function Route(spec) {
	  return createRoute(spec);
	}

	/**
	 * Catch all route descriptor.
	 *
	 * @param {Object} spec
	 */
	function NotFound(spec) {
	  return createRoute(spec, {path: null});
	}

	module.exports = {
	  Route: Route,
	  NotFound: NotFound
	};


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var React                     = __webpack_require__(10);
	var RouterMixin               = __webpack_require__(23);
	var AsyncRouteRenderingMixin  = __webpack_require__(24);

	/**
	 * Create a new router class
	 *
	 * @param {String} name
	 * @param {ReactComponent} component
	 */
	function createRouter(name, component) {

	  return React.createClass({

	    mixins: [RouterMixin, AsyncRouteRenderingMixin],

	    displayName: name,

	    getRoutes: function(props) {
	      return props.children;
	    },

	    getDefaultProps: function() {
	      return {
	        component: component
	      }
	    },

	    render: function() {
	      var handler = this.renderRouteHandler();
	      return this.transferPropsTo(this.props.component(null, handler));
	    }
	  });
	}

	module.exports = {
	  createRouter: createRouter,
	  Locations: createRouter('Locations', React.DOM.div),
	  Pages: createRouter('Pages', React.DOM.body),
	}


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var React             = __webpack_require__(10);
	var NavigatableMixin  = __webpack_require__(26);
	var Environment       = __webpack_require__(27);

	/**
	 * Link.
	 *
	 * A basic navigatable component which renders into <a> DOM element and handles
	 * onClick event by transitioning onto different route (defined by
	 * this.props.href).
	 */
	var Link = React.createClass({
	  mixins: [NavigatableMixin],

	  displayName: 'Link',

	  propTypes: {
	    href: React.PropTypes.string.isRequired,
	    global: React.PropTypes.bool,
	    globalHash: React.PropTypes.bool
	  },

	  onClick: function(e) {
	    if (this.props.onClick) {
	      this.props.onClick(e);
	    }
	    if (!e.defaultPrevented) {
	      e.preventDefault();
	      this._navigate(this.props.href, function(err) {
	        if (err) {
	          throw err;
	        }
	      });
	    }
	  },

	  _navigationParams: function() {
	    var params = {};
	    for (var k in this.props) {
	      if (!this.constructor.propTypes[k]) {
	        params[k] = this.props[k];
	      }
	    }
	    return params;
	  },

	  _createHref: function() {
	    return this.props.global ?
	      Environment.defaultEnvironment.makeHref(this.props.href) :
	      this.makeHref(this.props.href);
	  },

	  _navigate: function(path, cb) {
	    if (this.props.globalHash) {
	      return Environment.hashEnvironment.navigate(path, cb);
	    }

	    if (this.props.global) {
	      return Environment.defaultEnvironment.navigate(path, cb);
	    }

	    return this.navigate(path, this._navigationParams(), cb);
	  },

	  render: function() {
	    var props = {
	      onClick: this.onClick,
	      href: this._createHref()
	    };
	    return this.transferPropsTo(React.DOM.a(props, this.props.children));
	  }
	});

	module.exports = Link;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var React         = __webpack_require__(10);
	var invariant     = __webpack_require__(38);
	var merge         = __webpack_require__(39);
	var matchRoutes   = __webpack_require__(32);
	var Environment   = __webpack_require__(27);

	var RouterMixin = {
	  mixins: [Environment.Mixin],

	  propTypes: {
	    path: React.PropTypes.string,
	    contextual: React.PropTypes.bool,
	    onBeforeNavigation: React.PropTypes.func,
	    onNavigation: React.PropTypes.func
	  },

	  childContextTypes: {
	    router: React.PropTypes.any
	  },

	  getChildContext: function() {
	    return {
	      router: this
	    };
	  },

	  contextTypes: {
	    router: React.PropTypes.any
	  },

	  getInitialState: function() {
	    return this.getRouterState(this.props);
	  },

	  componentWillReceiveProps: function(nextProps) {
	    var nextState = this.getRouterState(nextProps);
	    this.delegateSetRoutingState(nextState);
	  },

	  getRouterState: function(props) {
	    var path;
	    var prefix;

	    var parent = this.getParentRouter();

	    if (props.contextual && parent) {

	      var parentMatch = parent.getMatch();

	      invariant(
	        props.path || isString(parentMatch.unmatchedPath),
	        "contextual router has nothing to match on: %s", parentMatch.unmatchedPath
	      );

	      path = props.path || parentMatch.unmatchedPath;
	      prefix = parentMatch.matchedPath;
	    } else {

	      path = props.path || this.getEnvironment().getPath();

	      invariant(
	        isString(path),
	        ("router operate in environment which cannot provide path, " +
	         "pass it a path prop; or probably you want to make it contextual")
	      );

	      prefix = '';
	    }

	    if (path[0] !== '/') {
	      path = '/' + path;
	    }

	    var match = matchRoutes(this.getRoutes(props), path);
	    var handler = match.getHandler();

	    return {
	      match: match,
	      handler: handler,
	      prefix: prefix,
	      navigation: {}
	    };
	  },

	  getEnvironment: function() {
	    if (this.props.environment) {
	      return this.props.environment;
	    }
	    if (this.props.hash) {
	      return Environment.hashEnvironment;
	    }
	    if (this.props.contextual && this.context.router) {
	      return this.context.router.getEnvironment();
	    }
	    return Environment.defaultEnvironment;
	  },

	  /**
	   * Return parent router or undefined.
	   */
	  getParentRouter: function() {
	    var current = this.context.router;
	    var environment = this.getEnvironment();

	    while (current) {
	      if (current.getEnvironment() === environment) {
	        return current;
	      }
	    }
	  },

	  /**
	   * Return current match.
	   */
	  getMatch: function() {
	    return this.state.match;
	  },

	  /**
	   * Make href scoped for the current router.
	   */
	  makeHref: function(href) {
	    return join(this.state.prefix, href);
	  },

	  /**
	   * Navigate to a path
	   *
	   * @param {String} path
	   * @param {Function} navigation
	   * @param {Callback} cb
	   */
	  navigate: function(path, navigation, cb) {
	    if (typeof navigation === 'function' && cb === undefined) {
	      cb = navigation;
	      navigation = {};
	    }
	    navigation = navigation || {};
	    path = join(this.state.prefix, path);
	    this.getEnvironment().setPath(path, navigation, cb);
	  },

	  /**
	   * Set new path.
	   *
	   * This function is called by environment.
	   *
	   * @private
	   *
	   * @param {String} path
	   * @param {Function} navigation
	   * @param {Callback} cb
	   */
	  setPath: function(path, navigation, cb) {
	    var match = matchRoutes(this.getRoutes(this.props), path);
	    var handler = match.getHandler();

	    var state = {
	      match: match,
	      handler: handler,
	      prefix: this.state.prefix,
	      navigation: navigation
	    };

	    navigation = merge(navigation, {match: match});

	    if (this.props.onBeforeNavigation &&
	        this.props.onBeforeNavigation(path, navigation) === false) {
	      return;
	    }

	    if (navigation.onBeforeNavigation &&
	        navigation.onBeforeNavigation(path, navigation) === false) {
	      return;
	    }

	    this.delegateSetRoutingState(state, function() {
	      if (this.props.onNavigation) {
	        this.props.onNavigation();
	      }
	      cb();
	    }.bind(this));
	  },

	  /**
	   * Return the current path
	   */
	  getPath: function () {
	    return this.state.match.path;
	  },

	  /**
	   * Try to delegate state update to a setRoutingState method (might be provided
	   * by router itself) or use replaceState.
	   */
	  delegateSetRoutingState: function(state, cb) {
	    if (this.setRoutingState) {
	      this.setRoutingState(state, cb);
	    } else {
	      this.replaceState(state, cb);
	    }
	  }

	};

	function join(a, b) {
	  return (a + b).replace(/\/\//g, '/');
	}

	function isString(o) {
	  return Object.prototype.toString.call(o) === '[object String]';
	}

	module.exports = RouterMixin;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var merge               = __webpack_require__(39);
	var prefetchAsyncState  = __webpack_require__(66);
	var isAsyncComponent    = __webpack_require__(65);
	var RouteRenderingMixin = __webpack_require__(25);

	/**
	 * Mixin for router components which prefetches state of async components
	 * (as in react-async).
	 */
	var AsyncRouteRenderingMixin = {
	  mixins: [RouteRenderingMixin],

	  setRoutingState: function(state, cb) {
	    var currentHandler = this.state && this.state.handler;
	    var nextHandler = state && state.handler;

	    if (nextHandler &&
	        isAsyncComponent(nextHandler) &&
	        // if component's type is the same we would need to skip async state
	        // update
	        !(currentHandler && currentHandler.type === nextHandler.type)) {
	      // store pending state and start fetching async state of a new handler
	      this.setState(
	        {pendingState: state},
	        this.prefetchMatchHandlerState.bind(null, state, cb)
	      );
	    } else {
	      this.replaceState(state, cb);
	    }
	  },

	  hasPendingUpdate: function() {
	    return !!this.state.pendingState;
	  },

	  prefetchMatchHandlerState: function(state, cb) {
	    prefetchAsyncState(state.handler, function(err, handler) {
	      // check if we router is still mounted and have the same match in state
	      // as we started fetching state with
	      if (this.isMounted() &&
	          this.state.pendingState &&
	          this.state.pendingState.match === state.match) {

	        var nextState = merge(this.state.pendingState, {handler: handler});
	        this.replaceState(nextState, cb);

	      }
	    }.bind(this));
	  }
	};

	module.exports = AsyncRouteRenderingMixin;


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var cloneWithProps  = __webpack_require__(41);

	/**
	 * Mixin for routers which implements the simplest rendering strategy.
	 */
	var RouteRenderingMixin = {

	  renderRouteHandler: function() {
	    var ref = this.state.match.route && this.state.match.route.ref;
	    return cloneWithProps(this.state.handler, {ref: ref});
	  }

	};

	module.exports = RouteRenderingMixin;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var React       = __webpack_require__(10);
	var Environment = __webpack_require__(27);


	/**
	 * NavigatableMixin
	 *
	 * A mixin for a component which operates in context of a router and can
	 * navigate to a different route using `navigate(path, cb)` method.
	 */
	var NavigatableMixin = {

	  contextTypes: {
	    router: React.PropTypes.any,
	  },

	  /**
	   * @private
	   */
	  _getNavigable: function() {
	    return this.context.router || Environment.defaultEnvironment;
	  },

	  getPath: function() {
	    return this._getNavigable().getPath();
	  },

	  navigate: function(path, cb) {
	    return this._getNavigable().navigate(path, cb);
	  },

	  makeHref: function(path) {
	    return this._getNavigable().makeHref(path);
	  }
	};

	module.exports = NavigatableMixin;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/**
	 * Routing environment.
	 *
	 * It specifies how routers read its state from DOM and synchronise it back.
	 */

	var ExecutionEnvironment  = __webpack_require__(37);
	var DummyEnvironment      = __webpack_require__(33);
	var Environment           = __webpack_require__(34);

	/**
	 * Mixin for routes to keep attached to an environment.
	 *
	 * This mixin assumes the environment is passed via props.
	 */
	var Mixin = {

	  componentDidMount: function() {
	    this.getEnvironment().register(this);
	  },

	  componentWillUnmount: function() {
	    this.getEnvironment().unregister(this);
	  }
	};

	var PathnameEnvironment;
	var HashEnvironment;

	var pathnameEnvironment;
	var hashEnvironment;
	var defaultEnvironment;
	var dummyEnvironment;

	if (ExecutionEnvironment.canUseDOM) {

	  PathnameEnvironment = __webpack_require__(35);
	  HashEnvironment     = __webpack_require__(36);

	  pathnameEnvironment = new PathnameEnvironment();
	  hashEnvironment     = new HashEnvironment();
	  defaultEnvironment  = (window.history !== undefined &&
	                         window.history.pushState !== undefined) ?
	                        pathnameEnvironment :
	                        hashEnvironment;

	} else {

	  dummyEnvironment    = new DummyEnvironment();
	  pathnameEnvironment = dummyEnvironment;
	  hashEnvironment     = dummyEnvironment;
	  defaultEnvironment  = dummyEnvironment;

	}

	module.exports = {
	  pathnameEnvironment: pathnameEnvironment,
	  hashEnvironment: hashEnvironment,
	  defaultEnvironment: defaultEnvironment,
	  dummyEnvironment: dummyEnvironment,

	  Environment: Environment,
	  PathnameEnvironment: PathnameEnvironment,
	  HashEnvironment: HashEnvironment,

	  Mixin: Mixin
	};


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule React
	 */

	"use strict";

	var DOMPropertyOperations = __webpack_require__(42);
	var EventPluginUtils = __webpack_require__(43);
	var ReactChildren = __webpack_require__(44);
	var ReactComponent = __webpack_require__(45);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactContext = __webpack_require__(47);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactDescriptor = __webpack_require__(49);
	var ReactDOM = __webpack_require__(50);
	var ReactDOMComponent = __webpack_require__(51);
	var ReactDefaultInjection = __webpack_require__(52);
	var ReactInstanceHandles = __webpack_require__(53);
	var ReactMount = __webpack_require__(54);
	var ReactMultiChild = __webpack_require__(55);
	var ReactPerf = __webpack_require__(56);
	var ReactPropTypes = __webpack_require__(57);
	var ReactServerRendering = __webpack_require__(58);
	var ReactTextComponent = __webpack_require__(59);

	var onlyChild = __webpack_require__(60);
	var warning = __webpack_require__(61);

	ReactDefaultInjection.inject();

	// Specifying arguments isn't necessary since we just use apply anyway, but it
	// makes it clear for those actually consuming this API.
	function createDescriptor(type, props, children) {
	  var args = Array.prototype.slice.call(arguments, 1);
	  return type.apply(null, args);
	}

	if ("production" !== process.env.NODE_ENV) {
	  var _warnedForDeprecation = false;
	}

	var React = {
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    only: onlyChild
	  },
	  DOM: ReactDOM,
	  PropTypes: ReactPropTypes,
	  initializeTouchEvents: function(shouldUseTouch) {
	    EventPluginUtils.useTouchEvents = shouldUseTouch;
	  },
	  createClass: ReactCompositeComponent.createClass,
	  createDescriptor: function() {
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        _warnedForDeprecation,
	        'React.createDescriptor is deprecated and will be removed in the ' +
	        'next version of React. Use React.createElement instead.'
	      ) : null);
	      _warnedForDeprecation = true;
	    }
	    return createDescriptor.apply(this, arguments);
	  },
	  createElement: createDescriptor,
	  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
	  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
	  renderComponent: ReactPerf.measure(
	    'React',
	    'renderComponent',
	    ReactMount.renderComponent
	  ),
	  renderComponentToString: ReactServerRendering.renderComponentToString,
	  renderComponentToStaticMarkup:
	    ReactServerRendering.renderComponentToStaticMarkup,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  isValidClass: ReactDescriptor.isValidFactory,
	  isValidComponent: ReactDescriptor.isValidDescriptor,
	  withContext: ReactContext.withContext,
	  __internals: {
	    Component: ReactComponent,
	    CurrentOwner: ReactCurrentOwner,
	    DOMComponent: ReactDOMComponent,
	    DOMPropertyOperations: DOMPropertyOperations,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    MultiChild: ReactMultiChild,
	    TextComponent: ReactTextComponent
	  }
	};

	if ("production" !== process.env.NODE_ENV) {
	  var ExecutionEnvironment = __webpack_require__(37);
	  if (ExecutionEnvironment.canUseDOM &&
	      window.top === window.self &&
	      navigator.userAgent.indexOf('Chrome') > -1) {
	    console.debug(
	      'Download the React DevTools for a better development experience: ' +
	      'http://fb.me/react-devtools'
	    );

	    var expectedFeatures = [
	      // shims
	      Array.isArray,
	      Array.prototype.every,
	      Array.prototype.forEach,
	      Array.prototype.indexOf,
	      Array.prototype.map,
	      Date.now,
	      Function.prototype.bind,
	      Object.keys,
	      String.prototype.split,
	      String.prototype.trim,

	      // shams
	      Object.create,
	      Object.freeze
	    ];

	    for (var i in expectedFeatures) {
	      if (!expectedFeatures[i]) {
	        console.error(
	          'One or more ES5 shim/shams expected by React are not available: ' +
	          'http://fb.me/react-warning-polyfills'
	        );
	        break;
	      }
	    }
	  }
	}

	// Version exists only in the open-source version of React, not in Facebook's
	// internal version.
	React.version = '0.11.2';

	module.exports = React;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function() {
		var list = [];
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
		return list;
	}

/***/ },
/* 30 */,
/* 31 */,
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var pattern   = __webpack_require__(127);
	var mergeInto = __webpack_require__(40);
	var invariant = __webpack_require__(38);

	/**
	 * Match routes against a path
	 *
	 * @param {Array.<Route>} routes
	 * @param {String} path
	 */
	function matchRoutes(routes, path) {
	  var match, page, notFound;

	  if (!Array.isArray(routes)) {
	    routes = [routes];
	  }

	  for (var i = 0, len = routes.length; i < len; i++) {
	    var current = routes[i];
	    // Simply skip null or undefined to allow ternaries in route definitions
	    if (!current) continue;

	    if (process.env.NODE_ENV !== "production") {
	      invariant(
	        current.handler !== undefined && current.path !== undefined,
	        "Router should contain either Route or NotFound components " +
	        "as routes")
	    }

	    if (current.path) {
	      current.pattern = current.pattern || pattern.newPattern(current.path);
	      if (!page) {
	        match = current.pattern.match(path);
	        if (match) {
	          page = current;
	        }
	      }
	    }
	    if (!notFound && current.path === null) {
	      notFound = current;
	    }
	  }

	  return new Match(
	    path,
	    page ? page : notFound ? notFound : null,
	    match
	  );
	}

	/**
	 * Match object
	 *
	 * @private
	 */
	function Match(path, route, match) {
	  this.path = path;
	  this.route = route;
	  this.match = match;

	  this.unmatchedPath = this.match && this.match._ ?
	    this.match._[0] :
	    null;

	  this.matchedPath = this.unmatchedPath ?
	    this.path.substring(0, this.path.length - this.unmatchedPath.length) :
	    this.path;
	}

	Match.prototype.getHandler = function() {
	  var props = {};
	  if (this.match) {
	    mergeInto(props, this.match);
	  }
	  if (this.route && this.route.props) {
	    mergeInto(props, this.route.props);
	  }
	  // we will set ref later during a render call
	  delete props.ref;
	  return this.route ? this.route.handler(props) : undefined;
	}

	module.exports = matchRoutes;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Environment   = __webpack_require__(34);
	var emptyFunction = __webpack_require__(62);

	/**
	 * Dummy routing environment which provides no path.
	 *
	 * Should be used on server or in WebWorker.
	 */
	function DummyEnvironment() {
	  Environment.call(this);
	}

	DummyEnvironment.prototype = Object.create(Environment.prototype);
	DummyEnvironment.prototype.constructor = DummyEnvironment;

	DummyEnvironment.prototype.getPath = emptyFunction.thatReturnsNull;

	DummyEnvironment.prototype.setPath = function(path, cb) {
	  this.path = path;
	  cb();
	};

	DummyEnvironment.prototype.start = emptyFunction;

	DummyEnvironment.prototype.stop = emptyFunction;

	module.exports = DummyEnvironment;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var ReactUpdates  = __webpack_require__(63);

	/**
	 * Base abstract class for a routing environment.
	 *
	 * @private
	 */
	function Environment() {
	  this.routers = [];
	  this.path = this.getPath();
	}

	/**
	 * Notify routers about the change.
	 *
	 * @param {Object} navigation
	 * @param {Function} cb
	 */
	Environment.prototype.notify = function notify(navigation, cb) {
	  var latch = this.routers.length;

	  if (latch === 0) {
	    return cb && cb();
	  }

	  function callback() {
	    latch -= 1;
	    if (cb && latch === 0) {
	      cb();
	    }
	  }

	  ReactUpdates.batchedUpdates(function() {
	    for (var i = 0, len = this.routers.length; i < len; i++) {
	      this.routers[i].setPath(this.path, navigation, callback);
	    }
	  }.bind(this));
	}

	Environment.prototype.makeHref = function makeHref(path) {
	  return path;
	}

	Environment.prototype.navigate = function navigate(path, navigation, cb) {
	  if (typeof navigation === 'function' && cb === undefined) {
	    cb = navigation;
	    navigation = {};
	  }
	  return this.setPath(path, navigation, cb);
	}

	Environment.prototype.setPath = function(path, navigation, cb) {
	  if (!navigation.isPopState) {
	    if (navigation.replace) {
	      this.replaceState(path, navigation);
	    } else {
	      this.pushState(path, navigation);
	    }
	  }
	  this.path = path;
	  this.notify(navigation, cb);
	}

	/**
	 * Register router with an environment.
	 */
	Environment.prototype.register = function register(router) {
	  if (this.routers.length === 0) {
	    this.start();
	  }

	  if (router.getParentRouter === undefined || !router.getParentRouter()) {
	    this.routers.push(router);
	  }
	}

	/**
	 * Unregister router from an environment.
	 */
	Environment.prototype.unregister = function unregister(router) {
	  if (this.routers.indexOf(router) > -1) {
	    this.routers.splice(this.routers.indexOf(router), 1);
	  }

	  if (this.routers.length === 0) {
	    this.stop();
	  }
	}

	module.exports = Environment;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Environment = __webpack_require__(34);

	/**
	 * Routing environment which routes by `location.pathname`.
	 */
	function PathnameEnvironment() {
	  this.onPopState = this.onPopState.bind(this);
	  Environment.call(this);
	}

	PathnameEnvironment.prototype = Object.create(Environment.prototype);
	PathnameEnvironment.prototype.constructor = PathnameEnvironment;

	PathnameEnvironment.prototype.getPath = function() {
	  return window.location.pathname;
	}

	PathnameEnvironment.prototype.pushState = function(path, navigation) {
	  window.history.pushState({}, '', path);
	}

	PathnameEnvironment.prototype.replaceState = function(path, navigation) {
	  window.history.replaceState({}, '', path);
	}

	PathnameEnvironment.prototype.start = function() {
	  if (window.addEventListener) {
	    window.addEventListener('popstate', this.onPopState);
	  }
	};

	PathnameEnvironment.prototype.stop = function() {
	  if (window.removeEventListener) {
	    window.removeEventListener('popstate', this.onPopState);
	  }
	};

	PathnameEnvironment.prototype.onPopState = function(e) {
	  var path = window.location.pathname;

	  if (this.path !== path) {
	    this.setPath(path, {isPopState: true});
	  }
	};

	module.exports = PathnameEnvironment;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Environment = __webpack_require__(34);

	/**
	 * Routing environment which routes by `location.hash`.
	 */
	function HashEnvironment() {
	  this.onHashChange = this.onHashChange.bind(this);
	  Environment.call(this);
	}

	HashEnvironment.prototype = Object.create(Environment.prototype);
	HashEnvironment.prototype.constructor = HashEnvironment;

	HashEnvironment.prototype.getPath = function() {
	  return window.location.hash.slice(1) || '/';
	};

	HashEnvironment.prototype.pushState = function(path, navigation) {
	  window.location.hash = path;
	}

	HashEnvironment.prototype.replaceState = function(path, navigation) {
	  var href = window.location.href.replace(/(javascript:|#).*$/, '');
	  window.location.replace(href + '#' + path);
	}

	HashEnvironment.prototype.start = function() {
	  if (window.addEventListener) {
	    window.addEventListener('hashchange', this.onHashChange);
	  } else {
	    window.attachEvent('onhashchange', this.onHashChange);
	  }
	};

	HashEnvironment.prototype.stop = function() {
	  if (window.removeEventListener) {
	    window.removeEventListener('hashchange', this.onHashChange);
	  } else {
	    window.detachEvent('onhashchange', this.onHashChange);
	  }
	};

	HashEnvironment.prototype.onHashChange = function() {
	  var path = this.getPath();

	  if (this.path !== path) {
	    this.setPath(path, {isPopState: true});
	  }
	};

	module.exports = HashEnvironment;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	/*jslint evil: true */

	"use strict";

	var canUseDOM = !!(
	  typeof window !== 'undefined' &&
	  window.document &&
	  window.document.createElement
	);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners:
	    canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule invariant
	 */

	"use strict";

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        'Invariant Violation: ' +
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule merge
	 */

	"use strict";

	var mergeInto = __webpack_require__(40);

	/**
	 * Shallow merges two structures into a return value, without mutating either.
	 *
	 * @param {?object} one Optional object with properties to merge from.
	 * @param {?object} two Optional object with properties to merge from.
	 * @return {object} The shallow extension of one by two.
	 */
	var merge = function(one, two) {
	  var result = {};
	  mergeInto(result, one);
	  mergeInto(result, two);
	  return result;
	};

	module.exports = merge;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mergeInto
	 * @typechecks static-only
	 */

	"use strict";

	var mergeHelpers = __webpack_require__(69);

	var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
	var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

	/**
	 * Shallow merges two structures by mutating the first parameter.
	 *
	 * @param {object|function} one Object to be merged into.
	 * @param {?object} two Optional object with properties to merge from.
	 */
	function mergeInto(one, two) {
	  checkMergeIntoObjectArg(one);
	  if (two != null) {
	    checkMergeObjectArg(two);
	    for (var key in two) {
	      if (!two.hasOwnProperty(key)) {
	        continue;
	      }
	      one[key] = two[key];
	    }
	  }
	}

	module.exports = mergeInto;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 * @providesModule cloneWithProps
	 */

	"use strict";

	var ReactPropTransferer = __webpack_require__(67);

	var keyOf = __webpack_require__(68);
	var warning = __webpack_require__(61);

	var CHILDREN_PROP = keyOf({children: null});

	/**
	 * Sometimes you want to change the props of a child passed to you. Usually
	 * this is to add a CSS class.
	 *
	 * @param {object} child child component you'd like to clone
	 * @param {object} props props you'd like to modify. They will be merged
	 * as if you used `transferPropsTo()`.
	 * @return {object} a clone of child with props merged in.
	 */
	function cloneWithProps(child, props) {
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      !child.props.ref,
	      'You are calling cloneWithProps() on a child with a ref. This is ' +
	      'dangerous because you\'re creating a new child which will not be ' +
	      'added as a ref to its parent.'
	    ) : null);
	  }

	  var newProps = ReactPropTransferer.mergeProps(props, child.props);

	  // Use `child.props.children` if it is provided.
	  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&
	      child.props.hasOwnProperty(CHILDREN_PROP)) {
	    newProps.children = child.props.children;
	  }

	  // The current API doesn't retain _owner and _context, which is why this
	  // doesn't use ReactDescriptor.cloneAndReplaceProps.
	  return child.constructor(newProps);
	}

	module.exports = cloneWithProps;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	"use strict";

	var DOMProperty = __webpack_require__(73);

	var escapeTextForBrowser = __webpack_require__(74);
	var memoizeStringOnly = __webpack_require__(75);
	var warning = __webpack_require__(61);

	function shouldIgnoreValue(name, value) {
	  return value == null ||
	    (DOMProperty.hasBooleanValue[name] && !value) ||
	    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
	    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
	    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
	}

	var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
	  return escapeTextForBrowser(name) + '="';
	});

	if ("production" !== process.env.NODE_ENV) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function(name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
	        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = (
	      DOMProperty.isCustomAttribute(lowerCasedName) ?
	        lowerCasedName :
	      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
	        DOMProperty.getPossibleStandardName[lowerCasedName] :
	        null
	    );

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    ("production" !== process.env.NODE_ENV ? warning(
	      standardName == null,
	      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
	    ) : null);

	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function(id) {
	    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +
	      escapeTextForBrowser(id) + '"';
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function(name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      if (shouldIgnoreValue(name, value)) {
	        return '';
	      }
	      var attributeName = DOMProperty.getAttributeName[name];
	      if (DOMProperty.hasBooleanValue[name] ||
	          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
	        return escapeTextForBrowser(attributeName);
	      }
	      return processAttributeNameAndPrefix(attributeName) +
	        escapeTextForBrowser(value) + '"';
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return processAttributeNameAndPrefix(name) +
	        escapeTextForBrowser(value) + '"';
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function(node, name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(name, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        node.removeAttribute(name);
	      } else {
	        node.setAttribute(name, '' + value);
	      }
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function(node, name) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        node.removeAttribute(DOMProperty.getAttributeName[name]);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        var defaultValue = DOMProperty.getDefaultValueForProperty(
	          node.nodeName,
	          propName
	        );
	        if (!DOMProperty.hasSideEffects[name] ||
	            node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventPluginUtils
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);

	var invariant = __webpack_require__(38);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function(InjectedMount) {
	    injection.Mount = InjectedMount;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        InjectedMount && InjectedMount.getNode,
	        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
	        'is missing getNode.'
	      ) : invariant(InjectedMount && InjectedMount.getNode));
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp ||
	         topLevelType === topLevelTypes.topTouchEnd ||
	         topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove ||
	         topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown ||
	         topLevelType === topLevelTypes.topTouchStart;
	}


	var validateEventDispatches;
	if ("production" !== process.env.NODE_ENV) {
	  validateEventDispatches = function(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ?
	      dispatchListeners.length :
	      dispatchListeners ? 1 : 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      idsIsArr === listenersIsArr && IDsLen === listenersLen,
	      'EventPluginUtils: Invalid `event`.'
	    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
	  };
	}

	/**
	 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
	 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
	 * kept separate to conserve memory.
	 */
	function forEachEventDispatch(event, cb) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      cb(event, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    cb(event, dispatchListeners, dispatchIDs);
	  }
	}

	/**
	 * Default implementation of PluginModule.executeDispatch().
	 * @param {SyntheticEvent} SyntheticEvent to handle
	 * @param {function} Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, listener, domID) {
	  event.currentTarget = injection.Mount.getNode(domID);
	  var returnValue = listener(event, domID);
	  event.currentTarget = null;
	  return returnValue;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, executeDispatch) {
	  forEachEventDispatch(event, executeDispatch);
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return id of the first dispatch execution who's listener returns true, or
	 * null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(dispatchListener),
	    'executeDirectDispatch(...): Invalid `event`.'
	  ) : invariant(!Array.isArray(dispatchListener)));
	  var res = dispatchListener ?
	    dispatchListener(event, dispatchID) :
	    null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {bool} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatch: executeDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	  injection: injection,
	  useTouchEvents: false
	};

	module.exports = EventPluginUtils;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactChildren
	 */

	"use strict";

	var PooledClass = __webpack_require__(71);

	var traverseAllChildren = __webpack_require__(72);
	var warning = __webpack_require__(61);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var threeArgumentPooler = PooledClass.threeArgumentPooler;

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.forEachFunction = forEachFunction;
	  this.forEachContext = forEachContext;
	}
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(traverseContext, child, name, i) {
	  var forEachBookKeeping = traverseContext;
	  forEachBookKeeping.forEachFunction.call(
	    forEachBookKeeping.forEachContext, child, i);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc.
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }

	  var traverseContext =
	    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, mapFunction, mapContext) {
	  this.mapResult = mapResult;
	  this.mapFunction = mapFunction;
	  this.mapContext = mapContext;
	}
	PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

	function mapSingleChildIntoContext(traverseContext, child, name, i) {
	  var mapBookKeeping = traverseContext;
	  var mapResult = mapBookKeeping.mapResult;

	  var keyUnique = !mapResult.hasOwnProperty(name);
	  ("production" !== process.env.NODE_ENV ? warning(
	    keyUnique,
	    'ReactChildren.map(...): Encountered two children with the same key, ' +
	    '`%s`. Child keys must be unique; when two children share a key, only ' +
	    'the first child will be used.',
	    name
	  ) : null);

	  if (keyUnique) {
	    var mappedChild =
	      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
	    mapResult[name] = mappedChild;
	  }
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * TODO: This may likely break any calls to `ReactChildren.map` that were
	 * previously relying on the fact that we guarded against null children.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} mapFunction.
	 * @param {*} mapContext Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }

	  var mapResult = {};
	  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	  return mapResult;
	}

	function forEachSingleChildDummy(traverseContext, child, name, i) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  count: countChildren
	};

	module.exports = ReactChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactComponent
	 */

	"use strict";

	var ReactDescriptor = __webpack_require__(49);
	var ReactOwner = __webpack_require__(76);
	var ReactUpdates = __webpack_require__(63);

	var invariant = __webpack_require__(38);
	var keyMirror = __webpack_require__(77);
	var merge = __webpack_require__(39);

	/**
	 * Every React component is in one of these life cycles.
	 */
	var ComponentLifeCycle = keyMirror({
	  /**
	   * Mounted components have a DOM node representation and are capable of
	   * receiving new props.
	   */
	  MOUNTED: null,
	  /**
	   * Unmounted components are inactive and cannot receive new props.
	   */
	  UNMOUNTED: null
	});

	var injected = false;

	/**
	 * Optionally injectable environment dependent cleanup hook. (server vs.
	 * browser etc). Example: A browser system caches DOM nodes based on component
	 * ID and must remove that cache entry when this instance is unmounted.
	 *
	 * @private
	 */
	var unmountIDFromEnvironment = null;

	/**
	 * The "image" of a component tree, is the platform specific (typically
	 * serialized) data that represents a tree of lower level UI building blocks.
	 * On the web, this "image" is HTML markup which describes a construction of
	 * low level `div` and `span` nodes. Other platforms may have different
	 * encoding of this "image". This must be injected.
	 *
	 * @private
	 */
	var mountImageIntoNode = null;

	/**
	 * Components are the basic units of composition in React.
	 *
	 * Every component accepts a set of keyed input parameters known as "props" that
	 * are initialized by the constructor. Once a component is mounted, the props
	 * can be mutated using `setProps` or `replaceProps`.
	 *
	 * Every component is capable of the following operations:
	 *
	 *   `mountComponent`
	 *     Initializes the component, renders markup, and registers event listeners.
	 *
	 *   `receiveComponent`
	 *     Updates the rendered DOM nodes to match the given component.
	 *
	 *   `unmountComponent`
	 *     Releases any resources allocated by this component.
	 *
	 * Components can also be "owned" by other components. Being owned by another
	 * component means being constructed by that component. This is different from
	 * being the child of a component, which means having a DOM representation that
	 * is a child of the DOM representation of that component.
	 *
	 * @class ReactComponent
	 */
	var ReactComponent = {

	  injection: {
	    injectEnvironment: function(ReactComponentEnvironment) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !injected,
	        'ReactComponent: injectEnvironment() can only be called once.'
	      ) : invariant(!injected));
	      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
	      unmountIDFromEnvironment =
	        ReactComponentEnvironment.unmountIDFromEnvironment;
	      ReactComponent.BackendIDOperations =
	        ReactComponentEnvironment.BackendIDOperations;
	      injected = true;
	    }
	  },

	  /**
	   * @internal
	   */
	  LifeCycle: ComponentLifeCycle,

	  /**
	   * Injected module that provides ability to mutate individual properties.
	   * Injected into the base class because many different subclasses need access
	   * to this.
	   *
	   * @internal
	   */
	  BackendIDOperations: null,

	  /**
	   * Base functionality for every ReactComponent constructor. Mixed into the
	   * `ReactComponent` prototype, but exposed statically for easy access.
	   *
	   * @lends {ReactComponent.prototype}
	   */
	  Mixin: {

	    /**
	     * Checks whether or not this component is mounted.
	     *
	     * @return {boolean} True if mounted, false otherwise.
	     * @final
	     * @protected
	     */
	    isMounted: function() {
	      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
	    },

	    /**
	     * Sets a subset of the props.
	     *
	     * @param {object} partialProps Subset of the next props.
	     * @param {?function} callback Called after props are updated.
	     * @final
	     * @public
	     */
	    setProps: function(partialProps, callback) {
	      // Merge with the pending descriptor if it exists, otherwise with existing
	      // descriptor props.
	      var descriptor = this._pendingDescriptor || this._descriptor;
	      this.replaceProps(
	        merge(descriptor.props, partialProps),
	        callback
	      );
	    },

	    /**
	     * Replaces all of the props.
	     *
	     * @param {object} props New props.
	     * @param {?function} callback Called after props are updated.
	     * @final
	     * @public
	     */
	    replaceProps: function(props, callback) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        this.isMounted(),
	        'replaceProps(...): Can only update a mounted component.'
	      ) : invariant(this.isMounted()));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        this._mountDepth === 0,
	        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
	        'component with a parent. This is an anti-pattern since props will ' +
	        'get reactively updated when rendered. Instead, change the owner\'s ' +
	        '`render` method to pass the correct value as props to the component ' +
	        'where it is created.'
	      ) : invariant(this._mountDepth === 0));
	      // This is a deoptimized path. We optimize for always having a descriptor.
	      // This creates an extra internal descriptor.
	      this._pendingDescriptor = ReactDescriptor.cloneAndReplaceProps(
	        this._pendingDescriptor || this._descriptor,
	        props
	      );
	      ReactUpdates.enqueueUpdate(this, callback);
	    },

	    /**
	     * Schedule a partial update to the props. Only used for internal testing.
	     *
	     * @param {object} partialProps Subset of the next props.
	     * @param {?function} callback Called after props are updated.
	     * @final
	     * @internal
	     */
	    _setPropsInternal: function(partialProps, callback) {
	      // This is a deoptimized path. We optimize for always having a descriptor.
	      // This creates an extra internal descriptor.
	      var descriptor = this._pendingDescriptor || this._descriptor;
	      this._pendingDescriptor = ReactDescriptor.cloneAndReplaceProps(
	        descriptor,
	        merge(descriptor.props, partialProps)
	      );
	      ReactUpdates.enqueueUpdate(this, callback);
	    },

	    /**
	     * Base constructor for all React components.
	     *
	     * Subclasses that override this method should make sure to invoke
	     * `ReactComponent.Mixin.construct.call(this, ...)`.
	     *
	     * @param {ReactDescriptor} descriptor
	     * @internal
	     */
	    construct: function(descriptor) {
	      // This is the public exposed props object after it has been processed
	      // with default props. The descriptor's props represents the true internal
	      // state of the props.
	      this.props = descriptor.props;
	      // Record the component responsible for creating this component.
	      // This is accessible through the descriptor but we maintain an extra
	      // field for compatibility with devtools and as a way to make an
	      // incremental update. TODO: Consider deprecating this field.
	      this._owner = descriptor._owner;

	      // All components start unmounted.
	      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

	      // See ReactUpdates.
	      this._pendingCallbacks = null;

	      // We keep the old descriptor and a reference to the pending descriptor
	      // to track updates.
	      this._descriptor = descriptor;
	      this._pendingDescriptor = null;
	    },

	    /**
	     * Initializes the component, renders markup, and registers event listeners.
	     *
	     * NOTE: This does not insert any nodes into the DOM.
	     *
	     * Subclasses that override this method should make sure to invoke
	     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
	     *
	     * @param {string} rootID DOM ID of the root node.
	     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	     * @param {number} mountDepth number of components in the owner hierarchy.
	     * @return {?string} Rendered markup to be inserted into the DOM.
	     * @internal
	     */
	    mountComponent: function(rootID, transaction, mountDepth) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !this.isMounted(),
	        'mountComponent(%s, ...): Can only mount an unmounted component. ' +
	        'Make sure to avoid storing components between renders or reusing a ' +
	        'single component instance in multiple places.',
	        rootID
	      ) : invariant(!this.isMounted()));
	      var props = this._descriptor.props;
	      if (props.ref != null) {
	        var owner = this._descriptor._owner;
	        ReactOwner.addComponentAsRefTo(this, props.ref, owner);
	      }
	      this._rootNodeID = rootID;
	      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
	      this._mountDepth = mountDepth;
	      // Effectively: return '';
	    },

	    /**
	     * Releases any resources allocated by `mountComponent`.
	     *
	     * NOTE: This does not remove any nodes from the DOM.
	     *
	     * Subclasses that override this method should make sure to invoke
	     * `ReactComponent.Mixin.unmountComponent.call(this)`.
	     *
	     * @internal
	     */
	    unmountComponent: function() {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        this.isMounted(),
	        'unmountComponent(): Can only unmount a mounted component.'
	      ) : invariant(this.isMounted()));
	      var props = this.props;
	      if (props.ref != null) {
	        ReactOwner.removeComponentAsRefFrom(this, props.ref, this._owner);
	      }
	      unmountIDFromEnvironment(this._rootNodeID);
	      this._rootNodeID = null;
	      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
	    },

	    /**
	     * Given a new instance of this component, updates the rendered DOM nodes
	     * as if that instance was rendered instead.
	     *
	     * Subclasses that override this method should make sure to invoke
	     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
	     *
	     * @param {object} nextComponent Next set of properties.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    receiveComponent: function(nextDescriptor, transaction) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        this.isMounted(),
	        'receiveComponent(...): Can only update a mounted component.'
	      ) : invariant(this.isMounted()));
	      this._pendingDescriptor = nextDescriptor;
	      this.performUpdateIfNecessary(transaction);
	    },

	    /**
	     * If `_pendingDescriptor` is set, update the component.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    performUpdateIfNecessary: function(transaction) {
	      if (this._pendingDescriptor == null) {
	        return;
	      }
	      var prevDescriptor = this._descriptor;
	      var nextDescriptor = this._pendingDescriptor;
	      this._descriptor = nextDescriptor;
	      this.props = nextDescriptor.props;
	      this._owner = nextDescriptor._owner;
	      this._pendingDescriptor = null;
	      this.updateComponent(transaction, prevDescriptor);
	    },

	    /**
	     * Updates the component's currently mounted representation.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @param {object} prevDescriptor
	     * @internal
	     */
	    updateComponent: function(transaction, prevDescriptor) {
	      var nextDescriptor = this._descriptor;

	      // If either the owner or a `ref` has changed, make sure the newest owner
	      // has stored a reference to `this`, and the previous owner (if different)
	      // has forgotten the reference to `this`. We use the descriptor instead
	      // of the public this.props because the post processing cannot determine
	      // a ref. The ref conceptually lives on the descriptor.

	      // TODO: Should this even be possible? The owner cannot change because
	      // it's forbidden by shouldUpdateReactComponent. The ref can change
	      // if you swap the keys of but not the refs. Reconsider where this check
	      // is made. It probably belongs where the key checking and
	      // instantiateReactComponent is done.

	      if (nextDescriptor._owner !== prevDescriptor._owner ||
	          nextDescriptor.props.ref !== prevDescriptor.props.ref) {
	        if (prevDescriptor.props.ref != null) {
	          ReactOwner.removeComponentAsRefFrom(
	            this, prevDescriptor.props.ref, prevDescriptor._owner
	          );
	        }
	        // Correct, even if the owner is the same, and only the ref has changed.
	        if (nextDescriptor.props.ref != null) {
	          ReactOwner.addComponentAsRefTo(
	            this,
	            nextDescriptor.props.ref,
	            nextDescriptor._owner
	          );
	        }
	      }
	    },

	    /**
	     * Mounts this component and inserts it into the DOM.
	     *
	     * @param {string} rootID DOM ID of the root node.
	     * @param {DOMElement} container DOM element to mount into.
	     * @param {boolean} shouldReuseMarkup If true, do not insert markup
	     * @final
	     * @internal
	     * @see {ReactMount.renderComponent}
	     */
	    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
	      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	      transaction.perform(
	        this._mountComponentIntoNode,
	        this,
	        rootID,
	        container,
	        transaction,
	        shouldReuseMarkup
	      );
	      ReactUpdates.ReactReconcileTransaction.release(transaction);
	    },

	    /**
	     * @param {string} rootID DOM ID of the root node.
	     * @param {DOMElement} container DOM element to mount into.
	     * @param {ReactReconcileTransaction} transaction
	     * @param {boolean} shouldReuseMarkup If true, do not insert markup
	     * @final
	     * @private
	     */
	    _mountComponentIntoNode: function(
	        rootID,
	        container,
	        transaction,
	        shouldReuseMarkup) {
	      var markup = this.mountComponent(rootID, transaction, 0);
	      mountImageIntoNode(markup, container, shouldReuseMarkup);
	    },

	    /**
	     * Checks if this component is owned by the supplied `owner` component.
	     *
	     * @param {ReactComponent} owner Component to check.
	     * @return {boolean} True if `owners` owns this component.
	     * @final
	     * @internal
	     */
	    isOwnedBy: function(owner) {
	      return this._owner === owner;
	    },

	    /**
	     * Gets another component, that shares the same owner as this one, by ref.
	     *
	     * @param {string} ref of a sibling Component.
	     * @return {?ReactComponent} the actual sibling Component.
	     * @final
	     * @internal
	     */
	    getSiblingByRef: function(ref) {
	      var owner = this._owner;
	      if (!owner || !owner.refs) {
	        return null;
	      }
	      return owner.refs[ref];
	    }
	  }
	};

	module.exports = ReactComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	"use strict";

	var ReactComponent = __webpack_require__(45);
	var ReactContext = __webpack_require__(47);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactDescriptor = __webpack_require__(49);
	var ReactDescriptorValidator = __webpack_require__(78);
	var ReactEmptyComponent = __webpack_require__(79);
	var ReactErrorUtils = __webpack_require__(80);
	var ReactOwner = __webpack_require__(76);
	var ReactPerf = __webpack_require__(56);
	var ReactPropTransferer = __webpack_require__(67);
	var ReactPropTypeLocations = __webpack_require__(81);
	var ReactPropTypeLocationNames = __webpack_require__(82);
	var ReactUpdates = __webpack_require__(63);

	var instantiateReactComponent = __webpack_require__(83);
	var invariant = __webpack_require__(38);
	var keyMirror = __webpack_require__(77);
	var merge = __webpack_require__(39);
	var mixInto = __webpack_require__(84);
	var monitorCodeUse = __webpack_require__(85);
	var mapObject = __webpack_require__(86);
	var shouldUpdateReactComponent = __webpack_require__(87);
	var warning = __webpack_require__(61);

	/**
	 * Policies that describe methods in `ReactCompositeComponentInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base ReactCompositeComponent class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});


	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactCompositeComponent`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will available on the prototype.
	 *
	 * @interface ReactCompositeComponentInterface
	 * @internal
	 */
	var ReactCompositeComponentInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,



	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,



	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function(Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function(Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function(Constructor, childContextTypes) {
	    validateTypeDef(
	      Constructor,
	      childContextTypes,
	      ReactPropTypeLocations.childContext
	    );
	    Constructor.childContextTypes = merge(
	      Constructor.childContextTypes,
	      childContextTypes
	    );
	  },
	  contextTypes: function(Constructor, contextTypes) {
	    validateTypeDef(
	      Constructor,
	      contextTypes,
	      ReactPropTypeLocations.context
	    );
	    Constructor.contextTypes = merge(Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function(Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(
	        Constructor.getDefaultProps,
	        getDefaultProps
	      );
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function(Constructor, propTypes) {
	    validateTypeDef(
	      Constructor,
	      propTypes,
	      ReactPropTypeLocations.prop
	    );
	    Constructor.propTypes = merge(Constructor.propTypes, propTypes);
	  },
	  statics: function(Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  }
	};

	function getDeclarationErrorAddendum(component) {
	  var owner = component._owner || null;
	  if (owner && owner.constructor && owner.constructor.displayName) {
	    return ' Check the render method of `' + owner.constructor.displayName +
	      '`.';
	  }
	  return '';
	}

	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof typeDef[propName] == 'function',
	        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	        'React.PropTypes.',
	        Constructor.displayName || 'ReactCompositeComponent',
	        ReactPropTypeLocationNames[location],
	        propName
	      ) : invariant(typeof typeDef[propName] == 'function'));
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ?
	    ReactCompositeComponentInterface[name] :
	    null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.OVERRIDE_BASE,
	      'ReactCompositeComponentInterface: You are attempting to override ' +
	      '`%s` from your class specification. Ensure that your method names ' +
	      'do not overlap with React methods.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.DEFINE_MANY ||
	      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
	      'ReactCompositeComponentInterface: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be due ' +
	      'to a mixin.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
	    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
	  }
	}

	function validateLifeCycleOnReplaceState(instance) {
	  var compositeLifeCycleState = instance._compositeLifeCycleState;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    instance.isMounted() ||
	      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
	    'replaceState(...): Can only update a mounted or mounting component.'
	  ) : invariant(instance.isMounted() ||
	    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
	  ("production" !== process.env.NODE_ENV ? invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE,
	    'replaceState(...): Cannot update during an existing state transition ' +
	    '(such as within `render`). This could potentially cause an infinite ' +
	    'loop so it is forbidden.'
	  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE));
	  ("production" !== process.env.NODE_ENV ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
	    'replaceState(...): Cannot update while unmounting component. This ' +
	    'usually means you called setState() on an unmounted component.'
	  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
	}

	/**
	 * Custom version of `mixInto` which handles policy validation and reserved
	 * specification keys when building `ReactCompositeComponent` classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !ReactDescriptor.isValidFactory(spec),
	    'ReactCompositeComponent: You\'re attempting to ' +
	    'use a component class as a mixin. Instead, just use a regular object.'
	  ) : invariant(!ReactDescriptor.isValidFactory(spec)));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !ReactDescriptor.isValidDescriptor(spec),
	    'ReactCompositeComponent: You\'re attempting to ' +
	    'use a component as a mixin. Instead, just use a regular object.'
	  ) : invariant(!ReactDescriptor.isValidDescriptor(spec)));

	  var proto = Constructor.prototype;
	  for (var name in spec) {
	    var property = spec[name];
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactCompositeComponent methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isCompositeComponentMethod =
	        ReactCompositeComponentInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var markedDontBind = property && property.__reactDontBind;
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind =
	        isFunction &&
	        !isCompositeComponentMethod &&
	        !isAlreadyDefined &&
	        !markedDontBind;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactCompositeComponentInterface[name];

	          // These cases should already be caught by validateMethodOverride
	          ("production" !== process.env.NODE_ENV ? invariant(
	            isCompositeComponentMethod && (
	              specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
	              specPolicy === SpecPolicy.DEFINE_MANY
	            ),
	            'ReactCompositeComponent: Unexpected spec policy %s for key %s ' +
	            'when mixing in component specs.',
	            specPolicy,
	            name
	          ) : invariant(isCompositeComponentMethod && (
	            specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
	            specPolicy === SpecPolicy.DEFINE_MANY
	          )));

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if ("production" !== process.env.NODE_ENV) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isInherited = name in Constructor;
	    var result = property;
	    if (isInherited) {
	      var existingProperty = Constructor[name];
	      var existingType = typeof existingProperty;
	      var propertyType = typeof property;
	      ("production" !== process.env.NODE_ENV ? invariant(
	        existingType === 'function' && propertyType === 'function',
	        'ReactCompositeComponent: You are attempting to define ' +
	        '`%s` on your component more than once, but that is only supported ' +
	        'for functions, which are chained together. This conflict may be ' +
	        'due to a mixin.',
	        name
	      ) : invariant(existingType === 'function' && propertyType === 'function'));
	      result = createChainedFunction(existingProperty, property);
	    }
	    Constructor[name] = result;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeObjectsWithNoDuplicateKeys(one, two) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    one && two && typeof one === 'object' && typeof two === 'object',
	    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
	  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

	  mapObject(two, function(value, key) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      one[key] === undefined,
	      'mergeObjectsWithNoDuplicateKeys(): ' +
	      'Tried to merge two objects with the same key: %s',
	      key
	    ) : invariant(one[key] === undefined));
	    one[key] = value;
	  });
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    return mergeObjectsWithNoDuplicateKeys(a, b);
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
	 * `this._compositeLifeCycleState` (which can be null).
	 *
	 * This is different from the life cycle state maintained by `ReactComponent` in
	 * `this._lifeCycleState`. The following diagram shows how the states overlap in
	 * time. There are times when the CompositeLifeCycle is null - at those times it
	 * is only meaningful to look at ComponentLifeCycle alone.
	 *
	 * Top Row: ReactComponent.ComponentLifeCycle
	 * Low Row: ReactComponent.CompositeLifeCycle
	 *
	 * +-------+------------------------------------------------------+--------+
	 * |  UN   |                    MOUNTED                           |   UN   |
	 * |MOUNTED|                                                      | MOUNTED|
	 * +-------+------------------------------------------------------+--------+
	 * |       ^--------+   +------+   +------+   +------+   +--------^        |
	 * |       |        |   |      |   |      |   |      |   |        |        |
	 * |    0--|MOUNTING|-0-|RECEIV|-0-|RECEIV|-0-|RECEIV|-0-|   UN   |--->0   |
	 * |       |        |   |PROPS |   | PROPS|   | STATE|   |MOUNTING|        |
	 * |       |        |   |      |   |      |   |      |   |        |        |
	 * |       |        |   |      |   |      |   |      |   |        |        |
	 * |       +--------+   +------+   +------+   +------+   +--------+        |
	 * |       |                                                      |        |
	 * +-------+------------------------------------------------------+--------+
	 */
	var CompositeLifeCycle = keyMirror({
	  /**
	   * Components in the process of being mounted respond to state changes
	   * differently.
	   */
	  MOUNTING: null,
	  /**
	   * Components in the process of being unmounted are guarded against state
	   * changes.
	   */
	  UNMOUNTING: null,
	  /**
	   * Components that are mounted and receiving new props respond to state
	   * changes differently.
	   */
	  RECEIVING_PROPS: null,
	  /**
	   * Components that are mounted and receiving new state are guarded against
	   * additional state changes.
	   */
	  RECEIVING_STATE: null
	});

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactDescriptor} descriptor
	   * @final
	   * @internal
	   */
	  construct: function(descriptor) {
	    // Children can be either an array or more than one argument
	    ReactComponent.Mixin.construct.apply(this, arguments);
	    ReactOwner.Mixin.construct.apply(this, arguments);

	    this.state = null;
	    this._pendingState = null;

	    // This is the public post-processed context. The real context and pending
	    // context lives on the descriptor.
	    this.context = null;

	    this._compositeLifeCycleState = null;
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function() {
	    return ReactComponent.Mixin.isMounted.call(this) &&
	      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {number} mountDepth number of components in the owner hierarchy
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: ReactPerf.measure(
	    'ReactCompositeComponent',
	    'mountComponent',
	    function(rootID, transaction, mountDepth) {
	      ReactComponent.Mixin.mountComponent.call(
	        this,
	        rootID,
	        transaction,
	        mountDepth
	      );
	      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

	      if (this.__reactAutoBindMap) {
	        this._bindAutoBindMethods();
	      }

	      this.context = this._processContext(this._descriptor._context);
	      this.props = this._processProps(this.props);

	      this.state = this.getInitialState ? this.getInitialState() : null;
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof this.state === 'object' && !Array.isArray(this.state),
	        '%s.getInitialState(): must return an object or null',
	        this.constructor.displayName || 'ReactCompositeComponent'
	      ) : invariant(typeof this.state === 'object' && !Array.isArray(this.state)));

	      this._pendingState = null;
	      this._pendingForceUpdate = false;

	      if (this.componentWillMount) {
	        this.componentWillMount();
	        // When mounting, calls to `setState` by `componentWillMount` will set
	        // `this._pendingState` without triggering a re-render.
	        if (this._pendingState) {
	          this.state = this._pendingState;
	          this._pendingState = null;
	        }
	      }

	      this._renderedComponent = instantiateReactComponent(
	        this._renderValidatedComponent()
	      );

	      // Done with mounting, `setState` will now trigger UI changes.
	      this._compositeLifeCycleState = null;
	      var markup = this._renderedComponent.mountComponent(
	        rootID,
	        transaction,
	        mountDepth + 1
	      );
	      if (this.componentDidMount) {
	        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
	      }
	      return markup;
	    }
	  ),

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function() {
	    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
	    if (this.componentWillUnmount) {
	      this.componentWillUnmount();
	    }
	    this._compositeLifeCycleState = null;

	    this._renderedComponent.unmountComponent();
	    this._renderedComponent = null;

	    ReactComponent.Mixin.unmountComponent.call(this);

	    // Some existing components rely on this.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: this.props = null;
	    // TODO: this.state = null;
	  },

	  /**
	   * Sets a subset of the state. Always use this or `replaceState` to mutate
	   * state. You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * There is no guarantee that calls to `setState` will run synchronously,
	   * as they may eventually be batched together.  You can provide an optional
	   * callback that will be executed when the call to setState is actually
	   * completed.
	   *
	   * @param {object} partialState Next partial state to be merged with state.
	   * @param {?function} callback Called after state is updated.
	   * @final
	   * @protected
	   */
	  setState: function(partialState, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof partialState === 'object' || partialState == null,
	      'setState(...): takes an object of state variables to update.'
	    ) : invariant(typeof partialState === 'object' || partialState == null));
	    if ("production" !== process.env.NODE_ENV){
	      ("production" !== process.env.NODE_ENV ? warning(
	        partialState != null,
	        'setState(...): You passed an undefined or null state object; ' +
	        'instead, use forceUpdate().'
	      ) : null);
	    }
	    // Merge with `_pendingState` if it exists, otherwise with existing state.
	    this.replaceState(
	      merge(this._pendingState || this.state, partialState),
	      callback
	    );
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {object} completeState Next state.
	   * @param {?function} callback Called after state is updated.
	   * @final
	   * @protected
	   */
	  replaceState: function(completeState, callback) {
	    validateLifeCycleOnReplaceState(this);
	    this._pendingState = completeState;
	    if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
	      // If we're in a componentWillMount handler, don't enqueue a rerender
	      // because ReactUpdates assumes we're in a browser context (which is wrong
	      // for server rendering) and we're about to do a render anyway.
	      // TODO: The callback here is ignored when setState is called from
	      // componentWillMount. Either fix it or disallow doing so completely in
	      // favor of getInitialState.
	      ReactUpdates.enqueueUpdate(this, callback);
	    }
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function(context) {
	    var maskedContext = null;
	    var contextTypes = this.constructor.contextTypes;
	    if (contextTypes) {
	      maskedContext = {};
	      for (var contextName in contextTypes) {
	        maskedContext[contextName] = context[contextName];
	      }
	      if ("production" !== process.env.NODE_ENV) {
	        this._checkPropTypes(
	          contextTypes,
	          maskedContext,
	          ReactPropTypeLocations.context
	        );
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function(currentContext) {
	    var childContext = this.getChildContext && this.getChildContext();
	    var displayName = this.constructor.displayName || 'ReactCompositeComponent';
	    if (childContext) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof this.constructor.childContextTypes === 'object',
	        '%s.getChildContext(): childContextTypes must be defined in order to ' +
	        'use getChildContext().',
	        displayName
	      ) : invariant(typeof this.constructor.childContextTypes === 'object'));
	      if ("production" !== process.env.NODE_ENV) {
	        this._checkPropTypes(
	          this.constructor.childContextTypes,
	          childContext,
	          ReactPropTypeLocations.childContext
	        );
	      }
	      for (var name in childContext) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          name in this.constructor.childContextTypes,
	          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
	          displayName,
	          name
	        ) : invariant(name in this.constructor.childContextTypes));
	      }
	      return merge(currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function(newProps) {
	    var defaultProps = this.constructor.defaultProps;
	    var props;
	    if (defaultProps) {
	      props = merge(newProps);
	      for (var propName in defaultProps) {
	        if (typeof props[propName] === 'undefined') {
	          props[propName] = defaultProps[propName];
	        }
	      }
	    } else {
	      props = newProps;
	    }
	    if ("production" !== process.env.NODE_ENV) {
	      var propTypes = this.constructor.propTypes;
	      if (propTypes) {
	        this._checkPropTypes(propTypes, props, ReactPropTypeLocations.prop);
	      }
	    }
	    return props;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the descriptor
	    // validation.
	    var componentName = this.constructor.displayName;
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error =
	          propTypes[propName](props, propName, componentName, location);
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // renderComponent calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	          ("production" !== process.env.NODE_ENV ? warning(false, error.message + addendum) : null);
	        }
	      }
	    }
	  },

	  /**
	   * If any of `_pendingDescriptor`, `_pendingState`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(transaction) {
	    var compositeLifeCycleState = this._compositeLifeCycleState;
	    // Do not trigger a state transition if we are in the middle of mounting or
	    // receiving props because both of those will already be doing this.
	    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
	        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
	      return;
	    }

	    if (this._pendingDescriptor == null &&
	        this._pendingState == null &&
	        !this._pendingForceUpdate) {
	      return;
	    }

	    var nextContext = this.context;
	    var nextProps = this.props;
	    var nextDescriptor = this._descriptor;
	    if (this._pendingDescriptor != null) {
	      nextDescriptor = this._pendingDescriptor;
	      nextContext = this._processContext(nextDescriptor._context);
	      nextProps = this._processProps(nextDescriptor.props);
	      this._pendingDescriptor = null;

	      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
	      if (this.componentWillReceiveProps) {
	        this.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_STATE;

	    var nextState = this._pendingState || this.state;
	    this._pendingState = null;

	    try {
	      var shouldUpdate =
	        this._pendingForceUpdate ||
	        !this.shouldComponentUpdate ||
	        this.shouldComponentUpdate(nextProps, nextState, nextContext);

	      if ("production" !== process.env.NODE_ENV) {
	        if (typeof shouldUpdate === "undefined") {
	          console.warn(
	            (this.constructor.displayName || 'ReactCompositeComponent') +
	            '.shouldComponentUpdate(): Returned undefined instead of a ' +
	            'boolean value. Make sure to return true or false.'
	          );
	        }
	      }

	      if (shouldUpdate) {
	        this._pendingForceUpdate = false;
	        // Will set `this.props`, `this.state` and `this.context`.
	        this._performComponentUpdate(
	          nextDescriptor,
	          nextProps,
	          nextState,
	          nextContext,
	          transaction
	        );
	      } else {
	        // If it's determined that a component should not update, we still want
	        // to set props and state.
	        this._descriptor = nextDescriptor;
	        this.props = nextProps;
	        this.state = nextState;
	        this.context = nextContext;

	        // Owner cannot change because shouldUpdateReactComponent doesn't allow
	        // it. TODO: Remove this._owner completely.
	        this._owner = nextDescriptor._owner;
	      }
	    } finally {
	      this._compositeLifeCycleState = null;
	    }
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactDescriptor} nextDescriptor Next descriptor
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @private
	   */
	  _performComponentUpdate: function(
	    nextDescriptor,
	    nextProps,
	    nextState,
	    nextContext,
	    transaction
	  ) {
	    var prevDescriptor = this._descriptor;
	    var prevProps = this.props;
	    var prevState = this.state;
	    var prevContext = this.context;

	    if (this.componentWillUpdate) {
	      this.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._descriptor = nextDescriptor;
	    this.props = nextProps;
	    this.state = nextState;
	    this.context = nextContext;

	    // Owner cannot change because shouldUpdateReactComponent doesn't allow
	    // it. TODO: Remove this._owner completely.
	    this._owner = nextDescriptor._owner;

	    this.updateComponent(
	      transaction,
	      prevDescriptor
	    );

	    if (this.componentDidUpdate) {
	      transaction.getReactMountReady().enqueue(
	        this.componentDidUpdate.bind(this, prevProps, prevState, prevContext),
	        this
	      );
	    }
	  },

	  receiveComponent: function(nextDescriptor, transaction) {
	    if (nextDescriptor === this._descriptor &&
	        nextDescriptor._owner != null) {
	      // Since descriptors are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the descriptor. We explicitly check for the existence of an owner since
	      // it's possible for a descriptor created outside a composite to be
	      // deeply mutated and reused.
	      return;
	    }

	    ReactComponent.Mixin.receiveComponent.call(
	      this,
	      nextDescriptor,
	      transaction
	    );
	  },

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactDescriptor} prevDescriptor
	   * @internal
	   * @overridable
	   */
	  updateComponent: ReactPerf.measure(
	    'ReactCompositeComponent',
	    'updateComponent',
	    function(transaction, prevParentDescriptor) {
	      ReactComponent.Mixin.updateComponent.call(
	        this,
	        transaction,
	        prevParentDescriptor
	      );

	      var prevComponentInstance = this._renderedComponent;
	      var prevDescriptor = prevComponentInstance._descriptor;
	      var nextDescriptor = this._renderValidatedComponent();
	      if (shouldUpdateReactComponent(prevDescriptor, nextDescriptor)) {
	        prevComponentInstance.receiveComponent(nextDescriptor, transaction);
	      } else {
	        // These two IDs are actually the same! But nothing should rely on that.
	        var thisID = this._rootNodeID;
	        var prevComponentID = prevComponentInstance._rootNodeID;
	        prevComponentInstance.unmountComponent();
	        this._renderedComponent = instantiateReactComponent(nextDescriptor);
	        var nextMarkup = this._renderedComponent.mountComponent(
	          thisID,
	          transaction,
	          this._mountDepth + 1
	        );
	        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(
	          prevComponentID,
	          nextMarkup
	        );
	      }
	    }
	  ),

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldUpdateComponent`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {?function} callback Called after update is complete.
	   * @final
	   * @protected
	   */
	  forceUpdate: function(callback) {
	    var compositeLifeCycleState = this._compositeLifeCycleState;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isMounted() ||
	        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
	      'forceUpdate(...): Can only force an update on mounted or mounting ' +
	        'components.'
	    ) : invariant(this.isMounted() ||
	      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
	      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
	      'forceUpdate(...): Cannot force an update while unmounting component ' +
	      'or during an existing state transition (such as within `render`).'
	    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
	    compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
	    this._pendingForceUpdate = true;
	    ReactUpdates.enqueueUpdate(this, callback);
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: ReactPerf.measure(
	    'ReactCompositeComponent',
	    '_renderValidatedComponent',
	    function() {
	      var renderedComponent;
	      var previousContext = ReactContext.current;
	      ReactContext.current = this._processChildContext(
	        this._descriptor._context
	      );
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this.render();
	        if (renderedComponent === null || renderedComponent === false) {
	          renderedComponent = ReactEmptyComponent.getEmptyComponent();
	          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
	        } else {
	          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
	        }
	      } finally {
	        ReactContext.current = previousContext;
	        ReactCurrentOwner.current = null;
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        ReactDescriptor.isValidDescriptor(renderedComponent),
	        '%s.render(): A valid ReactComponent must be returned. You may have ' +
	          'returned undefined, an array or some other invalid object.',
	        this.constructor.displayName || 'ReactCompositeComponent'
	      ) : invariant(ReactDescriptor.isValidDescriptor(renderedComponent)));
	      return renderedComponent;
	    }
	  ),

	  /**
	   * @private
	   */
	  _bindAutoBindMethods: function() {
	    for (var autoBindKey in this.__reactAutoBindMap) {
	      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	        continue;
	      }
	      var method = this.__reactAutoBindMap[autoBindKey];
	      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
	        method,
	        this.constructor.displayName + '.' + autoBindKey
	      ));
	    }
	  },

	  /**
	   * Binds a method to the component.
	   *
	   * @param {function} method Method to be bound.
	   * @private
	   */
	  _bindAutoBindMethod: function(method) {
	    var component = this;
	    var boundMethod = function() {
	      return method.apply(component, arguments);
	    };
	    if ("production" !== process.env.NODE_ENV) {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis ) {var args=Array.prototype.slice.call(arguments,1);
	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          monitorCodeUse('react_bind_warning', { component: componentName });
	          console.warn(
	            'bind(): React component methods may only be bound to the ' +
	            'component instance. See ' + componentName
	          );
	        } else if (!args.length) {
	          monitorCodeUse('react_bind_warning', { component: componentName });
	          console.warn(
	            'bind(): You are binding a component method to the component. ' +
	            'React does this for you automatically in a high-performance ' +
	            'way, so you can safely remove this call. See ' + componentName
	          );
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }
	};

	var ReactCompositeComponentBase = function() {};
	mixInto(ReactCompositeComponentBase, ReactComponent.Mixin);
	mixInto(ReactCompositeComponentBase, ReactOwner.Mixin);
	mixInto(ReactCompositeComponentBase, ReactPropTransferer.Mixin);
	mixInto(ReactCompositeComponentBase, ReactCompositeComponentMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactCompositeComponent
	 * @extends ReactComponent
	 * @extends ReactOwner
	 * @extends ReactPropTransferer
	 */
	var ReactCompositeComponent = {

	  LifeCycle: CompositeLifeCycle,

	  Base: ReactCompositeComponentBase,

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function(spec) {
	    var Constructor = function(props, owner) {
	      this.construct(props, owner);
	    };
	    Constructor.prototype = new ReactCompositeComponentBase();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(
	      mixSpecIntoComponent.bind(null, Constructor)
	    );

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    ) : invariant(Constructor.prototype.render));

	    if ("production" !== process.env.NODE_ENV) {
	      if (Constructor.prototype.componentShouldUpdate) {
	        monitorCodeUse(
	          'react_component_should_update_warning',
	          { component: spec.displayName }
	        );
	        console.warn(
	          (spec.displayName || 'A component') + ' has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.'
	         );
	      }
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactCompositeComponentInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    var descriptorFactory = ReactDescriptor.createFactory(Constructor);

	    if ("production" !== process.env.NODE_ENV) {
	      return ReactDescriptorValidator.createFactory(
	        descriptorFactory,
	        Constructor.propTypes,
	        Constructor.contextTypes
	      );
	    }

	    return descriptorFactory;
	  },

	  injection: {
	    injectMixin: function(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	};

	module.exports = ReactCompositeComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactContext
	 */

	"use strict";

	var merge = __webpack_require__(39);

	/**
	 * Keeps track of the current context.
	 *
	 * The context is automatically passed down the component ownership hierarchy
	 * and is accessible via `this.context` on ReactCompositeComponents.
	 */
	var ReactContext = {

	  /**
	   * @internal
	   * @type {object}
	   */
	  current: {},

	  /**
	   * Temporarily extends the current context while executing scopedCallback.
	   *
	   * A typical use case might look like
	   *
	   *  render: function() {
	   *    var children = ReactContext.withContext({foo: 'foo'} () => (
	   *
	   *    ));
	   *    return <div>{children}</div>;
	   *  }
	   *
	   * @param {object} newContext New context to merge into the existing context
	   * @param {function} scopedCallback Callback to run with the new context
	   * @return {ReactComponent|array<ReactComponent>}
	   */
	  withContext: function(newContext, scopedCallback) {
	    var result;
	    var previousContext = ReactContext.current;
	    ReactContext.current = merge(previousContext, newContext);
	    try {
	      result = scopedCallback();
	    } finally {
	      ReactContext.current = previousContext;
	    }
	    return result;
	  }

	};

	module.exports = ReactContext;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	"use strict";

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 *
	 * The depth indicate how many composite components are above this render level.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDescriptor
	 */

	"use strict";

	var ReactContext = __webpack_require__(47);
	var ReactCurrentOwner = __webpack_require__(48);

	var merge = __webpack_require__(39);
	var warning = __webpack_require__(61);

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} object
	 * @param {string} key
	 */
	function defineWarningProperty(object, key) {
	  Object.defineProperty(object, key, {

	    configurable: false,
	    enumerable: true,

	    get: function() {
	      if (!this._store) {
	        return null;
	      }
	      return this._store[key];
	    },

	    set: function(value) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        false,
	        'Don\'t set the ' + key + ' property of the component. ' +
	        'Mutate the existing props object instead.'
	      ) : null);
	      this._store[key] = value;
	    }

	  });
	}

	/**
	 * This is updated to true if the membrane is successfully created.
	 */
	var useMutationMembrane = false;

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} descriptor
	 */
	function defineMutationMembrane(prototype) {
	  try {
	    var pseudoFrozenProperties = {
	      props: true
	    };
	    for (var key in pseudoFrozenProperties) {
	      defineWarningProperty(prototype, key);
	    }
	    useMutationMembrane = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	/**
	 * Transfer static properties from the source to the target. Functions are
	 * rebound to have this reflect the original source.
	 */
	function proxyStaticMethods(target, source) {
	  if (typeof source !== 'function') {
	    return;
	  }
	  for (var key in source) {
	    if (source.hasOwnProperty(key)) {
	      var value = source[key];
	      if (typeof value === 'function') {
	        var bound = value.bind(source);
	        // Copy any properties defined on the function, such as `isRequired` on
	        // a PropTypes validator. (mergeInto refuses to work on functions.)
	        for (var k in value) {
	          if (value.hasOwnProperty(k)) {
	            bound[k] = value[k];
	          }
	        }
	        target[key] = bound;
	      } else {
	        target[key] = value;
	      }
	    }
	  }
	}

	/**
	 * Base constructor for all React descriptors. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @internal
	 */
	var ReactDescriptor = function() {};

	if ("production" !== process.env.NODE_ENV) {
	  defineMutationMembrane(ReactDescriptor.prototype);
	}

	ReactDescriptor.createFactory = function(type) {

	  var descriptorPrototype = Object.create(ReactDescriptor.prototype);

	  var factory = function(props, children) {
	    // For consistency we currently allocate a new object for every descriptor.
	    // This protects the descriptor from being mutated by the original props
	    // object being mutated. It also protects the original props object from
	    // being mutated by children arguments and default props. This behavior
	    // comes with a performance cost and could be deprecated in the future.
	    // It could also be optimized with a smarter JSX transform.
	    if (props == null) {
	      props = {};
	    } else if (typeof props === 'object') {
	      props = merge(props);
	    }

	    // Children can be more than one argument, and those are transferred onto
	    // the newly allocated props object.
	    var childrenLength = arguments.length - 1;
	    if (childrenLength === 1) {
	      props.children = children;
	    } else if (childrenLength > 1) {
	      var childArray = Array(childrenLength);
	      for (var i = 0; i < childrenLength; i++) {
	        childArray[i] = arguments[i + 1];
	      }
	      props.children = childArray;
	    }

	    // Initialize the descriptor object
	    var descriptor = Object.create(descriptorPrototype);

	    // Record the component responsible for creating this descriptor.
	    descriptor._owner = ReactCurrentOwner.current;

	    // TODO: Deprecate withContext, and then the context becomes accessible
	    // through the owner.
	    descriptor._context = ReactContext.current;

	    if ("production" !== process.env.NODE_ENV) {
	      // The validation flag and props are currently mutative. We put them on
	      // an external backing store so that we can freeze the whole object.
	      // This can be replaced with a WeakMap once they are implemented in
	      // commonly used development environments.
	      descriptor._store = { validated: false, props: props };

	      // We're not allowed to set props directly on the object so we early
	      // return and rely on the prototype membrane to forward to the backing
	      // store.
	      if (useMutationMembrane) {
	        Object.freeze(descriptor);
	        return descriptor;
	      }
	    }

	    descriptor.props = props;
	    return descriptor;
	  };

	  // Currently we expose the prototype of the descriptor so that
	  // <Foo /> instanceof Foo works. This is controversial pattern.
	  factory.prototype = descriptorPrototype;

	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on descriptors. E.g. <Foo />.type === Foo.type and for
	  // static methods like <Foo />.type.staticMethod();
	  // This should not be named constructor since this may not be the function
	  // that created the descriptor, and it may not even be a constructor.
	  factory.type = type;
	  descriptorPrototype.type = type;

	  proxyStaticMethods(factory, type);

	  // Expose a unique constructor on the prototype is that this works with type
	  // systems that compare constructor properties: <Foo />.constructor === Foo
	  // This may be controversial since it requires a known factory function.
	  descriptorPrototype.constructor = factory;

	  return factory;

	};

	ReactDescriptor.cloneAndReplaceProps = function(oldDescriptor, newProps) {
	  var newDescriptor = Object.create(oldDescriptor.constructor.prototype);
	  // It's important that this property order matches the hidden class of the
	  // original descriptor to maintain perf.
	  newDescriptor._owner = oldDescriptor._owner;
	  newDescriptor._context = oldDescriptor._context;

	  if ("production" !== process.env.NODE_ENV) {
	    newDescriptor._store = {
	      validated: oldDescriptor._store.validated,
	      props: newProps
	    };
	    if (useMutationMembrane) {
	      Object.freeze(newDescriptor);
	      return newDescriptor;
	    }
	  }

	  newDescriptor.props = newProps;
	  return newDescriptor;
	};

	/**
	 * Checks if a value is a valid descriptor constructor.
	 *
	 * @param {*}
	 * @return {boolean}
	 * @public
	 */
	ReactDescriptor.isValidFactory = function(factory) {
	  return typeof factory === 'function' &&
	         factory.prototype instanceof ReactDescriptor;
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactDescriptor.isValidDescriptor = function(object) {
	  return object instanceof ReactDescriptor;
	};

	module.exports = ReactDescriptor;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOM
	 * @typechecks static-only
	 */

	"use strict";

	var ReactDescriptor = __webpack_require__(49);
	var ReactDescriptorValidator = __webpack_require__(78);
	var ReactDOMComponent = __webpack_require__(51);

	var mergeInto = __webpack_require__(40);
	var mapObject = __webpack_require__(86);

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @param {boolean} omitClose True if the close tag should be omitted.
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMComponentClass(omitClose, tag) {
	  var Constructor = function(descriptor) {
	    this.construct(descriptor);
	  };
	  Constructor.prototype = new ReactDOMComponent(tag, omitClose);
	  Constructor.prototype.constructor = Constructor;
	  Constructor.displayName = tag;

	  var ConvenienceConstructor = ReactDescriptor.createFactory(Constructor);

	  if ("production" !== process.env.NODE_ENV) {
	    return ReactDescriptorValidator.createFactory(
	      ConvenienceConstructor
	    );
	  }

	  return ConvenienceConstructor;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOM = mapObject({
	  a: false,
	  abbr: false,
	  address: false,
	  area: true,
	  article: false,
	  aside: false,
	  audio: false,
	  b: false,
	  base: true,
	  bdi: false,
	  bdo: false,
	  big: false,
	  blockquote: false,
	  body: false,
	  br: true,
	  button: false,
	  canvas: false,
	  caption: false,
	  cite: false,
	  code: false,
	  col: true,
	  colgroup: false,
	  data: false,
	  datalist: false,
	  dd: false,
	  del: false,
	  details: false,
	  dfn: false,
	  dialog: false,
	  div: false,
	  dl: false,
	  dt: false,
	  em: false,
	  embed: true,
	  fieldset: false,
	  figcaption: false,
	  figure: false,
	  footer: false,
	  form: false, // NOTE: Injected, see `ReactDOMForm`.
	  h1: false,
	  h2: false,
	  h3: false,
	  h4: false,
	  h5: false,
	  h6: false,
	  head: false,
	  header: false,
	  hr: true,
	  html: false,
	  i: false,
	  iframe: false,
	  img: true,
	  input: true,
	  ins: false,
	  kbd: false,
	  keygen: true,
	  label: false,
	  legend: false,
	  li: false,
	  link: true,
	  main: false,
	  map: false,
	  mark: false,
	  menu: false,
	  menuitem: false, // NOTE: Close tag should be omitted, but causes problems.
	  meta: true,
	  meter: false,
	  nav: false,
	  noscript: false,
	  object: false,
	  ol: false,
	  optgroup: false,
	  option: false,
	  output: false,
	  p: false,
	  param: true,
	  picture: false,
	  pre: false,
	  progress: false,
	  q: false,
	  rp: false,
	  rt: false,
	  ruby: false,
	  s: false,
	  samp: false,
	  script: false,
	  section: false,
	  select: false,
	  small: false,
	  source: true,
	  span: false,
	  strong: false,
	  style: false,
	  sub: false,
	  summary: false,
	  sup: false,
	  table: false,
	  tbody: false,
	  td: false,
	  textarea: false, // NOTE: Injected, see `ReactDOMTextarea`.
	  tfoot: false,
	  th: false,
	  thead: false,
	  time: false,
	  title: false,
	  tr: false,
	  track: true,
	  u: false,
	  ul: false,
	  'var': false,
	  video: false,
	  wbr: true,

	  // SVG
	  circle: false,
	  defs: false,
	  ellipse: false,
	  g: false,
	  line: false,
	  linearGradient: false,
	  mask: false,
	  path: false,
	  pattern: false,
	  polygon: false,
	  polyline: false,
	  radialGradient: false,
	  rect: false,
	  stop: false,
	  svg: false,
	  text: false,
	  tspan: false
	}, createDOMComponentClass);

	var injection = {
	  injectComponentClasses: function(componentClasses) {
	    mergeInto(ReactDOM, componentClasses);
	  }
	};

	ReactDOM.injection = injection;

	module.exports = ReactDOM;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	"use strict";

	var CSSPropertyOperations = __webpack_require__(88);
	var DOMProperty = __webpack_require__(73);
	var DOMPropertyOperations = __webpack_require__(42);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactComponent = __webpack_require__(45);
	var ReactBrowserEventEmitter = __webpack_require__(90);
	var ReactMount = __webpack_require__(54);
	var ReactMultiChild = __webpack_require__(55);
	var ReactPerf = __webpack_require__(56);

	var escapeTextForBrowser = __webpack_require__(74);
	var invariant = __webpack_require__(38);
	var keyOf = __webpack_require__(68);
	var merge = __webpack_require__(39);
	var mixInto = __webpack_require__(84);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = {'string': true, 'number': true};

	var STYLE = keyOf({style: null});

	var ELEMENT_NODE_TYPE = 1;

	/**
	 * @param {?object} props
	 */
	function assertValidProps(props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  ("production" !== process.env.NODE_ENV ? invariant(
	    props.children == null || props.dangerouslySetInnerHTML == null,
	    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
	  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    props.style == null || typeof props.style === 'object',
	    'The `style` prop expects a mapping from style properties to values, ' +
	    'not a string.'
	  ) : invariant(props.style == null || typeof props.style === 'object'));
	}

	function putListener(id, registrationName, listener, transaction) {
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
	      container.ownerDocument :
	      container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getPutListenerQueue().enqueuePutListener(
	    id,
	    registrationName,
	    listener
	  );
	}


	/**
	 * @constructor ReactDOMComponent
	 * @extends ReactComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag, omitClose) {
	  this._tagOpen = '<' + tag;
	  this._tagClose = omitClose ? '' : '</' + tag + '>';
	  this.tagName = tag.toUpperCase();
	}

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {number} mountDepth number of components in the owner hierarchy
	   * @return {string} The computed markup.
	   */
	  mountComponent: ReactPerf.measure(
	    'ReactDOMComponent',
	    'mountComponent',
	    function(rootID, transaction, mountDepth) {
	      ReactComponent.Mixin.mountComponent.call(
	        this,
	        rootID,
	        transaction,
	        mountDepth
	      );
	      assertValidProps(this.props);
	      return (
	        this._createOpenTagMarkupAndPutListeners(transaction) +
	        this._createContentMarkup(transaction) +
	        this._tagClose
	      );
	    }
	  ),

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function(transaction) {
	    var props = this.props;
	    var ret = this._tagOpen;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, propValue, transaction);
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            propValue = props.style = merge(props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup =
	          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret + '>';
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID + '>';
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function(transaction) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = this.props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        return innerHTML.__html;
	      }
	    } else {
	      var contentToUse =
	        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
	      var childrenToUse = contentToUse != null ? null : this.props.children;
	      if (contentToUse != null) {
	        return escapeTextForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(
	          childrenToUse,
	          transaction
	        );
	        return mountImages.join('');
	      }
	    }
	    return '';
	  },

	  receiveComponent: function(nextDescriptor, transaction) {
	    if (nextDescriptor === this._descriptor &&
	        nextDescriptor._owner != null) {
	      // Since descriptors are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the descriptor. We explicitly check for the existence of an owner since
	      // it's possible for a descriptor created outside a composite to be
	      // deeply mutated and reused.
	      return;
	    }

	    ReactComponent.Mixin.receiveComponent.call(
	      this,
	      nextDescriptor,
	      transaction
	    );
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactDescriptor} prevDescriptor
	   * @internal
	   * @overridable
	   */
	  updateComponent: ReactPerf.measure(
	    'ReactDOMComponent',
	    'updateComponent',
	    function(transaction, prevDescriptor) {
	      assertValidProps(this._descriptor.props);
	      ReactComponent.Mixin.updateComponent.call(
	        this,
	        transaction,
	        prevDescriptor
	      );
	      this._updateDOMProperties(prevDescriptor.props, transaction);
	      this._updateDOMChildren(prevDescriptor.props, transaction);
	    }
	  ),

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMProperties: function(lastProps, transaction) {
	    var nextProps = this.props;
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) ||
	         !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = lastProps[propKey];
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        deleteListener(this._rootNodeID, propKey);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        ReactComponent.BackendIDOperations.deletePropertyByID(
	          this._rootNodeID,
	          propKey
	        );
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          nextProp = nextProps.style = merge(nextProp);
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) &&
	                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) &&
	                lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, nextProp, transaction);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        ReactComponent.BackendIDOperations.updatePropertyByID(
	          this._rootNodeID,
	          propKey,
	          nextProp
	        );
	      }
	    }
	    if (styleUpdates) {
	      ReactComponent.BackendIDOperations.updateStylesByID(
	        this._rootNodeID,
	        styleUpdates
	      );
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMChildren: function(lastProps, transaction) {
	    var nextProps = this.props;

	    var lastContent =
	      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent =
	      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml =
	      lastProps.dangerouslySetInnerHTML &&
	      lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml =
	      nextProps.dangerouslySetInnerHTML &&
	      nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        ReactComponent.BackendIDOperations.updateInnerHTMLByID(
	          this._rootNodeID,
	          nextHtml
	        );
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function() {
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponent.Mixin.unmountComponent.call(this);
	  }

	};

	mixInto(ReactDOMComponent, ReactComponent.Mixin);
	mixInto(ReactDOMComponent, ReactDOMComponent.Mixin);
	mixInto(ReactDOMComponent, ReactMultiChild.Mixin);
	mixInto(ReactDOMComponent, ReactBrowserComponentMixin);

	module.exports = ReactDOMComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	"use strict";

	var BeforeInputEventPlugin = __webpack_require__(91);
	var ChangeEventPlugin = __webpack_require__(92);
	var ClientReactRootIndex = __webpack_require__(93);
	var CompositionEventPlugin = __webpack_require__(94);
	var DefaultEventPluginOrder = __webpack_require__(95);
	var EnterLeaveEventPlugin = __webpack_require__(96);
	var ExecutionEnvironment = __webpack_require__(37);
	var HTMLDOMPropertyConfig = __webpack_require__(97);
	var MobileSafariClickEventPlugin = __webpack_require__(98);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(99);
	var ReactDefaultBatchingStrategy = __webpack_require__(100);
	var ReactDOM = __webpack_require__(50);
	var ReactDOMButton = __webpack_require__(101);
	var ReactDOMForm = __webpack_require__(102);
	var ReactDOMImg = __webpack_require__(103);
	var ReactDOMInput = __webpack_require__(104);
	var ReactDOMOption = __webpack_require__(105);
	var ReactDOMSelect = __webpack_require__(106);
	var ReactDOMTextarea = __webpack_require__(107);
	var ReactEventListener = __webpack_require__(108);
	var ReactInjection = __webpack_require__(109);
	var ReactInstanceHandles = __webpack_require__(53);
	var ReactMount = __webpack_require__(54);
	var SelectEventPlugin = __webpack_require__(110);
	var ServerReactRootIndex = __webpack_require__(111);
	var SimpleEventPlugin = __webpack_require__(112);
	var SVGDOMPropertyConfig = __webpack_require__(113);

	var createFullPageComponent = __webpack_require__(114);

	function inject() {
	  ReactInjection.EventEmitter.injectReactEventListener(
	    ReactEventListener
	  );

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    CompositionEventPlugin: CompositionEventPlugin,
	    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.DOM.injectComponentClasses({
	    button: ReactDOMButton,
	    form: ReactDOMForm,
	    img: ReactDOMImg,
	    input: ReactDOMInput,
	    option: ReactDOMOption,
	    select: ReactDOMSelect,
	    textarea: ReactDOMTextarea,

	    html: createFullPageComponent(ReactDOM.html),
	    head: createFullPageComponent(ReactDOM.head),
	    body: createFullPageComponent(ReactDOM.body)
	  });

	  // This needs to happen after createFullPageComponent() otherwise the mixin
	  // gets double injected.
	  ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent(ReactDOM.noscript);

	  ReactInjection.Updates.injectReconcileTransaction(
	    ReactComponentBrowserEnvironment.ReactReconcileTransaction
	  );
	  ReactInjection.Updates.injectBatchingStrategy(
	    ReactDefaultBatchingStrategy
	  );

	  ReactInjection.RootIndex.injectCreateReactRootIndex(
	    ExecutionEnvironment.canUseDOM ?
	      ClientReactRootIndex.createReactRootIndex :
	      ServerReactRootIndex.createReactRootIndex
	  );

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if ("production" !== process.env.NODE_ENV) {
	    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
	    if ((/[?&]react_perf\b/).test(url)) {
	      var ReactDefaultPerf = __webpack_require__(115);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	"use strict";

	var ReactRootIndex = __webpack_require__(118);

	var invariant = __webpack_require__(38);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 100;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || (
	    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
	  );
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return (
	    descendantID.indexOf(ancestorID) === 0 &&
	    isBoundary(descendantID, ancestorID.length)
	  );
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(ancestorID) && isValidID(destinationID),
	    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
	    ancestorID,
	    destinationID
	  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isAncestorIDOf(ancestorID, destinationID),
	    'getNextDescendantID(...): React has made an invalid assumption about ' +
	    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
	    ancestorID,
	    destinationID
	  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  for (var i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(longestCommonID),
	    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
	    oneID,
	    twoID,
	    longestCommonID
	  ) : invariant(isValidID(longestCommonID)));
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  ("production" !== process.env.NODE_ENV ? invariant(
	    start !== stop,
	    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
	    start
	  ) : invariant(start !== stop));
	  var traverseUp = isAncestorIDOf(stop, start);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    traverseUp || isAncestorIDOf(start, stop),
	    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
	    'not have a parent path.',
	    start,
	    stop
	  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start; /* until break */; id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      depth++ < MAX_TREE_DEPTH,
	      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
	      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
	      start, stop
	    ) : invariant(depth++ < MAX_TREE_DEPTH));
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function() {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function(rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function(id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function(targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactMount
	 */

	"use strict";

	var DOMProperty = __webpack_require__(73);
	var ReactBrowserEventEmitter = __webpack_require__(90);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactDescriptor = __webpack_require__(49);
	var ReactInstanceHandles = __webpack_require__(53);
	var ReactPerf = __webpack_require__(56);

	var containsNode = __webpack_require__(116);
	var getReactRootElementInContainer = __webpack_require__(117);
	var instantiateReactComponent = __webpack_require__(83);
	var invariant = __webpack_require__(38);
	var shouldUpdateReactComponent = __webpack_require__(87);
	var warning = __webpack_require__(61);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if ("production" !== process.env.NODE_ENV) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !isValid(cached, id),
	          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
	          ATTR_NAME, id
	        ) : invariant(!isValid(cached, id)));

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalGetID(node) === id,
	      'ReactMount: Unexpected modification of `%s`',
	      ATTR_NAME
	    ) : invariant(internalGetID(node) === id));

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(
	    targetID,
	    findDeepestCachedAncestorImpl
	  );

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounting is the process of initializing a React component by creatings its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.renderComponent(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function(
	      prevComponent,
	      nextComponent,
	      container,
	      callback) {
	    var nextProps = nextComponent.props;
	    ReactMount.scrollMonitor(container, function() {
	      prevComponent.replaceProps(nextProps, callback);
	    });

	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] =
	        getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function(nextComponent, container) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        container.nodeType === ELEMENT_NODE_TYPE ||
	        container.nodeType === DOC_NODE_TYPE
	      ),
	      '_registerComponent(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      container.nodeType === ELEMENT_NODE_TYPE ||
	      container.nodeType === DOC_NODE_TYPE
	    )));

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: ReactPerf.measure(
	    'ReactMount',
	    '_renderNewRootComponent',
	    function(
	        nextComponent,
	        container,
	        shouldReuseMarkup) {
	      // Various parts of our code (such as ReactCompositeComponent's
	      // _renderValidatedComponent) assume that calls to render aren't nested;
	      // verify that that's the case.
	      ("production" !== process.env.NODE_ENV ? warning(
	        ReactCurrentOwner.current == null,
	        '_renderNewRootComponent(): Render methods should be a pure function ' +
	        'of props and state; triggering nested component updates from ' +
	        'render is not allowed. If necessary, trigger nested updates in ' +
	        'componentDidUpdate.'
	      ) : null);

	      var componentInstance = instantiateReactComponent(nextComponent);
	      var reactRootID = ReactMount._registerComponent(
	        componentInstance,
	        container
	      );
	      componentInstance.mountComponentIntoNode(
	        reactRootID,
	        container,
	        shouldReuseMarkup
	      );

	      if ("production" !== process.env.NODE_ENV) {
	        // Record the root element in case it later gets transplanted.
	        rootElementsByReactRootID[reactRootID] =
	          getReactRootElementInContainer(container);
	      }

	      return componentInstance;
	    }
	  ),

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactDescriptor} nextDescriptor Component descriptor to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderComponent: function(nextDescriptor, container, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactDescriptor.isValidDescriptor(nextDescriptor),
	      'renderComponent(): Invalid component descriptor.%s',
	      (
	        ReactDescriptor.isValidFactory(nextDescriptor) ?
	          ' Instead of passing a component class, make sure to instantiate ' +
	          'it first by calling it with props.' :
	        // Check if it quacks like a descriptor
	        typeof nextDescriptor.props !== "undefined" ?
	          ' This may be caused by unintentionally loading two independent ' +
	          'copies of React.' :
	          ''
	      )
	    ) : invariant(ReactDescriptor.isValidDescriptor(nextDescriptor)));

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevDescriptor = prevComponent._descriptor;
	      if (shouldUpdateReactComponent(prevDescriptor, nextDescriptor)) {
	        return ReactMount._updateRootComponent(
	          prevComponent,
	          nextDescriptor,
	          container,
	          callback
	        );
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup =
	      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

	    var component = ReactMount._renderNewRootComponent(
	      nextDescriptor,
	      container,
	      shouldReuseMarkup
	    );
	    callback && callback.call(component);
	    return component;
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into the supplied `container`.
	   *
	   * @param {function} constructor React component constructor.
	   * @param {?object} props Initial props of the component instance.
	   * @param {DOMElement} container DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  constructAndRenderComponent: function(constructor, props, container) {
	    return ReactMount.renderComponent(constructor(props), container);
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into a container node identified by supplied `id`.
	   *
	   * @param {function} componentConstructor React component constructor
	   * @param {?object} props Initial props of the component instance.
	   * @param {string} id ID of the DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in the container node.
	   */
	  constructAndRenderComponentByID: function(constructor, props, id) {
	    var domNode = document.getElementById(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      domNode,
	      'Tried to get element with id of "%s" but it is not present on the page.',
	      id
	    ) : invariant(domNode));
	    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function(container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      'unmountComponentAtNode(): Render methods should be a pure function of ' +
	      'props and state; triggering nested component updates from render is ' +
	      'not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      return false;
	    }
	    ReactMount.unmountComponentFromNode(component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if ("production" !== process.env.NODE_ENV) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Unmounts a component and removes it from the DOM.
	   *
	   * @param {ReactComponent} instance React component instance.
	   * @param {DOMElement} container DOM element to unmount from.
	   * @final
	   * @internal
	   * @see {ReactMount.unmountComponentAtNode}
	   */
	  unmountComponentFromNode: function(instance, container) {
	    instance.unmountComponent();

	    if (container.nodeType === DOC_NODE_TYPE) {
	      container = container.documentElement;
	    }

	    // http://jsperf.com/emptying-a-node
	    while (container.lastChild) {
	      container.removeChild(container.lastChild);
	    }
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function(id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if ("production" !== process.env.NODE_ENV) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          // Call internalGetID here because getID calls isValid which calls
	          // findReactContainerForID (this function).
	          internalGetID(rootElement) === reactRootID,
	          'ReactMount: Root element ID differed from reactRootID.'
	        ) : invariant(// Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID));

	        var containerChild = container.firstChild;
	        if (containerChild &&
	            reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          console.warn(
	            'ReactMount: Root element has been removed from its original ' +
	            'container. New container:', rootElement.parentNode
	          );
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function(id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * True if the supplied `node` is rendered by React.
	   *
	   * @param {*} node DOM Element to check.
	   * @return {boolean} True if the DOM Element appears to be rendered by React.
	   * @internal
	   */
	  isRenderedByReact: function(node) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      return false;
	    }
	    var id = ReactMount.getID(node);
	    return id ? id.charAt(0) === SEPARATOR : false;
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function(node) {
	    var current = node;
	    while (current && current.parentNode !== current) {
	      if (ReactMount.isRenderedByReact(current)) {
	        return current;
	      }
	      current = current.parentNode;
	    }
	    return null;
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function(ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }

	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'findComponentRoot(..., %s): Unable to find element. This probably ' +
	      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
	      'usually due to forgetting a <tbody> when using tables, nesting <p> ' +
	      'or <a> tags, or using non-SVG elements in an <svg> parent. Try ' +
	      'inspecting the child nodes of the element with React ID `%s`.',
	      targetID,
	      ReactMount.getID(ancestorNode)
	    ) : invariant(false));
	  },


	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  purgeID: purgeID
	};

	module.exports = ReactMount;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	"use strict";

	var ReactComponent = __webpack_require__(45);
	var ReactMultiChildUpdateTypes = __webpack_require__(119);

	var flattenChildren = __webpack_require__(120);
	var instantiateReactComponent = __webpack_require__(83);
	var shouldUpdateReactComponent = __webpack_require__(87);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    textContent: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    textContent: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(
	      updateQueue,
	      markupQueue
	    );
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function(nestedChildren, transaction) {
	      var children = flattenChildren(nestedChildren);
	      var mountImages = [];
	      var index = 0;
	      this._renderedChildren = children;
	      for (var name in children) {
	        var child = children[name];
	        if (children.hasOwnProperty(name)) {
	          // The rendered children must be turned into instances as they're
	          // mounted.
	          var childInstance = instantiateReactComponent(child);
	          children[name] = childInstance;
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = childInstance.mountComponent(
	            rootID,
	            transaction,
	            this._mountDepth + 1
	          );
	          childInstance._mountIndex = index;
	          mountImages.push(mountImage);
	          index++;
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function(nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          errorThrown ? clearQueue() : processQueue();
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function(nextNestedChildren, transaction) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildren, transaction);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          errorThrown ? clearQueue() : processQueue();
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function(nextNestedChildren, transaction) {
	      var nextChildren = flattenChildren(nextNestedChildren);
	      var prevChildren = this._renderedChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var prevDescriptor = prevChild && prevChild._descriptor;
	        var nextDescriptor = nextChildren[name];
	        if (shouldUpdateReactComponent(prevDescriptor, nextDescriptor)) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild.receiveComponent(nextDescriptor, transaction);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChildByName(prevChild, name);
	          }
	          // The child must be instantiated before it's mounted.
	          var nextChildInstance = instantiateReactComponent(nextDescriptor);
	          this._mountChildByNameAtIndex(
	            nextChildInstance, name, nextIndex, transaction
	          );
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) &&
	            !(nextChildren && nextChildren[name])) {
	          this._unmountChildByName(prevChildren[name], name);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function() {
	      var renderedChildren = this._renderedChildren;
	      for (var name in renderedChildren) {
	        var renderedChild = renderedChildren[name];
	        // TODO: When is this not true?
	        if (renderedChild.unmountComponent) {
	          renderedChild.unmountComponent();
	        }
	      }
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function(child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function(child, mountImage) {
	      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function(child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function(textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function(child, name, index, transaction) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = child.mountComponent(
	        rootID,
	        transaction,
	        this._mountDepth + 1
	      );
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	      this._renderedChildren = this._renderedChildren || {};
	      this._renderedChildren[name] = child;
	    },

	    /**
	     * Unmounts a rendered child by name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @param {string} name Name of the child in `this._renderedChildren`.
	     * @private
	     */
	    _unmountChildByName: function(child, name) {
	      this.removeChild(child);
	      child._mountIndex = null;
	      child.unmountComponent();
	      delete this._renderedChildren[name];
	    }

	  }

	};

	module.exports = ReactMultiChild;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function(objName, fnName, func) {
	    if ("production" !== process.env.NODE_ENV) {
	      var measuredFunc = null;
	      return function() {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function(measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPropTypes
	 */

	"use strict";

	var ReactDescriptor = __webpack_require__(49);
	var ReactPropTypeLocationNames = __webpack_require__(82);

	var emptyFunction = __webpack_require__(62);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  component: createComponentTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  renderable: createRenderableTypeChecker(),
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location) {
	    componentName = componentName || ANONYMOUS;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error(
	          ("Required " + locationName + " `" + propName + "` was not specified in ")+
	          ("`" + componentName + "`.")
	        );
	      }
	    } else {
	      return validate(props, propName, componentName, location);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
	        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
	      );
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns());
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
	      );
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createComponentTypeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!ReactDescriptor.isValidDescriptor(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a React component.")
	      );
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
	      );
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
	      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
	      );
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  function validate(props, propName, componentName, location) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location) == null) {
	        return;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	      ("`" + componentName + "`.")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createRenderableTypeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!isRenderable(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a renderable prop.")
	      );
	    }
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
	        ("supplied to `" + componentName + "`, expected `object`.")
	      );
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location);
	      if (error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate, 'expected `object`');
	}

	function isRenderable(propValue) {
	  switch(typeof propValue) {
	    // TODO: this was probably written with the assumption that we're not
	    // returning `this.props.component` directly from `render`. This is
	    // currently not supported but we should, to make it consistent.
	    case 'number':
	    case 'string':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isRenderable);
	      }
	      if (ReactDescriptor.isValidDescriptor(propValue)) {
	        return true;
	      }
	      for (var k in propValue) {
	        if (!isRenderable(propValue[k])) {
	          return false;
	        }
	      }
	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	module.exports = ReactPropTypes;


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	"use strict";

	var ReactDescriptor = __webpack_require__(49);
	var ReactInstanceHandles = __webpack_require__(53);
	var ReactMarkupChecksum = __webpack_require__(121);
	var ReactServerRenderingTransaction =
	  __webpack_require__(122);

	var instantiateReactComponent = __webpack_require__(83);
	var invariant = __webpack_require__(38);

	/**
	 * @param {ReactComponent} component
	 * @return {string} the HTML markup
	 */
	function renderComponentToString(component) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactDescriptor.isValidDescriptor(component),
	    'renderComponentToString(): You must pass a valid ReactComponent.'
	  ) : invariant(ReactDescriptor.isValidDescriptor(component)));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    !(arguments.length === 2 && typeof arguments[1] === 'function'),
	    'renderComponentToString(): This function became synchronous and now ' +
	    'returns the generated markup. Please remove the second parameter.'
	  ) : invariant(!(arguments.length === 2 && typeof arguments[1] === 'function')));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(component);
	      var markup = componentInstance.mountComponent(id, transaction, 0);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	/**
	 * @param {ReactComponent} component
	 * @return {string} the HTML markup, without the extra React ID and checksum
	* (for generating static pages)
	 */
	function renderComponentToStaticMarkup(component) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactDescriptor.isValidDescriptor(component),
	    'renderComponentToStaticMarkup(): You must pass a valid ReactComponent.'
	  ) : invariant(ReactDescriptor.isValidDescriptor(component)));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(component);
	      return componentInstance.mountComponent(id, transaction, 0);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	module.exports = {
	  renderComponentToString: renderComponentToString,
	  renderComponentToStaticMarkup: renderComponentToStaticMarkup
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactTextComponent
	 * @typechecks static-only
	 */

	"use strict";

	var DOMPropertyOperations = __webpack_require__(42);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactComponent = __webpack_require__(45);
	var ReactDescriptor = __webpack_require__(49);

	var escapeTextForBrowser = __webpack_require__(74);
	var mixInto = __webpack_require__(84);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactTextComponent = function(descriptor) {
	  this.construct(descriptor);
	};

	mixInto(ReactTextComponent, ReactComponent.Mixin);
	mixInto(ReactTextComponent, ReactBrowserComponentMixin);
	mixInto(ReactTextComponent, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {number} mountDepth number of components in the owner hierarchy
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, mountDepth) {
	    ReactComponent.Mixin.mountComponent.call(
	      this,
	      rootID,
	      transaction,
	      mountDepth
	    );

	    var escapedText = escapeTextForBrowser(this.props);

	    if (transaction.renderToStaticMarkup) {
	      // Normally we'd wrap this in a `span` for the reasons stated above, but
	      // since this is a situation where React won't take over (static pages),
	      // we can simply return the text as it is.
	      return escapedText;
	    }

	    return (
	      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
	        escapedText +
	      '</span>'
	    );
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {object} nextComponent Contains the next text content.
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function(nextComponent, transaction) {
	    var nextProps = nextComponent.props;
	    if (nextProps !== this.props) {
	      this.props = nextProps;
	      ReactComponent.BackendIDOperations.updateTextContentByID(
	        this._rootNodeID,
	        nextProps
	      );
	    }
	  }

	});

	module.exports = ReactDescriptor.createFactory(ReactTextComponent);


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule onlyChild
	 */
	"use strict";

	var ReactDescriptor = __webpack_require__(49);

	var invariant = __webpack_require__(38);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactDescriptor.isValidDescriptor(children),
	    'onlyChild must be passed a children with exactly one child.'
	  ) : invariant(ReactDescriptor.isValidDescriptor(children)));
	  return children;
	}

	module.exports = onlyChild;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule warning
	 */

	"use strict";

	var emptyFunction = __webpack_require__(62);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if ("production" !== process.env.NODE_ENV) {
	  warning = function(condition, format ) {var args=Array.prototype.slice.call(arguments,2);
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
	    }
	  };
	}

	module.exports = warning;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule emptyFunction
	 */

	var copyProperties = __webpack_require__(123);

	function makeEmptyFunction(arg) {
	  return function() {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	copyProperties(emptyFunction, {
	  thatReturns: makeEmptyFunction,
	  thatReturnsFalse: makeEmptyFunction(false),
	  thatReturnsTrue: makeEmptyFunction(true),
	  thatReturnsNull: makeEmptyFunction(null),
	  thatReturnsThis: function() { return this; },
	  thatReturnsArgument: function(arg) { return arg; }
	});

	module.exports = emptyFunction;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactUpdates
	 */

	"use strict";

	var CallbackQueue = __webpack_require__(124);
	var PooledClass = __webpack_require__(71);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactPerf = __webpack_require__(56);
	var Transaction = __webpack_require__(125);

	var invariant = __webpack_require__(38);
	var mixInto = __webpack_require__(84);
	var warning = __webpack_require__(61);

	var dirtyComponents = [];

	var batchingStrategy = null;

	function ensureInjected() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
	    'ReactUpdates: must inject a reconcile transaction class and batching ' +
	    'strategy'
	  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
	}

	var NESTED_UPDATES = {
	  initialize: function() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function() {
	    this.callbackQueue.reset();
	  },
	  close: function() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled(null);
	  this.reconcileTransaction =
	    ReactUpdates.ReactReconcileTransaction.getPooled();
	}

	mixInto(ReactUpdatesFlushTransaction, Transaction.Mixin);
	mixInto(ReactUpdatesFlushTransaction, {
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(
	      this,
	      this.reconcileTransaction.perform,
	      this.reconcileTransaction,
	      method,
	      scope,
	      a
	    );
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b);
	}

	/**
	 * Array comparator for ReactComponents by owner depth
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountDepthComparator(c1, c2) {
	  return c1._mountDepth - c2._mountDepth;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    len === dirtyComponents.length,
	    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
	    'match dirty-components array length (%s).',
	    len,
	    dirtyComponents.length
	  ) : invariant(len === dirtyComponents.length));

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountDepthComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, ignore them
	    // TODO: Queue unmounts in the same list to avoid this happening at all
	    var component = dirtyComponents[i];
	    if (component.isMounted()) {
	      // If performUpdateIfNecessary happens to enqueue any new updates, we
	      // shouldn't execute the callbacks until the next render happens, so
	      // stash the callbacks first
	      var callbacks = component._pendingCallbacks;
	      component._pendingCallbacks = null;
	      component.performUpdateIfNecessary(transaction.reconcileTransaction);

	      if (callbacks) {
	        for (var j = 0; j < callbacks.length; j++) {
	          transaction.callbackQueue.enqueue(
	            callbacks[j],
	            component
	          );
	        }
	      }
	    }
	  }
	}

	var flushBatchedUpdates = ReactPerf.measure(
	  'ReactUpdates',
	  'flushBatchedUpdates',
	  function() {
	    // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	    // array and perform any updates enqueued by mount-ready handlers (i.e.,
	    // componentDidUpdate) but we need to check here too in order to catch
	    // updates enqueued by setState callbacks.
	    while (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	  }
	);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component, callback) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !callback || typeof callback === "function",
	    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
	    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	    'isn\'t callable.'
	  ) : invariant(!callback || typeof callback === "function"));
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	  ("production" !== process.env.NODE_ENV ? warning(
	    ReactCurrentOwner.current == null,
	    'enqueueUpdate(): Render methods should be a pure function of props ' +
	    'and state; triggering nested component updates from render is not ' +
	    'allowed. If necessary, trigger nested updates in ' +
	    'componentDidUpdate.'
	  ) : null);

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
	    return;
	  }

	  dirtyComponents.push(component);

	  if (callback) {
	    if (component._pendingCallbacks) {
	      component._pendingCallbacks.push(callback);
	    } else {
	      component._pendingCallbacks = [callback];
	    }
	  }
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function(ReconcileTransaction) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReconcileTransaction,
	      'ReactUpdates: must provide a reconcile transaction class'
	    ) : invariant(ReconcileTransaction));
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function(_batchingStrategy) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      _batchingStrategy,
	      'ReactUpdates: must provide a batching strategy'
	    ) : invariant(_batchingStrategy));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.batchedUpdates === 'function',
	      'ReactUpdates: must provide a batchedUpdates() function'
	    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
	      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
	    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection
	};

	module.exports = ReactUpdates;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// shim for using process in browser

	var process = module.exports = {};

	process.nextTick = (function () {
	    var canSetImmediate = typeof window !== 'undefined'
	    && window.setImmediate;
	    var canPost = typeof window !== 'undefined'
	    && window.postMessage && window.addEventListener
	    ;

	    if (canSetImmediate) {
	        return function (f) { return window.setImmediate(f) };
	    }

	    if (canPost) {
	        var queue = [];
	        window.addEventListener('message', function (ev) {
	            var source = ev.source;
	            if ((source === window || source === null) && ev.data === 'process-tick') {
	                ev.stopPropagation();
	                if (queue.length > 0) {
	                    var fn = queue.shift();
	                    fn();
	                }
	            }
	        }, true);

	        return function nextTick(fn) {
	            queue.push(fn);
	            window.postMessage('process-tick', '*');
	        };
	    }

	    return function nextTick(fn) {
	        setTimeout(fn, 0);
	    };
	})();

	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	}

	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	/**
	 * Check if a component is an async component.
	 *
	 * @param {ReactComponent} component
	 */
	function isAsyncComponent(component) {
	  return typeof component.constructor.type.prototype.getInitialStateAsync === 'function';
	}

	module.exports = isAsyncComponent;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var invariant         = __webpack_require__(38);
	var cloneWithProps    = __webpack_require__(41);
	var isAsyncComponent  = __webpack_require__(65);

	/**
	 * Prefetch an async state for an unmounted async component instance.
	 *
	 * @param {ReactComponent} component
	 * @param {Callback} cb
	 */
	function prefetchAsyncState(component, cb) {

	  invariant(
	    isAsyncComponent(component),
	    "%s should be an async component to be able to prefetch async state, " +
	    "but getInitialStateAsync(cb) method is missing or is not a function",
	    component.displayName
	  );

	  var cloneCallback = function(err, asyncState) {
	    if (err) {
	      return cb(err);
	    }

	    cb(null, cloneWithProps(component, {asyncState: asyncState || {}}));
	  };
	  var getInitialStateAsync = component.constructor.type.prototype.getInitialStateAsync;
	  var promise = getInitialStateAsync.call(component, cloneCallback);

	  if (promise && typeof promise.then === 'function') {
	    promise.then(cloneCallback.bind(cloneCallback, null), cloneCallback);
	  }
	}

	module.exports = prefetchAsyncState;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPropTransferer
	 */

	"use strict";

	var emptyFunction = __webpack_require__(62);
	var invariant = __webpack_require__(38);
	var joinClasses = __webpack_require__(126);
	var merge = __webpack_require__(39);

	/**
	 * Creates a transfer strategy that will merge prop values using the supplied
	 * `mergeStrategy`. If a prop was previously unset, this just sets it.
	 *
	 * @param {function} mergeStrategy
	 * @return {function}
	 */
	function createTransferStrategy(mergeStrategy) {
	  return function(props, key, value) {
	    if (!props.hasOwnProperty(key)) {
	      props[key] = value;
	    } else {
	      props[key] = mergeStrategy(props[key], value);
	    }
	  };
	}

	var transferStrategyMerge = createTransferStrategy(function(a, b) {
	  // `merge` overrides the first object's (`props[key]` above) keys using the
	  // second object's (`value`) keys. An object's style's existing `propA` would
	  // get overridden. Flip the order here.
	  return merge(b, a);
	});

	/**
	 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
	 * NOTE: if you add any more exceptions to this list you should be sure to
	 * update `cloneWithProps()` accordingly.
	 */
	var TransferStrategies = {
	  /**
	   * Never transfer `children`.
	   */
	  children: emptyFunction,
	  /**
	   * Transfer the `className` prop by merging them.
	   */
	  className: createTransferStrategy(joinClasses),
	  /**
	   * Never transfer the `key` prop.
	   */
	  key: emptyFunction,
	  /**
	   * Never transfer the `ref` prop.
	   */
	  ref: emptyFunction,
	  /**
	   * Transfer the `style` prop (which is an object) by merging them.
	   */
	  style: transferStrategyMerge
	};

	/**
	 * Mutates the first argument by transferring the properties from the second
	 * argument.
	 *
	 * @param {object} props
	 * @param {object} newProps
	 * @return {object}
	 */
	function transferInto(props, newProps) {
	  for (var thisKey in newProps) {
	    if (!newProps.hasOwnProperty(thisKey)) {
	      continue;
	    }

	    var transferStrategy = TransferStrategies[thisKey];

	    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
	      transferStrategy(props, thisKey, newProps[thisKey]);
	    } else if (!props.hasOwnProperty(thisKey)) {
	      props[thisKey] = newProps[thisKey];
	    }
	  }
	  return props;
	}

	/**
	 * ReactPropTransferer are capable of transferring props to another component
	 * using a `transferPropsTo` method.
	 *
	 * @class ReactPropTransferer
	 */
	var ReactPropTransferer = {

	  TransferStrategies: TransferStrategies,

	  /**
	   * Merge two props objects using TransferStrategies.
	   *
	   * @param {object} oldProps original props (they take precedence)
	   * @param {object} newProps new props to merge in
	   * @return {object} a new object containing both sets of props merged.
	   */
	  mergeProps: function(oldProps, newProps) {
	    return transferInto(merge(oldProps), newProps);
	  },

	  /**
	   * @lends {ReactPropTransferer.prototype}
	   */
	  Mixin: {

	    /**
	     * Transfer props from this component to a target component.
	     *
	     * Props that do not have an explicit transfer strategy will be transferred
	     * only if the target component does not already have the prop set.
	     *
	     * This is usually used to pass down props to a returned root component.
	     *
	     * @param {ReactDescriptor} descriptor Component receiving the properties.
	     * @return {ReactDescriptor} The supplied `component`.
	     * @final
	     * @protected
	     */
	    transferPropsTo: function(descriptor) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        descriptor._owner === this,
	        '%s: You can\'t call transferPropsTo() on a component that you ' +
	        'don\'t own, %s. This usually means you are calling ' +
	        'transferPropsTo() on a component passed in as props or children.',
	        this.constructor.displayName,
	        descriptor.type.displayName
	      ) : invariant(descriptor._owner === this));

	      // Because descriptors are immutable we have to merge into the existing
	      // props object rather than clone it.
	      transferInto(descriptor.props, this.props);

	      return descriptor;
	    }

	  }
	};

	module.exports = ReactPropTransferer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without loosing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};


	module.exports = keyOf;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mergeHelpers
	 *
	 * requiresPolyfills: Array.isArray
	 */

	"use strict";

	var invariant = __webpack_require__(38);
	var keyMirror = __webpack_require__(77);

	/**
	 * Maximum number of levels to traverse. Will catch circular structures.
	 * @const
	 */
	var MAX_MERGE_DEPTH = 36;

	/**
	 * We won't worry about edge cases like new String('x') or new Boolean(true).
	 * Functions are considered terminals, and arrays are not.
	 * @param {*} o The item/object/value to test.
	 * @return {boolean} true iff the argument is a terminal.
	 */
	var isTerminal = function(o) {
	  return typeof o !== 'object' || o === null;
	};

	var mergeHelpers = {

	  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

	  isTerminal: isTerminal,

	  /**
	   * Converts null/undefined values into empty object.
	   *
	   * @param {?Object=} arg Argument to be normalized (nullable optional)
	   * @return {!Object}
	   */
	  normalizeMergeArg: function(arg) {
	    return arg === undefined || arg === null ? {} : arg;
	  },

	  /**
	   * If merging Arrays, a merge strategy *must* be supplied. If not, it is
	   * likely the caller's fault. If this function is ever called with anything
	   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.
	   *
	   * @param {*} one Array to merge into.
	   * @param {*} two Array to merge from.
	   */
	  checkMergeArrayArgs: function(one, two) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      Array.isArray(one) && Array.isArray(two),
	      'Tried to merge arrays, instead got %s and %s.',
	      one,
	      two
	    ) : invariant(Array.isArray(one) && Array.isArray(two)));
	  },

	  /**
	   * @param {*} one Object to merge into.
	   * @param {*} two Object to merge from.
	   */
	  checkMergeObjectArgs: function(one, two) {
	    mergeHelpers.checkMergeObjectArg(one);
	    mergeHelpers.checkMergeObjectArg(two);
	  },

	  /**
	   * @param {*} arg
	   */
	  checkMergeObjectArg: function(arg) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isTerminal(arg) && !Array.isArray(arg),
	      'Tried to merge an object, instead got %s.',
	      arg
	    ) : invariant(!isTerminal(arg) && !Array.isArray(arg)));
	  },

	  /**
	   * @param {*} arg
	   */
	  checkMergeIntoObjectArg: function(arg) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      (!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
	      'Tried to merge into an object, instead got %s.',
	      arg
	    ) : invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg)));
	  },

	  /**
	   * Checks that a merge was not given a circular object or an object that had
	   * too great of depth.
	   *
	   * @param {number} Level of recursion to validate against maximum.
	   */
	  checkMergeLevel: function(level) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      level < MAX_MERGE_DEPTH,
	      'Maximum deep merge depth exceeded. You may be attempting to merge ' +
	      'circular structures in an unsupported way.'
	    ) : invariant(level < MAX_MERGE_DEPTH));
	  },

	  /**
	   * Checks that the supplied merge strategy is valid.
	   *
	   * @param {string} Array merge strategy.
	   */
	  checkArrayStrategy: function(strategy) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
	      'You must provide an array strategy to deep merge functions to ' +
	      'instruct the deep merge how to resolve merging two arrays.'
	    ) : invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies));
	  },

	  /**
	   * Set of possible behaviors of merge algorithms when encountering two Arrays
	   * that must be merged together.
	   * - `clobber`: The left `Array` is ignored.
	   * - `indexByIndex`: The result is achieved by recursively deep merging at
	   *   each index. (not yet supported.)
	   */
	  ArrayStrategies: keyMirror({
	    Clobber: true,
	    IndexByIndex: true
	  })

	};

	module.exports = mergeHelpers;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventConstants
	 */

	"use strict";

	var keyMirror = __webpack_require__(77);

	var PropagationPhases = keyMirror({bubbled: null, captured: null});

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topBlur: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topReset: null,
	  topScroll: null,
	  topSelectionChange: null,
	  topSubmit: null,
	  topTextInput: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule PooledClass
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function(instance) {
	  var Klass = this;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    instance instanceof Klass,
	    'Trying to release an instance into a pool of a different type.'
	  ) : invariant(instance instanceof Klass));
	  if (instance.destructor) {
	    instance.destructor();
	  }
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule traverseAllChildren
	 */

	"use strict";

	var ReactInstanceHandles = __webpack_require__(53);
	var ReactTextComponent = __webpack_require__(59);

	var invariant = __webpack_require__(38);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that:
	 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
	 * 2. it('should fail when supplied duplicate key', function() {
	 * 3. That a single child and an array with one item have the same key pattern.
	 * });
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.props && component.props.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.props.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} key Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(
	    userProvidedKeyEscapeRegex,
	    userProvidedKeyEscaper
	  );
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!number} indexSoFar Number of children encountered until this point.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	var traverseAllChildrenImpl =
	  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
	    var subtreeCount = 0;  // Count of children found in the current subtree.
	    if (Array.isArray(children)) {
	      for (var i = 0; i < children.length; i++) {
	        var child = children[i];
	        var nextName = (
	          nameSoFar +
	          (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
	          getComponentKey(child, i)
	        );
	        var nextIndex = indexSoFar + subtreeCount;
	        subtreeCount += traverseAllChildrenImpl(
	          child,
	          nextName,
	          nextIndex,
	          callback,
	          traverseContext
	        );
	      }
	    } else {
	      var type = typeof children;
	      var isOnlyChild = nameSoFar === '';
	      // If it's the only child, treat the name as if it was wrapped in an array
	      // so that it's consistent if the number of children grows
	      var storageName =
	        isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
	      if (children == null || type === 'boolean') {
	        // All of the above are perceived as null.
	        callback(traverseContext, null, storageName, indexSoFar);
	        subtreeCount = 1;
	      } else if (children.type && children.type.prototype &&
	                 children.type.prototype.mountComponentIntoNode) {
	        callback(traverseContext, children, storageName, indexSoFar);
	        subtreeCount = 1;
	      } else {
	        if (type === 'object') {
	          ("production" !== process.env.NODE_ENV ? invariant(
	            !children || children.nodeType !== 1,
	            'traverseAllChildren(...): Encountered an invalid child; DOM ' +
	            'elements are not valid children of React components.'
	          ) : invariant(!children || children.nodeType !== 1));
	          for (var key in children) {
	            if (children.hasOwnProperty(key)) {
	              subtreeCount += traverseAllChildrenImpl(
	                children[key],
	                (
	                  nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
	                  wrapUserProvidedKey(key) + SUBSEPARATOR +
	                  getComponentKey(children[key], 0)
	                ),
	                indexSoFar + subtreeCount,
	                callback,
	                traverseContext
	              );
	            }
	          }
	        } else if (type === 'string') {
	          var normalizedText = ReactTextComponent(children);
	          callback(traverseContext, normalizedText, storageName, indexSoFar);
	          subtreeCount += 1;
	        } else if (type === 'number') {
	          var normalizedNumber = ReactTextComponent('' + children);
	          callback(traverseContext, normalizedNumber, storageName, indexSoFar);
	          subtreeCount += 1;
	        }
	      }
	    }
	    return subtreeCount;
	  };

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	/*jslint bitwise: true */

	"use strict";

	var invariant = __webpack_require__(38);

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function(domPropertyConfig) {
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(
	        domPropertyConfig.isCustomAttribute
	      );
	    }

	    for (var propName in Properties) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.isStandardName.hasOwnProperty(propName),
	        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
	        '\'%s\' which has already been injected. You may be accidentally ' +
	        'injecting the same DOM property config twice, or you may be ' +
	        'injecting two configs that have conflicting property names.',
	        propName
	      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

	      DOMProperty.isStandardName[propName] = true;

	      var lowerCased = propName.toLowerCase();
	      DOMProperty.getPossibleStandardName[lowerCased] = propName;

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        DOMProperty.getPossibleStandardName[attributeName] = propName;
	        DOMProperty.getAttributeName[propName] = attributeName;
	      } else {
	        DOMProperty.getAttributeName[propName] = lowerCased;
	      }

	      DOMProperty.getPropertyName[propName] =
	        DOMPropertyNames.hasOwnProperty(propName) ?
	          DOMPropertyNames[propName] :
	          propName;

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
	      } else {
	        DOMProperty.getMutationMethod[propName] = null;
	      }

	      var propConfig = Properties[propName];
	      DOMProperty.mustUseAttribute[propName] =
	        propConfig & DOMPropertyInjection.MUST_USE_ATTRIBUTE;
	      DOMProperty.mustUseProperty[propName] =
	        propConfig & DOMPropertyInjection.MUST_USE_PROPERTY;
	      DOMProperty.hasSideEffects[propName] =
	        propConfig & DOMPropertyInjection.HAS_SIDE_EFFECTS;
	      DOMProperty.hasBooleanValue[propName] =
	        propConfig & DOMPropertyInjection.HAS_BOOLEAN_VALUE;
	      DOMProperty.hasNumericValue[propName] =
	        propConfig & DOMPropertyInjection.HAS_NUMERIC_VALUE;
	      DOMProperty.hasPositiveNumericValue[propName] =
	        propConfig & DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE;
	      DOMProperty.hasOverloadedBooleanValue[propName] =
	        propConfig & DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE;

	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.mustUseAttribute[propName] ||
	          !DOMProperty.mustUseProperty[propName],
	        'DOMProperty: Cannot require using both attribute and property: %s',
	        propName
	      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
	        !DOMProperty.mustUseProperty[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        DOMProperty.mustUseProperty[propName] ||
	          !DOMProperty.hasSideEffects[propName],
	        'DOMProperty: Properties that have side effects must use property: %s',
	        propName
	      ) : invariant(DOMProperty.mustUseProperty[propName] ||
	        !DOMProperty.hasSideEffects[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !!DOMProperty.hasBooleanValue[propName] +
	          !!DOMProperty.hasNumericValue[propName] +
	          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
	        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
	        'numeric value, but not a combination: %s',
	        propName
	      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
	        !!DOMProperty.hasNumericValue[propName] +
	        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Checks whether a property name is a standard property.
	   * @type {Object}
	   */
	  isStandardName: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties.
	   * @type {Object}
	   */
	  getPossibleStandardName: {},

	  /**
	   * Mapping from normalized names to attribute names that differ. Attribute
	   * names are used when rendering markup or with `*Attribute()`.
	   * @type {Object}
	   */
	  getAttributeName: {},

	  /**
	   * Mapping from normalized names to properties on DOM node instances.
	   * (This includes properties that mutate due to external factors.)
	   * @type {Object}
	   */
	  getPropertyName: {},

	  /**
	   * Mapping from normalized names to mutation methods. This will only exist if
	   * mutation cannot be set simply by the property or `setAttribute()`.
	   * @type {Object}
	   */
	  getMutationMethod: {},

	  /**
	   * Whether the property must be accessed and mutated as an object property.
	   * @type {Object}
	   */
	  mustUseAttribute: {},

	  /**
	   * Whether the property must be accessed and mutated using `*Attribute()`.
	   * (This includes anything that fails `<propName> in <element>`.)
	   * @type {Object}
	   */
	  mustUseProperty: {},

	  /**
	   * Whether or not setting a value causes side effects such as triggering
	   * resources to be loaded or text selection changes. We must ensure that
	   * the value is only set if it has changed.
	   * @type {Object}
	   */
	  hasSideEffects: {},

	  /**
	   * Whether the property should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasBooleanValue: {},

	  /**
	   * Whether the property must be numeric or parse as a
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasNumericValue: {},

	  /**
	   * Whether the property must be positive numeric or parse as a positive
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasPositiveNumericValue: {},

	  /**
	   * Whether the property can be used as a flag as well as with a value. Removed
	   * when strictly equal to false; present without a value when strictly equal
	   * to true; present with a value otherwise.
	   * @type {Object}
	   */
	  hasOverloadedBooleanValue: {},

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function(nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule escapeTextForBrowser
	 * @typechecks static-only
	 */

	"use strict";

	var ESCAPE_LOOKUP = {
	  "&": "&amp;",
	  ">": "&gt;",
	  "<": "&lt;",
	  "\"": "&quot;",
	  "'": "&#x27;"
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextForBrowser;


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function(string) {
	    if (cache.hasOwnProperty(string)) {
	      return cache[string];
	    } else {
	      return cache[string] = callback.call(this, string);
	    }
	  };
	}

	module.exports = memoizeStringOnly;


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactOwner
	 */

	"use strict";

	var emptyObject = __webpack_require__(128);
	var invariant = __webpack_require__(38);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function(object) {
	    return !!(
	      object &&
	      typeof object.attachRef === 'function' &&
	      typeof object.detachRef === 'function'
	    );
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to add a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to remove a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.refs[ref] === component) {
	      owner.detachRef(ref);
	    }
	  },

	  /**
	   * A ReactComponent must mix this in to have refs.
	   *
	   * @lends {ReactOwner.prototype}
	   */
	  Mixin: {

	    construct: function() {
	      this.refs = emptyObject;
	    },

	    /**
	     * Lazily allocates the refs object and stores `component` as `ref`.
	     *
	     * @param {string} ref Reference name.
	     * @param {component} component Component to store as `ref`.
	     * @final
	     * @private
	     */
	    attachRef: function(ref, component) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        component.isOwnedBy(this),
	        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
	        ref
	      ) : invariant(component.isOwnedBy(this)));
	      var refs = this.refs === emptyObject ? (this.refs = {}) : this.refs;
	      refs[ref] = component;
	    },

	    /**
	     * Detaches a reference name.
	     *
	     * @param {string} ref Name to dereference.
	     * @final
	     * @private
	     */
	    detachRef: function(ref) {
	      delete this.refs[ref];
	    }

	  }

	};

	module.exports = ReactOwner;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function(obj) {
	  var ret = {};
	  var key;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    obj instanceof Object && !Array.isArray(obj),
	    'keyMirror(...): Argument must be an object.'
	  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDescriptorValidator
	 */

	/**
	 * ReactDescriptorValidator provides a wrapper around a descriptor factory
	 * which validates the props passed to the descriptor. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	"use strict";

	var ReactDescriptor = __webpack_require__(49);
	var ReactPropTypeLocations = __webpack_require__(81);
	var ReactCurrentOwner = __webpack_require__(48);

	var monitorCodeUse = __webpack_require__(85);

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {
	  'react_key_warning': {},
	  'react_numeric_key_warning': {}
	};
	var ownerHasMonitoredObjectMap = {};

	var loggedTypeFailures = {};

	var NUMERIC_PROPERTY_REGEX = /^\d+$/;

	/**
	 * Gets the current owner's displayName for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getCurrentOwnerDisplayName() {
	  var current = ReactCurrentOwner.current;
	  return current && current.constructor.displayName || undefined;
	}

	/**
	 * Warn if the component doesn't have an explicit key assigned to it.
	 * This component is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactComponent} component Component that requires a key.
	 * @param {*} parentType component's parent's type.
	 */
	function validateExplicitKey(component, parentType) {
	  if (component._store.validated || component.props.key != null) {
	    return;
	  }
	  component._store.validated = true;

	  warnAndMonitorForKeyUse(
	    'react_key_warning',
	    'Each child in an array should have a unique "key" prop.',
	    component,
	    parentType
	  );
	}

	/**
	 * Warn if the key is being defined as an object property but has an incorrect
	 * value.
	 *
	 * @internal
	 * @param {string} name Property name of the key.
	 * @param {ReactComponent} component Component that requires a key.
	 * @param {*} parentType component's parent's type.
	 */
	function validatePropertyKey(name, component, parentType) {
	  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
	    return;
	  }
	  warnAndMonitorForKeyUse(
	    'react_numeric_key_warning',
	    'Child objects should have non-numeric keys so ordering is preserved.',
	    component,
	    parentType
	  );
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} warningID The id used when logging.
	 * @param {string} message The base warning that gets output.
	 * @param {ReactComponent} component Component that requires a key.
	 * @param {*} parentType component's parent's type.
	 */
	function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
	  var ownerName = getCurrentOwnerDisplayName();
	  var parentName = parentType.displayName;

	  var useName = ownerName || parentName;
	  var memoizer = ownerHasKeyUseWarning[warningID];
	  if (memoizer.hasOwnProperty(useName)) {
	    return;
	  }
	  memoizer[useName] = true;

	  message += ownerName ?
	    (" Check the render method of " + ownerName + ".") :
	    (" Check the renderComponent call using <" + parentName + ">.");

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwnerName = null;
	  if (component._owner && component._owner !== ReactCurrentOwner.current) {
	    // Name of the component that originally created this child.
	    childOwnerName = component._owner.constructor.displayName;

	    message += (" It was passed a child from " + childOwnerName + ".");
	  }

	  message += ' See http://fb.me/react-warning-keys for more information.';
	  monitorCodeUse(warningID, {
	    component: useName,
	    componentOwner: childOwnerName
	  });
	  console.warn(message);
	}

	/**
	 * Log that we're using an object map. We're considering deprecating this
	 * feature and replace it with proper Map and ImmutableMap data structures.
	 *
	 * @internal
	 */
	function monitorUseOfObjectMap() {
	  var currentName = getCurrentOwnerDisplayName() || '';
	  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
	    return;
	  }
	  ownerHasMonitoredObjectMap[currentName] = true;
	  monitorCodeUse('react_object_map_children');
	}

	/**
	 * Ensure that every component either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {*} component Statically passed child of any type.
	 * @param {*} parentType component's parent's type.
	 * @return {boolean}
	 */
	function validateChildKeys(component, parentType) {
	  if (Array.isArray(component)) {
	    for (var i = 0; i < component.length; i++) {
	      var child = component[i];
	      if (ReactDescriptor.isValidDescriptor(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactDescriptor.isValidDescriptor(component)) {
	    // This component was passed in a valid location.
	    component._store.validated = true;
	  } else if (component && typeof component === 'object') {
	    monitorUseOfObjectMap();
	    for (var name in component) {
	      validatePropertyKey(name, component[name], parentType);
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	        // This will soon use the warning module
	        monitorCodeUse(
	          'react_failed_descriptor_type_check',
	          { message: error.message }
	        );
	      }
	    }
	  }
	}

	var ReactDescriptorValidator = {

	  /**
	   * Wraps a descriptor factory function in another function which validates
	   * the props and context of the descriptor and warns about any failed type
	   * checks.
	   *
	   * @param {function} factory The original descriptor factory
	   * @param {object?} propTypes A prop type definition set
	   * @param {object?} contextTypes A context type definition set
	   * @return {object} The component descriptor, which may be invalid.
	   * @private
	   */
	  createFactory: function(factory, propTypes, contextTypes) {
	    var validatedFactory = function(props, children) {
	      var descriptor = factory.apply(this, arguments);

	      for (var i = 1; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], descriptor.type);
	      }

	      var name = descriptor.type.displayName;
	      if (propTypes) {
	        checkPropTypes(
	          name,
	          propTypes,
	          descriptor.props,
	          ReactPropTypeLocations.prop
	        );
	      }
	      if (contextTypes) {
	        checkPropTypes(
	          name,
	          contextTypes,
	          descriptor._context,
	          ReactPropTypeLocations.context
	        );
	      }
	      return descriptor;
	    };

	    validatedFactory.prototype = factory.prototype;
	    validatedFactory.type = factory.type;

	    // Copy static properties
	    for (var key in factory) {
	      if (factory.hasOwnProperty(key)) {
	        validatedFactory[key] = factory[key];
	      }
	    }

	    return validatedFactory;
	  }

	};

	module.exports = ReactDescriptorValidator;


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	var component;
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIdsRegistry = {};

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function(emptyComponent) {
	    component = emptyComponent;
	  }
	};

	/**
	 * @return {ReactComponent} component The injected empty component.
	 */
	function getEmptyComponent() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    component,
	    'Trying to return null from a render, but no null placeholder component ' +
	    'was injected.'
	  ) : invariant(component));
	  return component();
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIdsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIdsRegistry[id];
	}

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return nullComponentIdsRegistry[id];
	}

	var ReactEmptyComponent = {
	  deregisterNullComponentID: deregisterNullComponentID,
	  getEmptyComponent: getEmptyComponent,
	  injection: ReactEmptyComponentInjection,
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID
	};

	module.exports = ReactEmptyComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	"use strict";

	var ReactErrorUtils = {
	  /**
	   * Creates a guarded version of a function. This is supposed to make debugging
	   * of event handlers easier. To aid debugging with the browser's debugger,
	   * this currently simply returns the original function.
	   *
	   * @param {function} func Function to be executed
	   * @param {string} name The name of the guard
	   * @return {function}
	   */
	  guard: function(func, name) {
	    return func;
	  }
	};

	module.exports = ReactErrorUtils;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	"use strict";

	var keyMirror = __webpack_require__(77);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	"use strict";

	var ReactPropTypeLocationNames = {};

	if ("production" !== process.env.NODE_ENV) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Validate a `componentDescriptor`. This should be exposed publicly in a follow
	 * up diff.
	 *
	 * @param {object} descriptor
	 * @return {boolean} Returns true if this is a valid descriptor of a Component.
	 */
	function isValidComponentDescriptor(descriptor) {
	  return (
	    descriptor &&
	    typeof descriptor.type === 'function' &&
	    typeof descriptor.type.prototype.mountComponent === 'function' &&
	    typeof descriptor.type.prototype.receiveComponent === 'function'
	  );
	}

	/**
	 * Given a `componentDescriptor` create an instance that will actually be
	 * mounted. Currently it just extracts an existing clone from composite
	 * components but this is an implementation detail which will change.
	 *
	 * @param {object} descriptor
	 * @return {object} A new instance of componentDescriptor's constructor.
	 * @protected
	 */
	function instantiateReactComponent(descriptor) {

	  // TODO: Make warning
	  // if (__DEV__) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      isValidComponentDescriptor(descriptor),
	      'Only React Components are valid for mounting.'
	    ) : invariant(isValidComponentDescriptor(descriptor)));
	  // }

	  return new descriptor.type(descriptor);
	}

	module.exports = instantiateReactComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mixInto
	 */

	"use strict";

	/**
	 * Simply copies properties to the prototype.
	 */
	var mixInto = function(constructor, methodBag) {
	  var methodName;
	  for (methodName in methodBag) {
	    if (!methodBag.hasOwnProperty(methodName)) {
	      continue;
	    }
	    constructor.prototype[methodName] = methodBag[methodName];
	  }
	};

	module.exports = mixInto;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule monitorCodeUse
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Provides open-source compatible instrumentation for monitoring certain API
	 * uses before we're ready to issue a warning or refactor. It accepts an event
	 * name which may only contain the characters [a-z0-9_] and an optional data
	 * object with further information.
	 */

	function monitorCodeUse(eventName, data) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    eventName && !/[^a-z0-9_]/.test(eventName),
	    'You must provide an eventName using only the characters [a-z0-9_]'
	  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));
	}

	module.exports = monitorCodeUse;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mapObject
	 */

	"use strict";

	/**
	 * For each key/value pair, invokes callback func and constructs a resulting
	 * object which contains, for every key in obj, values that are the result of
	 * of invoking the function:
	 *
	 *   func(value, key, iteration)
	 *
	 * Grepable names:
	 *
	 *   function objectMap()
	 *   function objMap()
	 *
	 * @param {?object} obj Object to map keys over
	 * @param {function} func Invoked for each key/val pair.
	 * @param {?*} context
	 * @return {?object} Result of mapping or null if obj is falsey
	 */
	function mapObject(obj, func, context) {
	  if (!obj) {
	    return null;
	  }
	  var i = 0;
	  var ret = {};
	  for (var key in obj) {
	    if (obj.hasOwnProperty(key)) {
	      ret[key] = func.call(context, obj[key], key, i++);
	    }
	  }
	  return ret;
	}

	module.exports = mapObject;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * Given a `prevDescriptor` and `nextDescriptor`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are descriptors. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevDescriptor
	 * @param {?object} nextDescriptor
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevDescriptor, nextDescriptor) {
	  if (prevDescriptor && nextDescriptor &&
	      prevDescriptor.type === nextDescriptor.type && (
	        (prevDescriptor.props && prevDescriptor.props.key) ===
	        (nextDescriptor.props && nextDescriptor.props.key)
	      ) && prevDescriptor._owner === nextDescriptor._owner) {
	    return true;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	"use strict";

	var CSSProperty = __webpack_require__(129);

	var dangerousStyleValue = __webpack_require__(130);
	var hyphenateStyleName = __webpack_require__(131);
	var memoizeStringOnly = __webpack_require__(75);

	var processStyleName = memoizeStringOnly(function(styleName) {
	  return hyphenateStyleName(styleName);
	});

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function(styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function(node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	"use strict";

	var ReactEmptyComponent = __webpack_require__(79);
	var ReactMount = __webpack_require__(54);

	var invariant = __webpack_require__(38);

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function() {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isMounted(),
	      'getDOMNode(): A component must be mounted to have a DOM node.'
	    ) : invariant(this.isMounted()));
	    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
	      return null;
	    }
	    return ReactMount.getNode(this._rootNodeID);
	  }
	};

	module.exports = ReactBrowserComponentMixin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPluginHub = __webpack_require__(132);
	var EventPluginRegistry = __webpack_require__(133);
	var ReactEventEmitterMixin = __webpack_require__(134);
	var ViewportMetrics = __webpack_require__(135);

	var isEventSupported = __webpack_require__(136);
	var merge = __webpack_require__(39);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topBlur: 'blur',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topScroll: 'scroll',
	  topSelectionChange: 'selectionchange',
	  topTextInput: 'textInput',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = merge(ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(
	        ReactBrowserEventEmitter.handleTopLevel
	      );
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function() {
	    return !!(
	      ReactBrowserEventEmitter.ReactEventListener &&
	      ReactBrowserEventEmitter.ReactEventListener.isEnabled()
	    );
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.
	      registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0, l = dependencies.length; i < l; i++) {
	      var dependency = dependencies[i];
	      if (!(
	            isListening.hasOwnProperty(dependency) &&
	            isListening[dependency]
	          )) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'wheel',
	              mountAt
	            );
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'mousewheel',
	              mountAt
	            );
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'DOMMouseScroll',
	              mountAt
	            );
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              mountAt
	            );
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
	            );
	          }
	        } else if (dependency === topLevelTypes.topFocus ||
	            dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topFocus,
	              'focus',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topBlur,
	              'blur',
	              mountAt
	            );
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topFocus,
	              'focusin',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topBlur,
	              'focusout',
	              mountAt
	            );
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	            dependency,
	            topEventMapping[dependency],
	            mountAt
	          );
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function(){
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	module.exports = ReactBrowserEventEmitter;


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPropagators = __webpack_require__(137);
	var ExecutionEnvironment = __webpack_require__(37);
	var SyntheticInputEvent = __webpack_require__(138);

	var keyOf = __webpack_require__(68);

	var canUseTextInputEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'TextEvent' in window &&
	  !('documentMode' in document || isPresto())
	);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (
	    typeof opera === 'object' &&
	    typeof opera.version === 'function' &&
	    parseInt(opera.version(), 10) <= 12
	  );
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBeforeInput: null}),
	      captured: keyOf({onBeforeInputCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topTextInput,
	      topLevelTypes.topPaste
	    ]
	  }
	};

	// Track characters inserted via keypress and composition events.
	var fallbackChars = null;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (
	    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	    !(nativeEvent.ctrlKey && nativeEvent.altKey)
	  );
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    var chars;

	    if (canUseTextInputEvent) {
	      switch (topLevelType) {
	        case topLevelTypes.topKeyPress:
	          /**
	           * If native `textInput` events are available, our goal is to make
	           * use of them. However, there is a special case: the spacebar key.
	           * In Webkit, preventing default on a spacebar `textInput` event
	           * cancels character insertion, but it *also* causes the browser
	           * to fall back to its default spacebar behavior of scrolling the
	           * page.
	           *
	           * Tracking at:
	           * https://code.google.com/p/chromium/issues/detail?id=355103
	           *
	           * To avoid this issue, use the keypress event as if no `textInput`
	           * event is available.
	           */
	          var which = nativeEvent.which;
	          if (which !== SPACEBAR_CODE) {
	            return;
	          }

	          chars = String.fromCharCode(which);
	          break;

	        case topLevelTypes.topTextInput:
	          // Record the characters to be added to the DOM.
	          chars = nativeEvent.data;

	          // If it's a spacebar character, assume that we have already handled
	          // it at the keypress level and bail immediately.
	          if (chars === SPACEBAR_CHAR) {
	            return;
	          }

	          // Otherwise, carry on.
	          break;

	        default:
	          // For other native event types, do nothing.
	          return;
	      }
	    } else {
	      switch (topLevelType) {
	        case topLevelTypes.topPaste:
	          // If a paste event occurs after a keypress, throw out the input
	          // chars. Paste events should not lead to BeforeInput events.
	          fallbackChars = null;
	          break;
	        case topLevelTypes.topKeyPress:
	          /**
	           * As of v27, Firefox may fire keypress events even when no character
	           * will be inserted. A few possibilities:
	           *
	           * - `which` is `0`. Arrow keys, Esc key, etc.
	           *
	           * - `which` is the pressed key code, but no char is available.
	           *   Ex: 'AltGr + d` in Polish. There is no modified character for
	           *   this key combination and no character is inserted into the
	           *   document, but FF fires the keypress for char code `100` anyway.
	           *   No `input` event will occur.
	           *
	           * - `which` is the pressed key code, but a command combination is
	           *   being used. Ex: `Cmd+C`. No character is inserted, and no
	           *   `input` event will occur.
	           */
	          if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	            fallbackChars = String.fromCharCode(nativeEvent.which);
	          }
	          break;
	        case topLevelTypes.topCompositionEnd:
	          fallbackChars = nativeEvent.data;
	          break;
	      }

	      // If no changes have occurred to the fallback string, no relevant
	      // event has fired and we're done.
	      if (fallbackChars === null) {
	        return;
	      }

	      chars = fallbackChars;
	    }

	    // If no characters are being inserted, no BeforeInput event should
	    // be fired.
	    if (!chars) {
	      return;
	    }

	    var event = SyntheticInputEvent.getPooled(
	      eventTypes.beforeInput,
	      topLevelTargetID,
	      nativeEvent
	    );

	    event.data = chars;
	    fallbackChars = null;
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  }
	};

	module.exports = BeforeInputEventPlugin;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPluginHub = __webpack_require__(132);
	var EventPropagators = __webpack_require__(137);
	var ExecutionEnvironment = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(63);
	var SyntheticEvent = __webpack_require__(139);

	var isEventSupported = __webpack_require__(136);
	var isTextInputElement = __webpack_require__(140);
	var keyOf = __webpack_require__(68);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onChange: null}),
	      captured: keyOf({onChangeCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topChange,
	      topLevelTypes.topClick,
	      topLevelTypes.topFocus,
	      topLevelTypes.topInput,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  return (
	    elem.nodeName === 'SELECT' ||
	    (elem.nodeName === 'INPUT' && elem.type === 'file')
	  );
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (
	    !('documentMode' in document) || document.documentMode > 8
	  );
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(
	    eventTypes.change,
	    activeElementID,
	    nativeEvent
	  );
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue();
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}


	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (
	    !('documentMode' in document) || document.documentMode > 9
	  );
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp =  {
	  get: function() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(
	    target.constructor.prototype,
	    'value'
	  );

	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange ||
	      topLevelType === topLevelTypes.topKeyUp ||
	      topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}


	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return (
	    elem.nodeName === 'INPUT' &&
	    (elem.type === 'checkbox' || elem.type === 'radio')
	  );
	}

	function getTargetIDForClickEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(
	          eventTypes.change,
	          targetID,
	          nativeEvent
	        );
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	    }
	  }

	};

	module.exports = ChangeEventPlugin;


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	"use strict";

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function() {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule CompositionEventPlugin
	 * @typechecks static-only
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPropagators = __webpack_require__(137);
	var ExecutionEnvironment = __webpack_require__(37);
	var ReactInputSelection = __webpack_require__(141);
	var SyntheticCompositionEvent = __webpack_require__(142);

	var getTextContentAccessor = __webpack_require__(143);
	var keyOf = __webpack_require__(68);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var useCompositionEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'CompositionEvent' in window
	);

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. In Korean, for example,
	// the compositionend event contains only one character regardless of
	// how many characters have been composed since compositionstart.
	// We therefore use the fallback data while still using the native
	// events as triggers.
	var useFallbackData = (
	  !useCompositionEvent ||
	  (
	    'documentMode' in document &&
	    document.documentMode > 8 &&
	    document.documentMode <= 11
	  )
	);

	var topLevelTypes = EventConstants.topLevelTypes;
	var currentComposition = null;

	// Events and their corresponding property names.
	var eventTypes = {
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionEnd: null}),
	      captured: keyOf({onCompositionEndCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionStart: null}),
	      captured: keyOf({onCompositionStartCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionStart,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionUpdate: null}),
	      captured: keyOf({onCompositionUpdateCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionUpdate,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  }
	};

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackStart(topLevelType, nativeEvent) {
	  return (
	    topLevelType === topLevelTypes.topKeyDown &&
	    nativeEvent.keyCode === START_KEYCODE
	  );
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return (nativeEvent.keyCode !== START_KEYCODE);
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Helper class stores information about selection and document state
	 * so we can figure out what changed at a later date.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this.root = root;
	  this.startSelection = ReactInputSelection.getSelection(root);
	  this.startValue = this.getText();
	}

	/**
	 * Get current text of input.
	 *
	 * @return {string}
	 */
	FallbackCompositionState.prototype.getText = function() {
	  return this.root.value || this.root[getTextContentAccessor()];
	};

	/**
	 * Text that has changed since the start of composition.
	 *
	 * @return {string}
	 */
	FallbackCompositionState.prototype.getData = function() {
	  var endValue = this.getText();
	  var prefixLength = this.startSelection.start;
	  var suffixLength = this.startValue.length - this.startSelection.end;

	  return endValue.substr(
	    prefixLength,
	    endValue.length - suffixLength - prefixLength
	  );
	};

	/**
	 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
	 * `onCompositionEnd` events on inputs, textareas and contentEditable
	 * nodes.
	 */
	var CompositionEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    var eventType;
	    var data;

	    if (useCompositionEvent) {
	      eventType = getCompositionEventType(topLevelType);
	    } else if (!currentComposition) {
	      if (isFallbackStart(topLevelType, nativeEvent)) {
	        eventType = eventTypes.compositionStart;
	      }
	    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionEnd;
	    }

	    if (useFallbackData) {
	      // The current composition is stored statically and must not be
	      // overwritten while composition continues.
	      if (!currentComposition && eventType === eventTypes.compositionStart) {
	        currentComposition = new FallbackCompositionState(topLevelTarget);
	      } else if (eventType === eventTypes.compositionEnd) {
	        if (currentComposition) {
	          data = currentComposition.getData();
	          currentComposition = null;
	        }
	      }
	    }

	    if (eventType) {
	      var event = SyntheticCompositionEvent.getPooled(
	        eventType,
	        topLevelTargetID,
	        nativeEvent
	      );
	      if (data) {
	        // Inject data generated from fallback path into the synthetic event.
	        // This matches the property of native CompositionEventInterface.
	        event.data = data;
	      }
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	      return event;
	    }
	  }
	};

	module.exports = CompositionEventPlugin;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	"use strict";

	 var keyOf = __webpack_require__(68);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [
	  keyOf({ResponderEventPlugin: null}),
	  keyOf({SimpleEventPlugin: null}),
	  keyOf({TapEventPlugin: null}),
	  keyOf({EnterLeaveEventPlugin: null}),
	  keyOf({ChangeEventPlugin: null}),
	  keyOf({SelectEventPlugin: null}),
	  keyOf({CompositionEventPlugin: null}),
	  keyOf({BeforeInputEventPlugin: null}),
	  keyOf({AnalyticsEventPlugin: null}),
	  keyOf({MobileSafariClickEventPlugin: null})
	];

	module.exports = DefaultEventPluginOrder;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPropagators = __webpack_require__(137);
	var SyntheticMouseEvent = __webpack_require__(144);

	var ReactMount = __webpack_require__(54);
	var keyOf = __webpack_require__(68);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({onMouseEnter: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  },
	  mouseLeave: {
	    registrationName: keyOf({onMouseLeave: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topMouseOver &&
	        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut &&
	        topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from, to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      to =
	        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
	        win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromID = from ? ReactMount.getID(from) : '';
	    var toID = to ? ReactMount.getID(to) : '';

	    var leave = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseLeave,
	      fromID,
	      nativeEvent
	    );
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseEnter,
	      toID,
	      nativeEvent
	    );
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	"use strict";

	var DOMProperty = __webpack_require__(73);
	var ExecutionEnvironment = __webpack_require__(37);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE =
	  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE =
	  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = (
	    implementation &&
	    implementation.hasFeature &&
	    implementation.hasFeature(
	      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
	      '1.1'
	    )
	  );
	}


	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(
	    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
	  ),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusMixin
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    label: null,
	    lang: null,
	    list: null,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scrollLeft: MUST_USE_PROPERTY,
	    scrolling: null,
	    scrollTop: MUST_USE_PROPERTY,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
	    autoCorrect: null, // Supported in Mobile Safari for keyboard hints
	    itemProp: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, // Microdata: http://schema.org/docs/gs.html
	    itemType: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
	    property: null // Supports OG in meta tags
	  },
	  DOMAttributeNames: {
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    encType: 'enctype',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule MobileSafariClickEventPlugin
	 * @typechecks static-only
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);

	var emptyFunction = __webpack_require__(62);

	var topLevelTypes = EventConstants.topLevelTypes;

	/**
	 * Mobile Safari does not fire properly bubble click events on non-interactive
	 * elements, which means delegated click listeners do not fire. The workaround
	 * for this bug involves attaching an empty click listener on the target node.
	 *
	 * This particular plugin works around the bug by attaching an empty click
	 * listener on `touchstart` (which does fire on every element).
	 */
	var MobileSafariClickEventPlugin = {

	  eventTypes: null,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topTouchStart) {
	      var target = nativeEvent.target;
	      if (target && !target.onclick) {
	        target.onclick = emptyFunction;
	      }
	    }
	  }

	};

	module.exports = MobileSafariClickEventPlugin;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	/*jslint evil: true */

	"use strict";

	var ReactDOMIDOperations = __webpack_require__(145);
	var ReactMarkupChecksum = __webpack_require__(121);
	var ReactMount = __webpack_require__(54);
	var ReactPerf = __webpack_require__(56);
	var ReactReconcileTransaction = __webpack_require__(146);

	var getReactRootElementInContainer = __webpack_require__(117);
	var invariant = __webpack_require__(38);
	var setInnerHTML = __webpack_require__(147);


	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;


	/**
	 * Abstracts away all functionality of `ReactComponent` requires knowledge of
	 * the browser context.
	 */
	var ReactComponentBrowserEnvironment = {
	  ReactReconcileTransaction: ReactReconcileTransaction,

	  BackendIDOperations: ReactDOMIDOperations,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function(rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  },

	  /**
	   * @param {string} markup Markup string to place into the DOM Element.
	   * @param {DOMElement} container DOM Element to insert markup into.
	   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
	   * container if possible.
	   */
	  mountImageIntoNode: ReactPerf.measure(
	    'ReactComponentBrowserEnvironment',
	    'mountImageIntoNode',
	    function(markup, container, shouldReuseMarkup) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        container && (
	          container.nodeType === ELEMENT_NODE_TYPE ||
	            container.nodeType === DOC_NODE_TYPE
	        ),
	        'mountComponentIntoNode(...): Target container is not valid.'
	      ) : invariant(container && (
	        container.nodeType === ELEMENT_NODE_TYPE ||
	          container.nodeType === DOC_NODE_TYPE
	      )));

	      if (shouldReuseMarkup) {
	        if (ReactMarkupChecksum.canReuseMarkup(
	          markup,
	          getReactRootElementInContainer(container))) {
	          return;
	        } else {
	          ("production" !== process.env.NODE_ENV ? invariant(
	            container.nodeType !== DOC_NODE_TYPE,
	            'You\'re trying to render a component to the document using ' +
	            'server rendering but the checksum was invalid. This usually ' +
	            'means you rendered a different component type or props on ' +
	            'the client from the one on the server, or your render() ' +
	            'methods are impure. React cannot handle this case due to ' +
	            'cross-browser quirks by rendering at the document root. You ' +
	            'should look for environment dependent code in your components ' +
	            'and ensure the props are the same client and server side.'
	          ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	          if ("production" !== process.env.NODE_ENV) {
	            console.warn(
	              'React attempted to use reuse markup in a container but the ' +
	              'checksum was invalid. This generally means that you are ' +
	              'using server rendering and the markup generated on the ' +
	              'server was not what the client was expecting. React injected ' +
	              'new markup to compensate which works but you have lost many ' +
	              'of the benefits of server rendering. Instead, figure out ' +
	              'why the markup being generated is different on the client ' +
	              'or server.'
	            );
	          }
	        }
	      }

	      ("production" !== process.env.NODE_ENV ? invariant(
	        container.nodeType !== DOC_NODE_TYPE,
	        'You\'re trying to render a component to the document but ' +
	          'you didn\'t use server rendering. We can\'t do this ' +
	          'without using server rendering due to cross-browser quirks. ' +
	          'See renderComponentToString() for server rendering.'
	      ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	      setInnerHTML(container, markup);
	    }
	  )
	};

	module.exports = ReactComponentBrowserEnvironment;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	"use strict";

	var ReactUpdates = __webpack_require__(63);
	var Transaction = __webpack_require__(125);

	var emptyFunction = __webpack_require__(62);
	var mixInto = __webpack_require__(84);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	mixInto(ReactDefaultBatchingStrategyTransaction, Transaction.Mixin);
	mixInto(ReactDefaultBatchingStrategyTransaction, {
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function(callback, a, b) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b);
	    } else {
	      transaction.perform(callback, null, a, b);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMButton
	 */

	"use strict";

	var AutoFocusMixin = __webpack_require__(148);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	var keyMirror = __webpack_require__(77);

	// Store a reference to the <button> `ReactDOMComponent`.
	var button = ReactDOM.button;

	var mouseListenerNames = keyMirror({
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	});

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMButton',

	  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

	  render: function() {
	    var props = {};

	    // Copy the props; except the mouse listeners if we're disabled
	    for (var key in this.props) {
	      if (this.props.hasOwnProperty(key) &&
	          (!this.props.disabled || !mouseListenerNames[key])) {
	        props[key] = this.props[key];
	      }
	    }

	    return button(props, this.props.children);
	  }

	});

	module.exports = ReactDOMButton;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMForm
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var LocalEventTrapMixin = __webpack_require__(149);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	// Store a reference to the <form> `ReactDOMComponent`.
	var form = ReactDOM.form;

	/**
	 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
	 * to capture it on the <form> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <form> a
	 * composite component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMForm = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMForm',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
	    // `jshint` fails to parse JSX so in order for linting to work in the open
	    // source repo, we need to just use `ReactDOM.form`.
	    return this.transferPropsTo(form(null, this.props.children));
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
	  }
	});

	module.exports = ReactDOMForm;


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMImg
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var LocalEventTrapMixin = __webpack_require__(149);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	// Store a reference to the <img> `ReactDOMComponent`.
	var img = ReactDOM.img;

	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <img> element itself. There are lots of hacks we could do
	 * to accomplish this, but the most reliable is to make <img> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMImg = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMImg',
	  tagName: 'IMG',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    return img(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
	  }
	});

	module.exports = ReactDOMImg;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMInput
	 */

	"use strict";

	var AutoFocusMixin = __webpack_require__(148);
	var DOMPropertyOperations = __webpack_require__(42);
	var LinkedValueUtils = __webpack_require__(150);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);
	var ReactMount = __webpack_require__(54);

	var invariant = __webpack_require__(38);
	var merge = __webpack_require__(39);

	// Store a reference to the <input> `ReactDOMComponent`.
	var input = ReactDOM.input;

	var instancesByReactID = {};

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMInput',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    return {
	      checked: this.props.defaultChecked || false,
	      value: defaultValue != null ? defaultValue : null
	    };
	  },

	  shouldComponentUpdate: function() {
	    // Defer any updates to this component during the `onChange` handler.
	    return !this._isChanging;
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = merge(this.props);

	    props.defaultChecked = null;
	    props.defaultValue = null;

	    var value = LinkedValueUtils.getValue(this);
	    props.value = value != null ? value : this.state.value;

	    var checked = LinkedValueUtils.getChecked(this);
	    props.checked = checked != null ? checked : this.state.checked;

	    props.onChange = this._handleChange;

	    return input(props, this.props.children);
	  },

	  componentDidMount: function() {
	    var id = ReactMount.getID(this.getDOMNode());
	    instancesByReactID[id] = this;
	  },

	  componentWillUnmount: function() {
	    var rootNode = this.getDOMNode();
	    var id = ReactMount.getID(rootNode);
	    delete instancesByReactID[id];
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var rootNode = this.getDOMNode();
	    if (this.props.checked != null) {
	      DOMPropertyOperations.setValueForProperty(
	        rootNode,
	        'checked',
	        this.props.checked || false
	      );
	    }

	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      this._isChanging = true;
	      returnValue = onChange.call(this, event);
	      this._isChanging = false;
	    }
	    this.setState({
	      checked: event.target.checked,
	      value: event.target.value
	    });

	    var name = this.props.name;
	    if (this.props.type === 'radio' && name != null) {
	      var rootNode = this.getDOMNode();
	      var queryRoot = rootNode;

	      while (queryRoot.parentNode) {
	        queryRoot = queryRoot.parentNode;
	      }

	      // If `rootNode.form` was non-null, then we could try `form.elements`,
	      // but that sometimes behaves strangely in IE8. We could also try using
	      // `form.getElementsByName`, but that will only return direct children
	      // and won't include inputs that use the HTML5 `form=` attribute. Since
	      // the input might not even be in a form, let's just use the global
	      // `querySelectorAll` to ensure we don't miss anything.
	      var group = queryRoot.querySelectorAll(
	        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
	        var otherNode = group[i];
	        if (otherNode === rootNode ||
	            otherNode.form !== rootNode.form) {
	          continue;
	        }
	        var otherID = ReactMount.getID(otherNode);
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherID,
	          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
	          'same `name` is not supported.'
	        ) : invariant(otherID));
	        var otherInstance = instancesByReactID[otherID];
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherInstance,
	          'ReactDOMInput: Unknown radio button ID %s.',
	          otherID
	        ) : invariant(otherInstance));
	        // In some cases, this will actually change the `checked` state value.
	        // In other cases, there's no change but this forces a reconcile upon
	        // which componentDidUpdate will reset the DOM property to whatever it
	        // should be.
	        otherInstance.setState({
	          checked: false
	        });
	      }
	    }

	    return returnValue;
	  }

	});

	module.exports = ReactDOMInput;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMOption
	 */

	"use strict";

	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	var warning = __webpack_require__(61);

	// Store a reference to the <option> `ReactDOMComponent`.
	var option = ReactDOM.option;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMOption',

	  mixins: [ReactBrowserComponentMixin],

	  componentWillMount: function() {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        this.props.selected == null,
	        'Use the `defaultValue` or `value` props on <select> instead of ' +
	        'setting `selected` on <option>.'
	      ) : null);
	    }
	  },

	  render: function() {
	    return option(this.props, this.props.children);
	  }

	});

	module.exports = ReactDOMOption;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMSelect
	 */

	"use strict";

	var AutoFocusMixin = __webpack_require__(148);
	var LinkedValueUtils = __webpack_require__(150);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	var merge = __webpack_require__(39);

	// Store a reference to the <select> `ReactDOMComponent`.
	var select = ReactDOM.select;

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function selectValueType(props, propName, componentName) {
	  if (props[propName] == null) {
	    return;
	  }
	  if (props.multiple) {
	    if (!Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
	        ("`multiple` is true.")
	      );
	    }
	  } else {
	    if (Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
	        ("value if `multiple` is false.")
	      );
	    }
	  }
	}

	/**
	 * If `value` is supplied, updates <option> elements on mount and update.
	 * @param {ReactComponent} component Instance of ReactDOMSelect
	 * @param {?*} propValue For uncontrolled components, null/undefined. For
	 * controlled components, a string (or with `multiple`, a list of strings).
	 * @private
	 */
	function updateOptions(component, propValue) {
	  var multiple = component.props.multiple;
	  var value = propValue != null ? propValue : component.state.value;
	  var options = component.getDOMNode().options;
	  var selectedValue, i, l;
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0, l = value.length; i < l; ++i) {
	      selectedValue['' + value[i]] = true;
	    }
	  } else {
	    selectedValue = '' + value;
	  }
	  for (i = 0, l = options.length; i < l; i++) {
	    var selected = multiple ?
	      selectedValue.hasOwnProperty(options[i].value) :
	      options[i].value === selectedValue;

	    if (selected !== options[i].selected) {
	      options[i].selected = selected;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * string. If `multiple` is true, the prop must be an array of strings.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMSelect',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  propTypes: {
	    defaultValue: selectValueType,
	    value: selectValueType
	  },

	  getInitialState: function() {
	    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
	  },

	  componentWillReceiveProps: function(nextProps) {
	    if (!this.props.multiple && nextProps.multiple) {
	      this.setState({value: [this.state.value]});
	    } else if (this.props.multiple && !nextProps.multiple) {
	      this.setState({value: this.state.value[0]});
	    }
	  },

	  shouldComponentUpdate: function() {
	    // Defer any updates to this component during the `onChange` handler.
	    return !this._isChanging;
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = merge(this.props);

	    props.onChange = this._handleChange;
	    props.value = null;

	    return select(props, this.props.children);
	  },

	  componentDidMount: function() {
	    updateOptions(this, LinkedValueUtils.getValue(this));
	  },

	  componentDidUpdate: function(prevProps) {
	    var value = LinkedValueUtils.getValue(this);
	    var prevMultiple = !!prevProps.multiple;
	    var multiple = !!this.props.multiple;
	    if (value != null || prevMultiple !== multiple) {
	      updateOptions(this, value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      this._isChanging = true;
	      returnValue = onChange.call(this, event);
	      this._isChanging = false;
	    }

	    var selectedValue;
	    if (this.props.multiple) {
	      selectedValue = [];
	      var options = event.target.options;
	      for (var i = 0, l = options.length; i < l; i++) {
	        if (options[i].selected) {
	          selectedValue.push(options[i].value);
	        }
	      }
	    } else {
	      selectedValue = event.target.value;
	    }

	    this.setState({value: selectedValue});
	    return returnValue;
	  }

	});

	module.exports = ReactDOMSelect;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	"use strict";

	var AutoFocusMixin = __webpack_require__(148);
	var DOMPropertyOperations = __webpack_require__(42);
	var LinkedValueUtils = __webpack_require__(150);
	var ReactBrowserComponentMixin = __webpack_require__(89);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);

	var invariant = __webpack_require__(38);
	var merge = __webpack_require__(39);

	var warning = __webpack_require__(61);

	// Store a reference to the <textarea> `ReactDOMComponent`.
	var textarea = ReactDOM.textarea;

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = ReactCompositeComponent.createClass({
	  displayName: 'ReactDOMTextarea',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = this.props.children;
	    if (children != null) {
	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'Use the `defaultValue` or `value` props instead of setting ' +
	          'children on <textarea>.'
	        ) : null);
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        defaultValue == null,
	        'If you supply `defaultValue` on a <textarea>, do not pass children.'
	      ) : invariant(defaultValue == null));
	      if (Array.isArray(children)) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          children.length <= 1,
	          '<textarea> can only have at most one child.'
	        ) : invariant(children.length <= 1));
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(this);
	    return {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue)
	    };
	  },

	  shouldComponentUpdate: function() {
	    // Defer any updates to this component during the `onChange` handler.
	    return !this._isChanging;
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = merge(this.props);

	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.dangerouslySetInnerHTML == null,
	      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
	    ) : invariant(props.dangerouslySetInnerHTML == null));

	    props.defaultValue = null;
	    props.value = null;
	    props.onChange = this._handleChange;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    return textarea(props, this.state.initialValue);
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      var rootNode = this.getDOMNode();
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      this._isChanging = true;
	      returnValue = onChange.call(this, event);
	      this._isChanging = false;
	    }
	    this.setState({value: event.target.value});
	    return returnValue;
	  }

	});

	module.exports = ReactDOMTextarea;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	"use strict";

	var EventListener = __webpack_require__(151);
	var ExecutionEnvironment = __webpack_require__(37);
	var PooledClass = __webpack_require__(71);
	var ReactInstanceHandles = __webpack_require__(53);
	var ReactMount = __webpack_require__(54);
	var ReactUpdates = __webpack_require__(63);

	var getEventTarget = __webpack_require__(152);
	var getUnboundedScrollPosition = __webpack_require__(153);
	var mixInto = __webpack_require__(84);

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	mixInto(TopLevelCallbackBookKeeping, {
	  destructor: function() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(
	  TopLevelCallbackBookKeeping,
	  PooledClass.twoArgumentPooler
	);

	function handleTopLevelImpl(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(
	    getEventTarget(bookKeeping.nativeEvent)
	  ) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(
	      bookKeeping.topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      bookKeeping.nativeEvent
	    );
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function() {
	    return ReactEventListener._enabled;
	  },


	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return;
	    }
	    return EventListener.listen(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return;
	    }
	    return EventListener.capture(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  monitorScrollValue: function(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	    EventListener.listen(window, 'resize', callback);
	  },

	  dispatchEvent: function(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
	      topLevelType,
	      nativeEvent
	    );
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactInjection
	 */

	"use strict";

	var DOMProperty = __webpack_require__(73);
	var EventPluginHub = __webpack_require__(132);
	var ReactComponent = __webpack_require__(45);
	var ReactCompositeComponent = __webpack_require__(46);
	var ReactDOM = __webpack_require__(50);
	var ReactEmptyComponent = __webpack_require__(79);
	var ReactBrowserEventEmitter = __webpack_require__(90);
	var ReactPerf = __webpack_require__(56);
	var ReactRootIndex = __webpack_require__(118);
	var ReactUpdates = __webpack_require__(63);

	var ReactInjection = {
	  Component: ReactComponent.injection,
	  CompositeComponent: ReactCompositeComponent.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  DOM: ReactDOM.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SelectEventPlugin
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPropagators = __webpack_require__(137);
	var ReactInputSelection = __webpack_require__(141);
	var SyntheticEvent = __webpack_require__(139);

	var getActiveElement = __webpack_require__(154);
	var isTextInputElement = __webpack_require__(140);
	var keyOf = __webpack_require__(68);
	var shallowEqual = __webpack_require__(155);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSelect: null}),
	      captured: keyOf({onSelectCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topContextMenu,
	      topLevelTypes.topFocus,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topMouseDown,
	      topLevelTypes.topMouseUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @param {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node &&
	      ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  } else {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown ||
	      activeElement == null ||
	      activeElement != getActiveElement()) {
	    return;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(
	      eventTypes.select,
	      activeElementID,
	      nativeEvent
	    );

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) ||
	            topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't).
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      case topLevelTypes.topSelectionChange:
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent);
	    }
	  }
	};

	module.exports = SelectEventPlugin;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	"use strict";

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function() {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPluginUtils = __webpack_require__(43);
	var EventPropagators = __webpack_require__(137);
	var SyntheticClipboardEvent = __webpack_require__(156);
	var SyntheticEvent = __webpack_require__(139);
	var SyntheticFocusEvent = __webpack_require__(157);
	var SyntheticKeyboardEvent = __webpack_require__(158);
	var SyntheticMouseEvent = __webpack_require__(144);
	var SyntheticDragEvent = __webpack_require__(159);
	var SyntheticTouchEvent = __webpack_require__(160);
	var SyntheticUIEvent = __webpack_require__(161);
	var SyntheticWheelEvent = __webpack_require__(162);

	var invariant = __webpack_require__(38);
	var keyOf = __webpack_require__(68);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBlur: true}),
	      captured: keyOf({onBlurCapture: true})
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onClick: true}),
	      captured: keyOf({onClickCapture: true})
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onContextMenu: true}),
	      captured: keyOf({onContextMenuCapture: true})
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCopy: true}),
	      captured: keyOf({onCopyCapture: true})
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCut: true}),
	      captured: keyOf({onCutCapture: true})
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDoubleClick: true}),
	      captured: keyOf({onDoubleClickCapture: true})
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrag: true}),
	      captured: keyOf({onDragCapture: true})
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnd: true}),
	      captured: keyOf({onDragEndCapture: true})
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnter: true}),
	      captured: keyOf({onDragEnterCapture: true})
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragExit: true}),
	      captured: keyOf({onDragExitCapture: true})
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragLeave: true}),
	      captured: keyOf({onDragLeaveCapture: true})
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragOver: true}),
	      captured: keyOf({onDragOverCapture: true})
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragStart: true}),
	      captured: keyOf({onDragStartCapture: true})
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrop: true}),
	      captured: keyOf({onDropCapture: true})
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onFocus: true}),
	      captured: keyOf({onFocusCapture: true})
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onInput: true}),
	      captured: keyOf({onInputCapture: true})
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyDown: true}),
	      captured: keyOf({onKeyDownCapture: true})
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyPress: true}),
	      captured: keyOf({onKeyPressCapture: true})
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyUp: true}),
	      captured: keyOf({onKeyUpCapture: true})
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onLoad: true}),
	      captured: keyOf({onLoadCapture: true})
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onError: true}),
	      captured: keyOf({onErrorCapture: true})
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseDown: true}),
	      captured: keyOf({onMouseDownCapture: true})
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseMove: true}),
	      captured: keyOf({onMouseMoveCapture: true})
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOut: true}),
	      captured: keyOf({onMouseOutCapture: true})
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOver: true}),
	      captured: keyOf({onMouseOverCapture: true})
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseUp: true}),
	      captured: keyOf({onMouseUpCapture: true})
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onPaste: true}),
	      captured: keyOf({onPasteCapture: true})
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onReset: true}),
	      captured: keyOf({onResetCapture: true})
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onScroll: true}),
	      captured: keyOf({onScrollCapture: true})
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSubmit: true}),
	      captured: keyOf({onSubmitCapture: true})
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchCancel: true}),
	      captured: keyOf({onTouchCancelCapture: true})
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchEnd: true}),
	      captured: keyOf({onTouchEndCapture: true})
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchMove: true}),
	      captured: keyOf({onTouchMoveCapture: true})
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchStart: true}),
	      captured: keyOf({onTouchStartCapture: true})
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onWheel: true}),
	      captured: keyOf({onWheelCapture: true})
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topBlur:        eventTypes.blur,
	  topClick:       eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy:        eventTypes.copy,
	  topCut:         eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag:        eventTypes.drag,
	  topDragEnd:     eventTypes.dragEnd,
	  topDragEnter:   eventTypes.dragEnter,
	  topDragExit:    eventTypes.dragExit,
	  topDragLeave:   eventTypes.dragLeave,
	  topDragOver:    eventTypes.dragOver,
	  topDragStart:   eventTypes.dragStart,
	  topDrop:        eventTypes.drop,
	  topError:       eventTypes.error,
	  topFocus:       eventTypes.focus,
	  topInput:       eventTypes.input,
	  topKeyDown:     eventTypes.keyDown,
	  topKeyPress:    eventTypes.keyPress,
	  topKeyUp:       eventTypes.keyUp,
	  topLoad:        eventTypes.load,
	  topMouseDown:   eventTypes.mouseDown,
	  topMouseMove:   eventTypes.mouseMove,
	  topMouseOut:    eventTypes.mouseOut,
	  topMouseOver:   eventTypes.mouseOver,
	  topMouseUp:     eventTypes.mouseUp,
	  topPaste:       eventTypes.paste,
	  topReset:       eventTypes.reset,
	  topScroll:      eventTypes.scroll,
	  topSubmit:      eventTypes.submit,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd:    eventTypes.touchEnd,
	  topTouchMove:   eventTypes.touchMove,
	  topTouchStart:  eventTypes.touchStart,
	  topWheel:       eventTypes.wheel
	};

	for (var topLevelType in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * Same as the default implementation, except cancels the event when return
	   * value is false.
	   *
	   * @param {object} Event to be dispatched.
	   * @param {function} Application-level callback.
	   * @param {string} domID DOM ID to pass to the callback.
	   */
	  executeDispatch: function(event, listener, domID) {
	    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);
	    if (returnValue === false) {
	      event.stopPropagation();
	      event.preventDefault();
	    }
	  },

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topError:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSubmit:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events.
	        if (nativeEvent.charCode === 0) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      EventConstructor,
	      'SimpleEventPlugin: Unhandled event type, `%s`.',
	      topLevelType
	    ) : invariant(EventConstructor));
	    var event = EventConstructor.getPooled(
	      dispatchConfig,
	      topLevelTargetID,
	      nativeEvent
	    );
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  }

	};

	module.exports = SimpleEventPlugin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	"use strict";

	var DOMProperty = __webpack_require__(73);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var SVGDOMPropertyConfig = {
	  Properties: {
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox'
	  }
	};

	module.exports = SVGDOMPropertyConfig;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule createFullPageComponent
	 * @typechecks
	 */

	"use strict";

	// Defeat circular references by requiring this directly.
	var ReactCompositeComponent = __webpack_require__(46);

	var invariant = __webpack_require__(38);

	/**
	 * Create a component that will throw an exception when unmounted.
	 *
	 * Components like <html> <head> and <body> can't be removed or added
	 * easily in a cross-browser way, however it's valuable to be able to
	 * take advantage of React's reconciliation for styling and <title>
	 * management. So we just document it and throw in dangerous cases.
	 *
	 * @param {function} componentClass convenience constructor to wrap
	 * @return {function} convenience constructor of new component
	 */
	function createFullPageComponent(componentClass) {
	  var FullPageComponent = ReactCompositeComponent.createClass({
	    displayName: 'ReactFullPageComponent' + (
	      componentClass.type.displayName || ''
	    ),

	    componentWillUnmount: function() {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        false,
	        '%s tried to unmount. Because of cross-browser quirks it is ' +
	        'impossible to unmount some top-level components (eg <html>, <head>, ' +
	        'and <body>) reliably and efficiently. To fix this, have a single ' +
	        'top-level component that never unmounts render these elements.',
	        this.constructor.displayName
	      ) : invariant(false));
	    },

	    render: function() {
	      return this.transferPropsTo(componentClass(null, this.props.children));
	    }
	  });

	  return FullPageComponent;
	}

	module.exports = createFullPageComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	"use strict";

	var DOMProperty = __webpack_require__(73);
	var ReactDefaultPerfAnalysis = __webpack_require__(163);
	var ReactMount = __webpack_require__(54);
	var ReactPerf = __webpack_require__(56);

	var performanceNow = __webpack_require__(164);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function() {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function() {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function() {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  printWasted: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
	      measurements,
	      true
	    );
	    console.table(summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  printDOM: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function(item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result['type'] = item.type;
	      result['args'] = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  _recordWrite: function(id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes =
	      ReactDefaultPerf
	        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
	        .writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function(moduleName, fnName, func) {
	    return function() {var args=Array.prototype.slice.call(arguments,0);
	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' ||
	          fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ].totalTime = performanceNow() - start;
	        return rv;
	      } else if (moduleName === 'ReactDOMIDOperations' ||
	        moduleName === 'ReactComponentBrowserEnvironment') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === 'mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function(update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(
	              update.parentID,
	              update.type,
	              totalTime,
	              writeArgs
	            );
	          });
	        } else {
	          // basic format
	          ReactDefaultPerf._recordWrite(
	            args[0],
	            fnName,
	            totalTime,
	            Array.prototype.slice.call(args, 1)
	          );
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (
	        fnName === 'mountComponent' ||
	        fnName === 'updateComponent' || // TODO: receiveComponent()?
	        fnName === '_renderValidatedComponent')) {

	        var rootNodeID = fnName === 'mountComponent' ?
	          args[0] :
	          this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.constructor.displayName,
	          owner: this._owner ? this._owner.constructor.displayName : '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	var isTextNode = __webpack_require__(165);

	/*jslint bitwise:true */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if (outerNode.contains) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getReactRootElementInContainer
	 */

	"use strict";

	var DOC_NODE_TYPE = 9;

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 *                                           a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	module.exports = getReactRootElementInContainer;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	"use strict";

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function(_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	"use strict";

	var keyMirror = __webpack_require__(77);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule flattenChildren
	 */

	"use strict";

	var traverseAllChildren = __webpack_require__(72);
	var warning = __webpack_require__(61);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = !result.hasOwnProperty(name);
	  ("production" !== process.env.NODE_ENV ? warning(
	    keyUnique,
	    'flattenChildren(...): Encountered two children with the same key, ' +
	    '`%s`. Child keys must be unique; when two children share a key, only ' +
	    'the first child will be used.',
	    name
	  ) : null);
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	"use strict";

	var adler32 = __webpack_require__(167);

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function(markup) {
	    var checksum = adler32(markup);
	    return markup.replace(
	      '>',
	      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
	    );
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function(markup, element) {
	    var existingChecksum = element.getAttribute(
	      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	    );
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	"use strict";

	var PooledClass = __webpack_require__(71);
	var CallbackQueue = __webpack_require__(124);
	var ReactPutListenerQueue = __webpack_require__(166);
	var Transaction = __webpack_require__(125);

	var emptyFunction = __webpack_require__(62);
	var mixInto = __webpack_require__(84);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap proceedures.
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	mixInto(ReactServerRenderingTransaction, Transaction.Mixin);
	mixInto(ReactServerRenderingTransaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule copyProperties
	 */

	/**
	 * Copy properties from one or more objects (up to 5) into the first object.
	 * This is a shallow copy. It mutates the first object and also returns it.
	 *
	 * NOTE: `arguments` has a very significant performance penalty, which is why
	 * we don't support unlimited arguments.
	 */
	function copyProperties(obj, a, b, c, d, e, f) {
	  obj = obj || {};

	  if ("production" !== process.env.NODE_ENV) {
	    if (f) {
	      throw new Error('Too many arguments passed to copyProperties');
	    }
	  }

	  var args = [a, b, c, d, e];
	  var ii = 0, v;
	  while (args[ii]) {
	    v = args[ii++];
	    for (var k in v) {
	      obj[k] = v[k];
	    }

	    // IE ignores toString in object iteration.. See:
	    // webreflection.blogspot.com/2007/07/quick-fix-internet-explorer-and.html
	    if (v.hasOwnProperty && v.hasOwnProperty('toString') &&
	        (typeof v.toString != 'undefined') && (obj.toString !== v.toString)) {
	      obj.toString = v.toString;
	    }
	  }

	  return obj;
	}

	module.exports = copyProperties;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule CallbackQueue
	 */

	"use strict";

	var PooledClass = __webpack_require__(71);

	var invariant = __webpack_require__(38);
	var mixInto = __webpack_require__(84);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	mixInto(CallbackQueue, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        callbacks.length === contexts.length,
	        "Mismatched list of contexts in callback queue"
	      ) : invariant(callbacks.length === contexts.length));
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0, l = callbacks.length; i < l; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule Transaction
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM upates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (!this.wrapperInitData) {
	      this.wrapperInitData = [];
	    } else {
	      this.wrapperInitData.length = 0;
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} args... Arguments to pass to the method (optional).
	   *                           Helps prevent need to bind in many cases.
	   * @return Return value from `method`.
	   */
	  perform: function(method, scope, a, b, c, d, e, f) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !this.isInTransaction(),
	      'Transaction.perform(...): Cannot initialize a transaction when there ' +
	      'is already an outstanding transaction.'
	    ) : invariant(!this.isInTransaction()));
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {
	          }
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ?
	          wrapper.initialize.call(this) :
	          null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {
	          }
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function(startIndex) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isInTransaction(),
	      'Transaction.closeAll(): Cannot close transaction when none are open.'
	    ) : invariant(this.isInTransaction()));
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR) {
	          wrapper.close && wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {
	          }
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occured.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule joinClasses
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * Combines multiple className strings into one.
	 * http://jsperf.com/joinclasses-args-vs-array
	 *
	 * @param {...?string} classes
	 * @return {string}
	 */
	function joinClasses(className/*, ... */) {
	  if (!className) {
	    className = '';
	  }
	  var nextClass;
	  var argLength = arguments.length;
	  if (argLength > 1) {
	    for (var ii = 1; ii < argLength; ii++) {
	      nextClass = arguments[ii];
	      nextClass && (className += ' ' + nextClass);
	    }
	  }
	  return className;
	}

	module.exports = joinClasses;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by CoffeeScript 1.7.1
	var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

	module.exports = {
	  PatternPrototype: {
	    match: function(url) {
	      var bound, captured, i, match, name, value, _i, _len;
	      match = this.regex.exec(url);
	      if (match == null) {
	        return null;
	      }
	      captured = match.slice(1);
	      if (this.isRegex) {
	        return captured;
	      }
	      bound = {};
	      for (i = _i = 0, _len = captured.length; _i < _len; i = ++_i) {
	        value = captured[i];
	        name = this.names[i];
	        if (value == null) {
	          continue;
	        }
	        if (name === '_') {
	          if (bound._ == null) {
	            bound._ = [];
	          }
	          bound._.push(value);
	        } else {
	          bound[name] = value;
	        }
	      }
	      return bound;
	    }
	  },
	  newPattern: function(arg, separator) {
	    var isRegex, pattern, regexString;
	    if (separator == null) {
	      separator = '/';
	    }
	    isRegex = arg instanceof RegExp;
	    if (!(('string' === typeof arg) || isRegex)) {
	      throw new TypeError('argument must be a regex or a string');
	    }
	    [':', '*'].forEach(function(forbidden) {
	      if (separator === forbidden) {
	        throw new Error("separator can't be " + forbidden);
	      }
	    });
	    pattern = Object.create(module.exports.PatternPrototype);
	    pattern.isRegex = isRegex;
	    pattern.regex = isRegex ? arg : (regexString = module.exports.toRegexString(arg, separator), new RegExp(regexString));
	    if (!isRegex) {
	      pattern.names = module.exports.getNames(arg, separator);
	    }
	    return pattern;
	  },
	  escapeForRegex: function(string) {
	    return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	  },
	  getNames: function(arg, separator) {
	    var escapedSeparator, name, names, regex, results;
	    if (separator == null) {
	      separator = '/';
	    }
	    if (arg instanceof RegExp) {
	      return [];
	    }
	    escapedSeparator = module.exports.escapeForRegex(separator);
	    regex = new RegExp("((:?:[^" + escapedSeparator + "\(\)]+)|(?:[\*]))", 'g');
	    names = [];
	    results = regex.exec(arg);
	    while (results != null) {
	      name = results[1].slice(1);
	      if (name === '_') {
	        throw new TypeError(":_ can't be used as a pattern name in pattern " + arg);
	      }
	      if (__indexOf.call(names, name) >= 0) {
	        throw new TypeError("duplicate pattern name :" + name + " in pattern " + arg);
	      }
	      names.push(name || '_');
	      results = regex.exec(arg);
	    }
	    return names;
	  },
	  escapeSeparators: function(string, separator) {
	    var escapedSeparator, regex;
	    if (separator == null) {
	      separator = '/';
	    }
	    escapedSeparator = module.exports.escapeForRegex(separator);
	    regex = new RegExp(escapedSeparator, 'g');
	    return string.replace(regex, escapedSeparator);
	  },
	  toRegexString: function(string, separator) {
	    var escapedSeparator, stringWithEscapedSeparators;
	    if (separator == null) {
	      separator = '/';
	    }
	    stringWithEscapedSeparators = module.exports.escapeSeparators(string, separator);
	    stringWithEscapedSeparators = stringWithEscapedSeparators.replace(/\((.*?)\)/g, '(?:$1)?').replace(/\*/g, '(.*?)');
	    escapedSeparator = module.exports.escapeForRegex(separator);
	    module.exports.getNames(string, separator).forEach(function(name) {
	      return stringWithEscapedSeparators = stringWithEscapedSeparators.replace(':' + name, "([^\\" + separator + "]+)");
	    });
	    return "^" + stringWithEscapedSeparators + "$";
	  }
	};


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule emptyObject
	 */

	"use strict";

	var emptyObject = {};

	if ("production" !== process.env.NODE_ENV) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule CSSProperty
	 */

	"use strict";

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  columnCount: true,
	  fillOpacity: true,
	  flex: true,
	  flexGrow: true,
	  flexShrink: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  widows: true,
	  zIndex: true,
	  zoom: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function(prop) {
	  prefixes.forEach(function(prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundImage: true,
	    backgroundPosition: true,
	    backgroundRepeat: true,
	    backgroundColor: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	"use strict";

	var CSSProperty = __webpack_require__(129);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 ||
	      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	"use strict";

	var hyphenate = __webpack_require__(184);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *   > hyphenate('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenate('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventPluginHub
	 */

	"use strict";

	var EventPluginRegistry = __webpack_require__(133);
	var EventPluginUtils = __webpack_require__(43);

	var accumulate = __webpack_require__(185);
	var forEachAccumulated = __webpack_require__(186);
	var invariant = __webpack_require__(38);
	var isEventSupported = __webpack_require__(136);
	var monitorCodeUse = __webpack_require__(85);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @private
	 */
	var executeDispatchesAndRelease = function(event) {
	  if (event) {
	    var executeDispatch = EventPluginUtils.executeDispatch;
	    // Plugins can provide custom behavior when dispatching events.
	    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
	    if (PluginModule && PluginModule.executeDispatch) {
	      executeDispatch = PluginModule.executeDispatch;
	    }
	    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var invalid = !InstanceHandle||
	    !InstanceHandle.traverseTwoPhase ||
	    !InstanceHandle.traverseEnterLeave;
	  if (invalid) {
	    throw new Error('InstanceHandle not injected before use!');
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function(InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function() {
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function(id, registrationName, listener) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !listener || typeof listener === 'function',
	      'Expected %s listener to be a function, instead got type %s',
	      registrationName, typeof listener
	    ) : invariant(!listener || typeof listener === 'function'));

	    if ("production" !== process.env.NODE_ENV) {
	      // IE8 has no API for event capturing and the `onScroll` event doesn't
	      // bubble.
	      if (registrationName === 'onScroll' &&
	          !isEventSupported('scroll', true)) {
	        monitorCodeUse('react_no_scroll_event');
	        console.warn('This browser doesn\'t support the `onScroll` event');
	      }
	    }
	    var bankForRegistrationName =
	      listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function(id) {
	    for (var registrationName in listenerBank) {
	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0, l = plugins.length; i < l; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(
	          topLevelType,
	          topLevelTarget,
	          topLevelTargetID,
	          nativeEvent
	        );
	        if (extractedEvents) {
	          events = accumulate(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function(events) {
	    if (events) {
	      eventQueue = accumulate(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function() {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !eventQueue,
	      'processEventQueue(): Additional events were enqueued while processing ' +
	      'an event queue. Support for this has not yet been implemented.'
	    ) : invariant(!eventQueue));
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function() {
	    listenerBank = {};
	  },

	  __getListenerBank: function() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      pluginIndex > -1,
	      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
	      'the plugin ordering, `%s`.',
	      pluginName
	    ) : invariant(pluginIndex > -1));
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      PluginModule.extractEvents,
	      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
	      'method, but `%s` does not.',
	      pluginName
	    ) : invariant(PluginModule.extractEvents));
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        publishEventForPlugin(
	          publishedEvents[eventName],
	          PluginModule,
	          eventName
	        ),
	        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
	        eventName,
	        pluginName
	      ) : invariant(publishEventForPlugin(
	        publishedEvents[eventName],
	        PluginModule,
	        eventName
	      )));
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'event name, `%s`.',
	    eventName
	  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(
	          phasedRegistrationName,
	          PluginModule,
	          eventName
	        );
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(
	      dispatchConfig.registrationName,
	      PluginModule,
	      eventName
	    );
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.registrationNameModules[registrationName],
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'registration name, `%s`.',
	    registrationName
	  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] =
	    PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function(InjectedEventPluginOrder) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !EventPluginOrder,
	      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
	      'once. You are likely trying to load more than one copy of React.'
	    ) : invariant(!EventPluginOrder));
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) ||
	          namesToPlugins[pluginName] !== PluginModule) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !namesToPlugins[pluginName],
	          'EventPluginRegistry: Cannot inject two different event plugins ' +
	          'using the same name, `%s`.',
	          pluginName
	        ) : invariant(!namesToPlugins[pluginName]));
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[
	        dispatchConfig.registrationName
	      ] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[
	        dispatchConfig.phasedRegistrationNames[phase]
	      ];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	"use strict";

	var EventPluginHub = __webpack_require__(132);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue();
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events = EventPluginHub.extractEvents(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent
	    );

	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ViewportMetrics
	 */

	"use strict";

	var getUnboundedScrollPosition = __webpack_require__(153);

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function() {
	    var scrollPosition = getUnboundedScrollPosition(window);
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule isEventSupported
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature =
	    document.implementation &&
	    document.implementation.hasFeature &&
	    // always returns true in newer browsers as per the standard.
	    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	    document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM ||
	      capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventPropagators
	 */

	"use strict";

	var EventConstants = __webpack_require__(70);
	var EventPluginHub = __webpack_require__(132);

	var accumulate = __webpack_require__(185);
	var forEachAccumulated = __webpack_require__(186);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName =
	    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (!domID) {
	      throw new Error('Dispatching id must not be null');
	    }
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulate(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulate(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We can not perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
	      event.dispatchMarker,
	      accumulateDirectionalDispatches,
	      event
	    );
	  }
	}


	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulate(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulate(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
	    fromID,
	    toID,
	    accumulateDispatches,
	    leave,
	    enter
	  );
	}


	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}



	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticEvent = __webpack_require__(139);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticInputEvent,
	  InputEventInterface
	);

	module.exports = SyntheticInputEvent;



/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	"use strict";

	var PooledClass = __webpack_require__(71);

	var emptyFunction = __webpack_require__(62);
	var getEventTarget = __webpack_require__(152);
	var merge = __webpack_require__(39);
	var mergeInto = __webpack_require__(40);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: getEventTarget,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ?
	    nativeEvent.defaultPrevented :
	    nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	mergeInto(SyntheticEvent.prototype, {

	  preventDefault: function() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    event.preventDefault ? event.preventDefault() : event.returnValue = false;
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function() {
	    var event = this.nativeEvent;
	    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function(Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  mergeInto(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = merge(Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

	module.exports = SyntheticEvent;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule isTextInputElement
	 */

	"use strict";

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  return elem && (
	    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
	    elem.nodeName === 'TEXTAREA'
	  );
	}

	module.exports = isTextInputElement;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactInputSelection
	 */

	"use strict";

	var ReactDOMSelection = __webpack_require__(187);

	var containsNode = __webpack_require__(116);
	var focusNode = __webpack_require__(188);
	var getActiveElement = __webpack_require__(154);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function(elem) {
	    return elem && (
	      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
	      elem.nodeName === 'TEXTAREA' ||
	      elem.contentEditable === 'true'
	    );
	  },

	  getSelectionInformation: function() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange:
	          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
	          ReactInputSelection.getSelection(focusedElem) :
	          null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem &&
	        isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(
	          priorFocusedElem,
	          priorSelectionRange
	        );
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || {start: 0, end: 0};
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticEvent = __webpack_require__(139);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticCompositionEvent,
	  CompositionEventInterface
	);

	module.exports = SyntheticCompositionEvent;



/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getTextContentAccessor
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ?
	      'textContent' :
	      'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticUIEvent = __webpack_require__(161);
	var ViewportMetrics = __webpack_require__(135);

	var getEventModifierState = __webpack_require__(189);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function(event) {
	    return event.relatedTarget || (
	      event.fromElement === event.srcElement ?
	        event.toElement :
	        event.fromElement
	    );
	  },
	  // "Proprietary" Interface.
	  pageX: function(event) {
	    return 'pageX' in event ?
	      event.pageX :
	      event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function(event) {
	    return 'pageY' in event ?
	      event.pageY :
	      event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	/*jslint evil: true */

	"use strict";

	var CSSPropertyOperations = __webpack_require__(88);
	var DOMChildrenOperations = __webpack_require__(190);
	var DOMPropertyOperations = __webpack_require__(42);
	var ReactMount = __webpack_require__(54);
	var ReactPerf = __webpack_require__(56);

	var invariant = __webpack_require__(38);
	var setInnerHTML = __webpack_require__(147);

	/**
	 * Errors for properties that should not be updated with `updatePropertyById()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML:
	    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes. This is made injectable via
	 * `ReactComponent.BackendIDOperations`.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'updatePropertyByID',
	    function(id, name, value) {
	      var node = ReactMount.getNode(id);
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	        'updatePropertyByID(...): %s',
	        INVALID_PROPERTY_ERRORS[name]
	      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

	      // If we're updating to null or undefined, we should remove the property
	      // from the DOM node instead of inadvertantly setting to a string. This
	      // brings us in line with the same behavior we have on initial render.
	      if (value != null) {
	        DOMPropertyOperations.setValueForProperty(node, name, value);
	      } else {
	        DOMPropertyOperations.deleteValueForProperty(node, name);
	      }
	    }
	  ),

	  /**
	   * Updates a DOM node to remove a property. This should only be used to remove
	   * DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A property name to remove, see `DOMProperty`.
	   * @internal
	   */
	  deletePropertyByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'deletePropertyByID',
	    function(id, name, value) {
	      var node = ReactMount.getNode(id);
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	        'updatePropertyByID(...): %s',
	        INVALID_PROPERTY_ERRORS[name]
	      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
	      DOMPropertyOperations.deleteValueForProperty(node, name, value);
	    }
	  ),

	  /**
	   * Updates a DOM node with new style values. If a value is specified as '',
	   * the corresponding style property will be unset.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {object} styles Mapping from styles to values.
	   * @internal
	   */
	  updateStylesByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'updateStylesByID',
	    function(id, styles) {
	      var node = ReactMount.getNode(id);
	      CSSPropertyOperations.setValueForStyles(node, styles);
	    }
	  ),

	  /**
	   * Updates a DOM node's innerHTML.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} html An HTML string.
	   * @internal
	   */
	  updateInnerHTMLByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'updateInnerHTMLByID',
	    function(id, html) {
	      var node = ReactMount.getNode(id);
	      setInnerHTML(node, html);
	    }
	  ),

	  /**
	   * Updates a DOM node's text content set by `props.content`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} content Text content.
	   * @internal
	   */
	  updateTextContentByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'updateTextContentByID',
	    function(id, content) {
	      var node = ReactMount.getNode(id);
	      DOMChildrenOperations.updateTextContent(node, content);
	    }
	  ),

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'dangerouslyReplaceNodeWithMarkupByID',
	    function(id, markup) {
	      var node = ReactMount.getNode(id);
	      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	    }
	  ),

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: ReactPerf.measure(
	    'ReactDOMIDOperations',
	    'dangerouslyProcessChildrenUpdates',
	    function(updates, markup) {
	      for (var i = 0; i < updates.length; i++) {
	        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	      }
	      DOMChildrenOperations.processUpdates(updates, markup);
	    }
	  )
	};

	module.exports = ReactDOMIDOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	"use strict";

	var CallbackQueue = __webpack_require__(124);
	var PooledClass = __webpack_require__(71);
	var ReactBrowserEventEmitter = __webpack_require__(90);
	var ReactInputSelection = __webpack_require__(141);
	var ReactPutListenerQueue = __webpack_require__(166);
	var Transaction = __webpack_require__(125);

	var mixInto = __webpack_require__(84);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
	   *   restores the previous value.
	   */
	  close: function(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function() {
	    this.reactMountReady.notifyAll();
	  }
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: function() {
	    this.putListenerQueue.putListeners();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  SELECTION_RESTORATION,
	  EVENT_SUPPRESSION,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction() {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap proceedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	mixInto(ReactReconcileTransaction, Transaction.Mixin);
	mixInto(ReactReconcileTransaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule setInnerHTML
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function(node, html) {
	  node.innerHTML = html;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (html.match(/^[ \r\n\t\f]/) ||
	          html[0] === '<' && (
	            html.indexOf('<noscript') !== -1 ||
	            html.indexOf('<script') !== -1 ||
	            html.indexOf('<style') !== -1 ||
	            html.indexOf('<meta') !== -1 ||
	            html.indexOf('<link') !== -1)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        node.innerHTML = '\uFEFF' + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule AutoFocusMixin
	 * @typechecks static-only
	 */

	"use strict";

	var focusNode = __webpack_require__(188);

	var AutoFocusMixin = {
	  componentDidMount: function() {
	    if (this.props.autoFocus) {
	      focusNode(this.getDOMNode());
	    }
	  }
	};

	module.exports = AutoFocusMixin;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule LocalEventTrapMixin
	 */

	"use strict";

	var ReactBrowserEventEmitter = __webpack_require__(90);

	var accumulate = __webpack_require__(185);
	var forEachAccumulated = __webpack_require__(186);
	var invariant = __webpack_require__(38);

	function remove(event) {
	  event.remove();
	}

	var LocalEventTrapMixin = {
	  trapBubbledEvent:function(topLevelType, handlerBaseName) {
	    ("production" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
	    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      this.getDOMNode()
	    );
	    this._localEventListeners = accumulate(this._localEventListeners, listener);
	  },

	  // trapCapturedEvent would look nearly identical. We don't implement that
	  // method because it isn't currently needed.

	  componentWillUnmount:function() {
	    if (this._localEventListeners) {
	      forEachAccumulated(this._localEventListeners, remove);
	    }
	  }
	};

	module.exports = LocalEventTrapMixin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	"use strict";

	var ReactPropTypes = __webpack_require__(57);

	var invariant = __webpack_require__(38);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(input) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checkedLink == null || input.props.valueLink == null,
	    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
	    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
	  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
	}
	function _assertValueLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.value == null && input.props.onChange == null,
	    'Cannot provide a valueLink and a value or onChange event. If you want ' +
	    'to use value or onChange, you probably don\'t want to use valueLink.'
	  ) : invariant(input.props.value == null && input.props.onChange == null));
	}

	function _assertCheckedLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checked == null && input.props.onChange == null,
	    'Cannot provide a checkedLink and a checked property or onChange event. ' +
	    'If you want to use checked or onChange, you probably don\'t want to ' +
	    'use checkedLink'
	  ) : invariant(input.props.checked == null && input.props.onChange == null));
	}

	/**
	 * @param {SyntheticEvent} e change event to handle
	 */
	function _handleLinkedValueChange(e) {
	  /*jshint validthis:true */
	  this.props.valueLink.requestChange(e.target.value);
	}

	/**
	  * @param {SyntheticEvent} e change event to handle
	  */
	function _handleLinkedCheckChange(e) {
	  /*jshint validthis:true */
	  this.props.checkedLink.requestChange(e.target.checked);
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  Mixin: {
	    propTypes: {
	      value: function(props, propName, componentName) {
	        if (!props[propName] ||
	            hasReadOnlyValue[props.type] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return;
	        }
	        return new Error(
	          'You provided a `value` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultValue`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      checked: function(props, propName, componentName) {
	        if (!props[propName] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return;
	        }
	        return new Error(
	          'You provided a `checked` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultChecked`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      onChange: ReactPropTypes.func
	    }
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return input.props.valueLink.value;
	    }
	    return input.props.value;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function(input) {
	    if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return input.props.checkedLink.value;
	    }
	    return input.props.checked;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {function} change callback either from onChange prop or link.
	   */
	  getOnChange: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return _handleLinkedValueChange;
	    } else if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return _handleLinkedCheckChange;
	    }
	    return input.props.onChange;
	  }
	};

	module.exports = LinkedValueUtils;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * @providesModule EventListener
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(62);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function(target, eventType, callback) {
	    if (!target.addEventListener) {
	      if ("production" !== process.env.NODE_ENV) {
	        console.error(
	          'Attempted to listen to events during the capture phase on a ' +
	          'browser that does not support the capture phase. Your application ' +
	          'will not receive some events.'
	        );
	      }
	      return {
	        remove: emptyFunction
	      };
	    } else {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    }
	  },

	  registerDefault: function() {}
	};

	module.exports = EventListener;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	"use strict";

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document body is not yet defined.
	 */
	function getActiveElement() /*?DOMElement*/ {
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule shallowEqual
	 */

	"use strict";

	/**
	 * Performs equality by iterating through keys on an object and returning
	 * false when any key has values which are not strictly equal between
	 * objA and objB. Returns true when the values of all keys are strictly equal.
	 *
	 * @return {boolean}
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	  var key;
	  // Test for A's keys different from B.
	  for (key in objA) {
	    if (objA.hasOwnProperty(key) &&
	        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
	      return false;
	    }
	  }
	  // Test for B'a keys missing from A.
	  for (key in objB) {
	    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = shallowEqual;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticEvent = __webpack_require__(139);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function(event) {
	    return (
	      'clipboardData' in event ?
	        event.clipboardData :
	        window.clipboardData
	    );
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;



/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticUIEvent = __webpack_require__(161);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticUIEvent = __webpack_require__(161);

	var getEventKey = __webpack_require__(191);
	var getEventModifierState = __webpack_require__(189);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated but its replacement is not yet final and not
	    // implemented in any major browser.
	    if (event.type === 'keypress') {
	      // IE8 does not implement "charCode", but "keyCode" has the correct value.
	      return 'charCode' in event ? event.charCode : event.keyCode;
	    }
	    return 0;
	  },
	  keyCode: function(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event. There is no need to determine the type of the event
	    // as `keyCode` and `charCode` are either aliased or default to zero.
	    return event.keyCode || event.charCode;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticMouseEvent = __webpack_require__(144);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticUIEvent = __webpack_require__(161);

	var getEventModifierState = __webpack_require__(189);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticEvent = __webpack_require__(139);

	var getEventTarget = __webpack_require__(152);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	"use strict";

	var SyntheticMouseEvent = __webpack_require__(144);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function(event) {
	    return (
	      'deltaX' in event ? event.deltaX :
	      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
	    );
	  },
	  deltaY: function(event) {
	    return (
	      'deltaY' in event ? event.deltaY :
	      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	      'wheelDeltaY' in event ? -event.wheelDeltaY :
	      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	      'wheelDelta' in event ? -event.wheelDelta : 0
	    );
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	var merge = __webpack_require__(39);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  'mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  TEXT_CONTENT: 'set textContent',
	  'updatePropertyByID': 'update attribute',
	  'deletePropertyByID': 'delete attribute',
	  'updateStylesByID': 'update styles',
	  'updateInnerHTMLByID': 'set innerHTML',
	  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var id;

	    for (id in measurement.writes) {
	      measurement.writes[id].forEach(function(write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    }
	  }
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = merge(measurement.exclusive, measurement.inclusive);

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = merge(measurement.exclusive, measurement.inclusive);
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = merge(measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggerd
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	var performance = __webpack_require__(192);

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (!performance || !performance.now) {
	  performance = Date;
	}

	var performanceNow = performance.now.bind(performance);

	module.exports = performanceNow;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	var isNode = __webpack_require__(193);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactPutListenerQueue
	 */

	"use strict";

	var PooledClass = __webpack_require__(71);
	var ReactBrowserEventEmitter = __webpack_require__(90);

	var mixInto = __webpack_require__(84);

	function ReactPutListenerQueue() {
	  this.listenersToPut = [];
	}

	mixInto(ReactPutListenerQueue, {
	  enqueuePutListener: function(rootNodeID, propKey, propValue) {
	    this.listenersToPut.push({
	      rootNodeID: rootNodeID,
	      propKey: propKey,
	      propValue: propValue
	    });
	  },

	  putListeners: function() {
	    for (var i = 0; i < this.listenersToPut.length; i++) {
	      var listenerToPut = this.listenersToPut[i];
	      ReactBrowserEventEmitter.putListener(
	        listenerToPut.rootNodeID,
	        listenerToPut.propKey,
	        listenerToPut.propValue
	      );
	    }
	  },

	  reset: function() {
	    this.listenersToPut.length = 0;
	  },

	  destructor: function() {
	    this.reset();
	  }
	});

	PooledClass.addPoolingTo(ReactPutListenerQueue);

	module.exports = ReactPutListenerQueue;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule adler32
	 */

	/* jslint bitwise:true */

	"use strict";

	var MOD = 65521;

	// This is a clean-room implementation of adler32 designed for detecting
	// if markup is not what we expect it to be. It does not need to be
	// cryptographically strong, only reasonable good at detecting if markup
	// generated on the server is different than that on the client.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  for (var i = 0; i < data.length; i++) {
	    a = (a + data.charCodeAt(i)) % MOD;
	    b = (b + a) % MOD;
	  }
	  return a | (b << 16);
	}

	module.exports = adler32;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9af25aaeb6ca6d08d213b04841813eb5.gif"

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ca279c55a51ab2641c4712a333633581.gif"

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "645f50ba6c1e56f078fa018855d97eb0.gif"

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "939cf252f0eb4efbd2d170c974411c49.gif"

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "47de617fd1d745ad120ccb9e2924b98c.gif"

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f5b27137d3f5e9b1d91b16b37386dd03.gif"

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "08d606864d3ad3f0b98660d391f5a1c2.gif"

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2d66bcdc27cd89f71068e98a7a929712.gif"

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3e9816417b11485d454f9b3662b06e7b.eot"

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "60c2a8500e63bf211b7df9608f7613ea.svg"

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c9dec22105ad9330c811599b8b6464f8.woff"

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "71ab514d1cedda303417ad7a06472fea.ttf"

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5ae23ad29b67289a1375d2043e289c52.eot"

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f99a231ed57ee113b50b1c3e9f9fcdc3.svg"

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b683029bafe0305ac2234038a03e1541.woff"

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8cca2f02b0af2da365ff4d1755f29146.ttf"

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule accumulate
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Accumulates items that must not be null or undefined.
	 *
	 * This is used to conserve memory by avoiding array allocations.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	function accumulate(current, next) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    next != null,
	    'accumulate(...): Accumulated items must be not be null or undefined.'
	  ) : invariant(next != null));
	  if (current == null) {
	    return next;
	  } else {
	    // Both are not empty. Warning: Never call x.concat(y) when you are not
	    // certain that x is an Array (x could be a string with concat method).
	    var currentIsArray = Array.isArray(current);
	    var nextIsArray = Array.isArray(next);
	    if (currentIsArray) {
	      return current.concat(next);
	    } else {
	      if (nextIsArray) {
	        return [current].concat(next);
	      } else {
	        return [current, next];
	      }
	    }
	  }
	}

	module.exports = accumulate;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule forEachAccumulated
	 */

	"use strict";

	/**
	 * @param {array} an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule ReactDOMSelection
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	var getNodeForCharacterOffset = __webpack_require__(194);
	var getTextContentAccessor = __webpack_require__(143);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection();

	  if (selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(
	    selection.anchorNode,
	    selection.anchorOffset,
	    selection.focusNode,
	    selection.focusOffset
	  );

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(
	    tempRange.startContainer,
	    tempRange.startOffset,
	    tempRange.endContainer,
	    tempRange.endOffset
	  );

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	  detectionRange.detach();

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  var selection = window.getSelection();

	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ?
	            start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }

	    range.detach();
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule focusNode
	 */

	"use strict";

	/**
	 * IE8 throws if an input/textarea is disabled and we try to focus it.
	 * Focus only when necessary.
	 *
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  if (!node.disabled) {
	    node.focus();
	  }
	}

	module.exports = focusNode;


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	"use strict";

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  /*jshint validthis:true */
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	"use strict";

	var Danger = __webpack_require__(195);
	var ReactMultiChildUpdateTypes = __webpack_require__(119);

	var getTextContentAccessor = __webpack_require__(143);
	var invariant = __webpack_require__(38);

	/**
	 * The DOM property to use when setting text content.
	 *
	 * @type {string}
	 * @private
	 */
	var textContentAccessor = getTextContentAccessor();

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	  parentNode.insertBefore(
	    childNode,
	    parentNode.childNodes[index] || null
	  );
	}

	var updateTextContent;
	if (textContentAccessor === 'textContent') {
	  /**
	   * Sets the text content of `node` to `text`.
	   *
	   * @param {DOMElement} node Node to change
	   * @param {string} text New text content
	   */
	  updateTextContent = function(node, text) {
	    node.textContent = text;
	  };
	} else {
	  /**
	   * Sets the text content of `node` to `text`.
	   *
	   * @param {DOMElement} node Node to change
	   * @param {string} text New text content
	   */
	  updateTextContent = function(node, text) {
	    // In order to preserve newlines correctly, we can't use .innerText to set
	    // the contents (see #1080), so we empty the element then append a text node
	    while (node.firstChild) {
	      node.removeChild(node.firstChild);
	    }
	    if (text) {
	      var doc = node.ownerDocument || document;
	      node.appendChild(doc.createTextNode(text));
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: updateTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function(updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; update = updates[i]; i++) {
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
	          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        ("production" !== process.env.NODE_ENV ? invariant(
	          updatedChild,
	          'processUpdates(): Unable to find child %s of element. This ' +
	          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
	          'browser), usually due to forgetting a <tbody> when using tables, ' +
	          'nesting <p> or <a> tags, or using non-SVG elements in an <svg> '+
	          'parent. Try inspecting the child nodes of the element with React ' +
	          'ID `%s`.',
	          updatedIndex,
	          parentID
	        ) : invariant(updatedChild));

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; update = updates[k]; k++) {
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(
	            update.parentNode,
	            renderedMarkup[update.markupIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(
	            update.parentNode,
	            initialChildren[update.parentID][update.fromIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          updateTextContent(
	            update.parentNode,
	            update.textContent
	          );
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	"use strict";

	var invariant = __webpack_require__(38);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `which`/`keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    // Create the character from the `charCode` ourselves and use as an almost
	    // perfect replacement.
	    var charCode = 'charCode' in nativeEvent ?
	      nativeEvent.charCode :
	      nativeEvent.keyCode;

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }

	  ("production" !== process.env.NODE_ENV ? invariant(false, "Unexpected keyboard event type: %s", nativeEvent.type) : invariant(false));
	}

	module.exports = getEventKey;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance =
	    window.performance ||
	    window.msPerformance ||
	    window.webkitPerformance;
	}

	module.exports = performance || {};


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (
	    typeof Node === 'function' ? object instanceof Node :
	      typeof object === 'object' &&
	      typeof object.nodeType === 'number' &&
	      typeof object.nodeName === 'string'
	  ));
	}

	module.exports = isNode;


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	"use strict";

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType == 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	/*jslint evil: true, sub: true */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(37);

	var createNodesFromMarkup = __webpack_require__(196);
	var emptyFunction = __webpack_require__(62);
	var getMarkupWrap = __webpack_require__(197);
	var invariant = __webpack_require__(38);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function(markupList) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyRenderMarkup(...): Cannot render markup in a Worker ' +
	      'thread. This is likely a bug in the framework. Please report ' +
	      'immediately.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        markupList[i],
	        'dangerouslyRenderMarkup(...): Missing markup.'
	      ) : invariant(markupList[i]));
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      for (var resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(
	            OPEN_TAG_NAME_EXP,
	            // This index will be parsed back out below.
	            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
	          );
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(
	        markupListByNodeName.join(''),
	        emptyFunction // Do nothing special with <script> tags.
	      );

	      for (i = 0; i < renderNodes.length; ++i) {
	        var renderNode = renderNodes[i];
	        if (renderNode.hasAttribute &&
	            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          ("production" !== process.env.NODE_ENV ? invariant(
	            !resultList.hasOwnProperty(resultIndex),
	            'Danger: Assigning to an already-occupied result index.'
	          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;

	        } else if ("production" !== process.env.NODE_ENV) {
	          console.error(
	            "Danger: Discarding unexpected node:",
	            renderNode
	          );
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultListAssignmentCount === resultList.length,
	      'Danger: Did not assign to every index of resultList.'
	    ) : invariant(resultListAssignmentCount === resultList.length));

	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultList.length === markupList.length,
	      'Danger: Expected markup to render %s nodes, but rendered %s.',
	      markupList.length,
	      resultList.length
	    ) : invariant(resultList.length === markupList.length));

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
	      'worker thread. This is likely a bug in the framework. Please report ' +
	      'immediately.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      oldChild.tagName.toLowerCase() !== 'html',
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
	      '<html> node. This is because browser quirks make this unreliable ' +
	      'and/or slow. If you want to render to the root you must use ' +
	      'server rendering. See renderComponentToString().'
	    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

	    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*jslint evil: true, sub: true */

	var ExecutionEnvironment = __webpack_require__(37);

	var createArrayFrom = __webpack_require__(198);
	var getMarkupWrap = __webpack_require__(197);
	var invariant = __webpack_require__(38);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      handleScript,
	      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
	    ) : invariant(handleScript));
	    createArrayFrom(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFrom(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule getMarkupWrap
	 */

	var ExecutionEnvironment = __webpack_require__(37);

	var invariant = __webpack_require__(38);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	var shouldWrap = {
	  // Force wrapping for SVG elements because if they get created inside a <div>,
	  // they will be initialized in the wrong namespace (and will not display).
	  'circle': true,
	  'defs': true,
	  'ellipse': true,
	  'g': true,
	  'line': true,
	  'linearGradient': true,
	  'path': true,
	  'polygon': true,
	  'polyline': true,
	  'radialGradient': true,
	  'rect': true,
	  'stop': true,
	  'text': true
	};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg>', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap,

	  'circle': svgWrap,
	  'defs': svgWrap,
	  'ellipse': svgWrap,
	  'g': svgWrap,
	  'line': svgWrap,
	  'linearGradient': svgWrap,
	  'path': svgWrap,
	  'polygon': svgWrap,
	  'polyline': svgWrap,
	  'radialGradient': svgWrap,
	  'rect': svgWrap,
	  'stop': svgWrap,
	  'text': svgWrap
	};

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}


	module.exports = getMarkupWrap;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule createArrayFrom
	 * @typechecks
	 */

	var toArray = __webpack_require__(199);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj &&
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    ('length' in obj) &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    (typeof obj.nodeType != 'number') &&
	    (
	      // a real array
	      (// HTMLCollection/NodeList
	      (Array.isArray(obj) ||
	      // arguments
	      ('callee' in obj) || 'item' in obj))
	    )
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFrom = require('createArrayFrom');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFrom(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFrom(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFrom;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	var invariant = __webpack_require__(38);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFrom.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(obj) &&
	    (typeof obj === 'object' || typeof obj === 'function'),
	    'toArray: Array-like object expected'
	  ) : invariant(!Array.isArray(obj) &&
	  (typeof obj === 'object' || typeof obj === 'function')));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof length === 'number',
	    'toArray: Object needs a length property'
	  ) : invariant(typeof length === 'number'));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    length === 0 ||
	    (length - 1) in obj,
	    'toArray: Object should have keys for indices'
	  ) : invariant(length === 0 ||
	  (length - 1) in obj));

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))

/***/ }
/******/ ])
});
